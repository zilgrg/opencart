<?php class ModelSuperseoboxindex extends Model { private $ssb_data;private $ssb_helper;private $total=0;private $gen_pack_number=0;function __construct(){ global $registry;parent::__construct($registry);require_once DIR_CONFIG.'ssb_library/ssb_data.php';$this->ssb_data=ssb_data::getInstance();require_once DIR_CONFIG.'ssb_library/ssb_helper.php';$this->ssb_helper=ssb_helper::getInstance();} public function getCPBI_item($CPBI,$id_item){ $data_CPBI_item=$this->{'get_'.$CPBI}('',$id_item);return $data_CPBI_item;} public function getCPBI($CPBI,$categoryEntity='',$gen_pack_number=0,$internal_entity=''){ $data_CPBI=array();$time_start=microtime(true);$this->gen_pack_number=$gen_pack_number;if($CPBI=='CPBI_urls' AND $internal_entity==''){ $CPBI='all';}elseif($internal_entity !=''){ $CPBI=$internal_entity;} if($CPBI=='all'){ if($categoryEntity=='' OR $categoryEntity=='urls'){ $CPBIs=$this->ssb_data->getMatadata('CPBI',array('keys'=>true));}else{ $MD_entities=$this->ssb_data->getMatadata('Entites');$CPBIs=array_keys($MD_entities[$categoryEntity]);} $total=0;foreach($CPBIs as $CPBI_){ $data=$this->getCPBI($CPBI_,$categoryEntity,$gen_pack_number);$total+=$data['total'];$data_CPBI['data'][$CPBI_]=$data['data'];} $data_CPBI['total']=$total;$data_CPBI['name']='all';}else{ $gen_pack=$this->ssb_data->getGenPack($gen_pack_number,$CPBI,$categoryEntity);if($CPBI=='related_prod' OR $CPBI=='images' OR $categoryEntity=='images' OR $categoryEntity=='reviews'){ $CPBI='product';} $data_CPBI=$this->{'get_'.$CPBI}($gen_pack);} $this->ssb_data->getSpecialPatterns();return $data_CPBI;} private function get_product($gen_limit='',$item_id=''){ $languages=$this->ssb_helper->getLanguages();$this->total=0;$respond=array();foreach ($languages as $l_code=> $l_data){ $respond_lang=$this->get_product_lang($l_data,$gen_limit,$item_id);$respond =array_replace_recursive ($respond,$respond_lang);} return array('data'=> $respond,'total'=> $this->total,'name'=> 'product');} private function get_product_lang($l_data,$gen_limit,$item_id){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];$sql="SELECT pd.tag, pd.meta_description, pd.meta_keyword, pd.seo_title, pd.seo_h1, p.product_id, p.tax_class_id, p.price, p.model, m.name as b_name, p.sku, p.upc, pd.name, p.image, pd.description, md.description as b_description FROM ".DB_PREFIX."product_description pd    INNER JOIN ".DB_PREFIX."product p on pd.product_id = p.product_id     LEFT  JOIN ".DB_PREFIX."manufacturer m on m.manufacturer_id = p.manufacturer_id    LEFT  JOIN ".DB_PREFIX."manufacturer_description md on m.manufacturer_id = md.manufacturer_id and md.language_id = ".$l_id ." WHERE  pd.language_id = ".$l_id;if($item_id !==''){ $sql.=" AND p.product_id =".$item_id.";";}else{ $sql.=" LIMIT ".(int)$gen_limit['start'].",".(int)$gen_limit['limit'].";";} $query=$this->db->query($sql);$products=array();foreach($query->rows as $product){ if(!isset($products [$product['product_id']][$l_code])){ $sql="SELECT cd.category_id as c_id, cd.name as c_name, cd.description as c_description FROM ".DB_PREFIX."product_to_category pc       INNER  JOIN ".DB_PREFIX."category_description cd on cd.category_id = pc.category_id and cd.language_id = ".(int)$l_data['language_id']."  WHERE pc.product_id = '" . $product['product_id'] . "';";$query_cat=$this->db->query($sql);$categories=array('cn'=> array(),'c_id' => array(),'cd'=> array());foreach($query_cat->rows as $category){ $categories['cn'][] =$category['c_name'];$categories['c_id'][] =$category['c_id'];$categories['cd'][] =$category['c_description'];} $products [$product['product_id']][$l_code]=array( 'pn' => $product['name'],'pd' => $product['description'],'cn' => $categories['cn'],'c_id' => $categories['c_id'],'cd' => $categories['cd'],'bn' => $product['b_name'],'bd' => $product['b_description'],'pp' => $this->currency->format($product['price']),'pm' => $product['model'],'ps' => $product['sku'],'pu' => $product['upc'],'image' => $product['image'],'seo_field' => array( 'name' => $product['name'],'tags' => $product['tag'],'m_descrip'=> $product['meta_description'],'m_keywords'=> $product['meta_keyword'],'titles' => $product['seo_title'],'seo_h1'=> $product['seo_h1'],'descrip' => $product['description'] ) );$this->total++;} } return $products;} private function get_category($gen_limit='',$item_id=''){ $languages=$this->ssb_helper->getLanguages();$this->total=0;$respond=array();foreach ($languages as $l_code=> $l_data){ $respond_lang=$this->get_category_lang($l_data,$gen_limit,$item_id);$respond =array_replace_recursive ($respond,$respond_lang);} return array('data'=> $respond,'total'=> $this->total,'name'=> 'category');} private function get_category_lang($l_data,$gen_limit,$item_id){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];$sql="SELECT cd.tag, cd.meta_description, cd.meta_keyword, cd.seo_title, cd.seo_h1, c.image as c_image, cd.category_id, cd.name, cd.description, cdp.name as parent_name FROM ".DB_PREFIX."category c     INNER JOIN ".DB_PREFIX."category_description cd on c.category_id = cd.category_id     LEFT  JOIN ".DB_PREFIX."category_description cdp on (c.parent_id = cdp.category_id AND cdp.language_id = ".$l_id.")      WHERE  cd.language_id = ".$l_id;if($item_id !==''){ $sql.=" AND c.category_id =".$item_id.";";}else{ $sql.=" LIMIT ".(int)$gen_limit['start'].",".(int)$gen_limit['limit'].";";} $query=$this->db->query($sql);$categories=array();$totalProd=array();foreach($query->rows as $category){ if(!isset($categories [$category['category_id']][$l_code])){ if(!isset($totalProd[$category['category_id']])){ $sql_total_prod="SELECT COUNT(product_id) as totalProd FROM ".DB_PREFIX."product_to_category WHERE category_id = '". $category['category_id'] ."';";$query_total=$this->db->query($sql_total_prod);$totalProd[$category['category_id']]=$query_total->rows[0]['totalProd'];} $ep_data=array( 'totalProduct' => $totalProd[$category['category_id']],'CPBI' => 'category','id' => $category['category_id'],'l_id' => $l_id );$exampleProducts=$this->getExampleProducts($ep_data);$categories [$category['category_id']][$l_code]=array( 'cn' => $category['name'],'cd'=> $category['description'],'cp'=> !is_null($category['parent_name']) ? $category['parent_name']:'','ep'=> $exampleProducts,'tp'=> $totalProd[$category['category_id']],'image'=> $category['c_image'],'seo_field' => array( 'name' => $category['name'],'tags' => $category['tag'],'m_descrip'=> $category['meta_description'],'m_keywords'=> $category['meta_keyword'],'titles' => $category['seo_title'],'seo_h1' => $category['seo_h1'],'descrip' => $category['description'] ) );$this->total++;} } return $categories;} private function get_brand($gen_limit='',$item_id=''){ $languages=$this->ssb_helper->getLanguages();$this->total=0;$respond=array();foreach ($languages as $l_code=> $l_data){ $respond_lang=$this->get_brand_lang($l_data,$gen_limit,$item_id);$respond =array_replace_recursive ($respond,$respond_lang);} return array('data'=> $respond,'total'=> $this->total,'name'=> 'brand');} private function get_brand_lang($l_data,$gen_limit,$item_id){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];$sql="SELECT md.tag, md.meta_description, md.meta_keyword, md.seo_title, md.seo_h1, m.image, m.manufacturer_id, m.name, md.description FROM ".DB_PREFIX."manufacturer m     LEFT JOIN ".DB_PREFIX."manufacturer_description md on m.manufacturer_id = md.manufacturer_id";if(count($this->ssb_helper->getLanguages()) > 1){ $sql.=" WHERE md.language_id = ".$l_id;} if($item_id !==''){ $sql.=" AND m.manufacturer_id =".$item_id.";";}else{ $sql.=" LIMIT ".(int)$gen_limit['start'].",".(int)$gen_limit['limit'].";";} $query=$this->db->query($sql);$brands=array();$totalProd=array();foreach($query->rows as $brand){ if(!isset($brands[$brand['manufacturer_id']][$l_code])){ if(!isset($totalProd[$brand['manufacturer_id']])){ $sql_total_prod="SELECT COUNT(product_id) as totalProd FROM ".DB_PREFIX."product WHERE manufacturer_id = '". $brand['manufacturer_id'] ."';";$query_total=$this->db->query($sql_total_prod);$totalProd[$brand['manufacturer_id']]=$query_total->rows[0]['totalProd'];} $ep_data=array( 'totalProduct' => $totalProd[$brand['manufacturer_id']],'CPBI' => 'brand','id' => $brand['manufacturer_id'],'l_id' => $l_id );$exampleProducts=$this->getExampleProducts($ep_data);$brands[$brand['manufacturer_id']][$l_code]=array( 'bn' => $brand['name'],'bd'=> isset($brand['description']) ? $brand['description']:'','ep'=> $exampleProducts,'tp'=> $totalProd[$brand['manufacturer_id']],'image'=> $brand['image'],'seo_field' => array( 'name' => $brand['name'],'tags' => isset($brand['tag']) ? $brand['tag']:'','m_descrip'=> isset($brand['meta_description']) ? $brand['meta_description']:'','m_keywords'=> isset($brand['meta_keyword']) ? $brand['meta_keyword']:'','titles' => isset($brand['seo_title']) ? $brand['seo_title']:'','seo_h1' => isset($brand['seo_h1']) ? $brand['seo_h1']:'','descrip' => isset($brand['description']) ? $brand['description']:'' ) );$this->total++;} } return $brands;} private function get_info($gen_limit='',$item_id=''){ $languages=$this->ssb_helper->getLanguages();$this->total=0;$respond=array();foreach ($languages as $l_code=> $l_data){ $respond_lang=$this->get_info_lang($l_data,$gen_limit,$item_id);$respond =array_replace_recursive ($respond,$respond_lang);} return array('data'=> $respond,'total'=> $this->total,'name'=>'information');} private function get_info_lang($l_data,$gen_limit,$item_id){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];$sql="SELECT id.tag, id.meta_description, id.meta_keyword, id.seo_title, id.information_id, id.title as name, id.description FROM ".DB_PREFIX."information_description id WHERE id.language_id = ".$l_id;if($item_id !==''){ $sql.=" AND id.information_id =".$item_id.";";}else{ $sql.=" LIMIT ".(int)$gen_limit['start'].",".(int)$gen_limit['limit'].";";} $query=$this->db->query($sql);$infos=array();foreach($query->rows as $info){ if(!isset($infos[$info['information_id']][$l_code])){ $infos[$info['information_id']][$l_code]=array( 'in' => $info['name'],'id'=> $info['description'],'seo_field' => array( 'name' => $info['name'],'tags' => $info['tag'],'m_descrip'=> $info['meta_description'],'m_keywords'=> $info['meta_keyword'],'titles' => $info['seo_title'],'descrip' => $info['description'] ) );$this->total++;} } return $infos;} private function get_CPBI_urls(){ return $this->getCPBI('all','',$this->gen_pack_number);} private function get_STAN_urls(){ return array('data'=> array(),'total'=> 0,'name'=> 'STAN_urls');} private function get_related_prod(){ return $this->getCPBI('product','',$this->gen_pack_number);} public function delCPBI_Cache($CPBI='all'){ if ($CPBI !='all'){ $this->cache->delete('ssb.CPBI.'.$CPBI);}else{ $CPBIs=$this->ssb_data->getMatadata('CPBI',array('keys'=>true));foreach($CPBIs as $val){ $this->cache->delete('ssb.CPBI.'.$val);} } } public function getCountries($continent_code='') { if(!$continent_code){ $sql="SELECT c.name as name, c.code FROM ".DB_PREFIX."wc_countries c ORDER BY c.name";} else{ $sql="SELECT c.name as name, c.code FROM ".DB_PREFIX."wc_countries c WHERE continent_code = '". $continent_code ."' ORDER BY c.name";} $query=$this->db->query($sql);return $query->rows;} public function getContinents() { $sql="SELECT name, code, geonameId FROM ".DB_PREFIX."wc_continents c ORDER BY c.name";$query=$this->db->query($sql);return $query->rows;} public function getTotalSEOField($data,$all=false) { $page=isset($data['page']) ? (int)$data['page']:1;$data['start']=($page-1) * 20;$data['limit']=20;$func='getTotalSEOField_'.$data['type'];$respond=$this->$func($data,$all);return $respond;} private function getTotalSEOField_product($data,$all){ $languages=$this->ssb_helper->getLanguages();$defaultLanguge=$this->ssb_helper->getLang_Code_Id($this->ssb_helper->getDefaultLanguage());$respond=array();$sql="SELECT pd.product_id, pd.name, pd.tag, pd.meta_description, pd.meta_keyword, pd.seo_title, pd.seo_h1, pd.description, pd.language_id, ua.keyword  FROM ".DB_PREFIX."product_description pd     INNER JOIN ".DB_PREFIX."product p ON p.product_id = pd.product_id     LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('product_id=', CAST(p.product_id as CHAR)) AND ua.language_id = ".$defaultLanguge.") WHERE  pd.language_id = ".$defaultLanguge;$sql=$this->getSQLPrepare("p.status","pd.name",$data,$sql);$query=$this->db->query($sql);foreach($query->rows as $result){ $language_data=array( 'name' => $result['name'],'tags' => $result['tag'],'m_descrip'=> $result['meta_description'],'m_keywords'=> $result['meta_keyword'],'titles' => $result['seo_title'],'seo_h1' => $result['seo_h1'],'descrip' => $result['description'],'urls' => $result['keyword'] );if(!isset($respond[$result['product_id']]['related'])){ $sql="SELECT pd.name, pr.related_id FROM ".DB_PREFIX."product_related pr INNER JOIN ".DB_PREFIX."product_description pd ON (pd.product_id = pr.related_id AND pd.language_id = ".$defaultLanguge." ) WHERE pr.product_id = '" . $result['product_id'] . "';";$query_related=$this->db->query($sql);$product_related_data=array();foreach ($query_related->rows as $result_r) { $product_related_data[]=array( 'related_id'=> $result_r['related_id'],'name'=> $result_r['name'] );} $respond[$result['product_id']]['related']=$product_related_data;} $respond[$result['product_id']]['data'][$result['language_id']]=$language_data;if(count($languages) > 1){ foreach ($languages as $l_code=> $l_data){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];if($l_id !=$defaultLanguge){ $sql="SELECT pd.product_id, pd.name, pd.tag, pd.meta_description, pd.meta_keyword, pd.seo_title, pd.seo_h1, pd.description, pd.language_id, ua.keyword  FROM ".DB_PREFIX."product_description pd         INNER JOIN ".DB_PREFIX."product p ON p.product_id = pd.product_id         LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('product_id=', CAST(p.product_id as CHAR)) AND ua.language_id = ".$l_id.") WHERE  pd.language_id = ".$l_id." AND pd.product_id = ".$result['product_id'].";";$query_=$this->db->query($sql);foreach($query_->rows as $result_){ $language_data_=array( 'name' => $result_['name'],'tags' => $result_['tag'],'m_descrip'=> $result_['meta_description'],'m_keywords'=> $result_['meta_keyword'],'titles' => $result_['seo_title'],'seo_h1' => $result_['seo_h1'],'descrip' => $result_['description'],'urls' => $result_['keyword'] );$respond[$result['product_id']]['data'][$l_id]=$language_data_;} } } } } $this->load->model('catalog/product');$item_total=$this->model_catalog_product->getTotalProducts($data);$pagination=$this->getPaginationPrepare($item_total,$data,'product');return array('content'=> $respond,'pagination'=> $pagination);} private function getTotalSEOField_category($data,$all){ $languages=$this->ssb_helper->getLanguages();$defaultLanguge=$this->ssb_helper->getLang_Code_Id($this->ssb_helper->getDefaultLanguage());$respond=array();$sql="SELECT cd.category_id, cd.name, cd.tag, cd.meta_description, cd.meta_keyword, cd.seo_title, cd.seo_h1, cd.description, cd.language_id, ua.keyword  FROM ".DB_PREFIX."category_description cd LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('category_id=', CAST(cd.category_id as CHAR)) AND ua.language_id = cd.language_id) LEFT JOIN ".DB_PREFIX."category c ON c.category_id = cd.category_id WHERE  cd.language_id = ".$defaultLanguge;$sql=$this->getSQLPrepare("c.status","cd.name",$data,$sql);$query=$this->db->query($sql);foreach ($query->rows as $result) { $language_data=array( 'name' => $result['name'],'tags' => $result['tag'],'m_descrip'=> $result['meta_description'],'m_keywords'=> $result['meta_keyword'],'titles' => $result['seo_title'],'seo_h1' => $result['seo_h1'],'descrip' => $result['description'],'urls' => $result['keyword'] );$respond[$result['category_id']]['data'][$result['language_id']]=$language_data;if(count($languages) > 1){ foreach ($languages as $l_code=> $l_data){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];if($l_id !=$defaultLanguge){ $sql="SELECT cd.category_id, cd.name, cd.tag, cd.meta_description, cd.meta_keyword, cd.seo_title, cd.seo_h1, cd.description, cd.language_id, ua.keyword  FROM ".DB_PREFIX."category_description cd LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('category_id=', CAST(cd.category_id as CHAR)) AND ua.language_id = cd.language_id) LEFT JOIN ".DB_PREFIX."category c ON c.category_id = cd.category_id WHERE  cd.language_id = ".$l_id." AND cd.category_id = ".$result['category_id'].";";$query_=$this->db->query($sql);foreach($query_->rows as $result_){ $language_data_=array( 'name' => $result_['name'],'tags' => $result_['tag'],'m_descrip'=> $result_['meta_description'],'m_keywords'=> $result_['meta_keyword'],'titles' => $result_['seo_title'],'seo_h1' => $result_['seo_h1'],'descrip' => $result_['description'],'urls' => $result_['keyword'] );$respond[$result['category_id']]['data'][$l_id]=$language_data_;} } } } } $this->load->model('catalog/category');$item_total=$this->model_catalog_category->getTotalCategories();$pagination=$this->getPaginationPrepare($item_total,$data,'category');return array('content'=> $respond,'pagination'=> $pagination);} private function getTotalSEOField_brand($data,$all){ $languages=$this->ssb_helper->getLanguages();$defaultLanguge=$this->ssb_helper->getLang_Code_Id($this->ssb_helper->getDefaultLanguage());$respond=array();$sql="SELECT md.manufacturer_id, m.name, md.tag, md.meta_description, md.meta_keyword, md.seo_title, md.seo_h1, md.description, md.language_id, ua.keyword  FROM ".DB_PREFIX."manufacturer_description md LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('manufacturer_id=', CAST(md.manufacturer_id as CHAR)) AND ua.language_id = md.language_id) INNER JOIN ".DB_PREFIX."manufacturer m ON (m.manufacturer_id = md.manufacturer_id) WHERE  md.language_id = ".$defaultLanguge;$sql=$this->getSQLPrepare("","m.name",$data,$sql);$query=$this->db->query($sql);foreach ($query->rows as $result) { $language_data=array( 'name' => $result['name'],'tags' => $result['tag'],'m_descrip'=> $result['meta_description'],'m_keywords'=> $result['meta_keyword'],'titles' => $result['seo_title'],'seo_h1' => $result['seo_h1'],'descrip' => $result['description'],'urls' => $result['keyword'] );$respond[$result['manufacturer_id']]['data'][$result['language_id']]=$language_data;if(count($languages) > 1){ foreach ($languages as $l_code=> $l_data){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];if($l_id !=$defaultLanguge){ $sql="SELECT md.manufacturer_id, m.name, md.tag, md.meta_description, md.meta_keyword, md.seo_title, md.seo_h1, md.description, md.language_id, ua.keyword  FROM ".DB_PREFIX."manufacturer_description md LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('manufacturer_id=', CAST(md.manufacturer_id as CHAR)) AND ua.language_id = md.language_id) INNER JOIN ".DB_PREFIX."manufacturer m ON (m.manufacturer_id = md.manufacturer_id) WHERE  md.language_id = ".$l_id." AND md.manufacturer_id = ".$result['manufacturer_id'].";";$query_=$this->db->query($sql);foreach($query_->rows as $result_){ $language_data_=array( 'name' => $result_['name'],'tags' => $result_['tag'],'m_descrip'=> $result_['meta_description'],'m_keywords'=> $result_['meta_keyword'],'titles' => $result_['seo_title'],'seo_h1' => $result_['seo_h1'],'descrip' => $result_['description'],'urls' => $result_['keyword'] );$respond[$result['manufacturer_id']]['data'][$l_id]=$language_data_;} } } } } $this->load->model('catalog/manufacturer');$item_total=$this->model_catalog_manufacturer->getTotalManufacturers();$pagination=$this->getPaginationPrepare($item_total,$data,'brand');return array('content'=> $respond,'pagination'=> $pagination);} private function getTotalSEOField_info($data,$all){ $languages=$this->ssb_helper->getLanguages();$defaultLanguge=$this->ssb_helper->getLang_Code_Id($this->ssb_helper->getDefaultLanguage());$respond=array();$sql="SELECT id.information_id, id.title, id.seo_title, id.tag, id.meta_description, id.meta_keyword,  id.description, id.language_id, ua.keyword  FROM ".DB_PREFIX."information_description id LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('information_id=', CAST(id.information_id as CHAR)) AND ua.language_id = id.language_id) LEFT JOIN ".DB_PREFIX."information i ON i.information_id = id.information_id WHERE  id.language_id = ".$defaultLanguge;$sql=$this->getSQLPrepare("i.status","id.title",$data,$sql);$query=$this->db->query($sql);foreach ($query->rows as $result) { $language_data=array( 'name' => $result['title'],'tags' => $result['tag'],'m_descrip'=> $result['meta_description'],'m_keywords'=> $result['meta_keyword'],'titles' => $result['seo_title'],'urls' => $result['keyword'] );$respond[$result['information_id']]['data'][$result['language_id']]=$language_data;if(count($languages) > 1){ foreach ($languages as $l_code=> $l_data){ $l_code=$l_data['code'];$l_id =$l_data['language_id'];if($l_id !=$defaultLanguge){ $sql="SELECT id.information_id, id.title,  id.tag, id.meta_description, id.meta_keyword, id.seo_title, id.description, id.language_id, ua.keyword  FROM ".DB_PREFIX."information_description id LEFT JOIN ".DB_PREFIX."url_alias ua ON (ua.query = CONCAT('information_id=', CAST(id.information_id as CHAR)) AND ua.language_id = id.language_id) LEFT JOIN ".DB_PREFIX."information i ON i.information_id = id.information_id WHERE  id.language_id = ".$l_id." AND id.information_id = ".$result['information_id'].";";$query_=$this->db->query($sql);foreach($query_->rows as $result_){ $language_data_=array( 'name' => $result_['title'],'tags' => $result_['tag'],'m_descrip'=> $result_['meta_description'],'m_keywords'=> $result_['meta_keyword'],'titles' => $result_['seo_title'],'descrip' => $result_['description'],'urls' => $result_['keyword'] );$respond[$result['information_id']]['data'][$l_id]=$language_data_;} } } } } $this->load->model('catalog/information');$item_total=$this->model_catalog_information->getTotalInformations();$pagination=$this->getPaginationPrepare($item_total,$data,'info');return array('content'=> $respond,'pagination'=> $pagination);} private function getSQLPrepare($status='',$d_name,$data,$sql){ if (isset($data['filter_name'])) { $sql.=" AND ".$d_name." LIKE '%" . $this->db->escape($data['filter_name']) . "%'";} if($status){ $sql.=" AND ".$status." = 1";} $sql.=" ORDER BY ".$d_name;if (isset($data['order']) && ($data['order']=='DESC')) { $sql.=" DESC";} else { $sql.=" ASC";} $sql.=" LIMIT ".(int)$data['start'].",".(int)$data['limit'];return $sql;} private function getPaginationPrepare($item_total,$data,$type){ $url='&metaData[action]=getGenEditorContent&data[type]='.$data['type'];if (isset($data['order'])) { $url.='&data[order]='.$data['order'];} if (isset($data['filter_name'])) { $url.='&data[filter_name]='.urlencode(html_entity_decode($data['filter_name'],ENT_QUOTES,'UTF-8'));} if (isset($data['page'])) { $page=$data['page'];} else { $page=1;} $pagination =new Pagination();$pagination->total =$item_total;$pagination->page =$page;$pagination->limit =$this->config->get('config_admin_limit');$pagination->text ='Showing {start} to {end} of {total} ({pages} Pages)';$pagination->url =$this->url->link('module/superseobox/ajax','token='.$this->session->data['token'].$url.'&data[page]={page}','SSL');$pagination=$pagination->render();return $pagination;} public function saveGenEditorContent($data){ $func='saveGenEditorContent_'.$data['item_type'];$respond=$this->$func($data);return $respond;} private function saveGenEditorContent_product($data){ $item_id=$data['item_id'];$this->saveToDescripUrlTable('product_id','product_description',$data,$item_id);$related_product=isset($data['related_product'])? $data['related_product']:array();$sql="DELETE FROM ".DB_PREFIX."product_related WHERE product_id = ".$item_id.";";$query=$this->db->query($sql);foreach($related_product as $relat_id){ $sql="INSERT INTO ".DB_PREFIX."product_related (product_id, related_id, auto_gen) VALUES (".$item_id.", ".$relat_id.", 1);";$query=$this->db->query($sql);} return true;} private function saveGenEditorContent_category($data){ $item_id=$data['item_id'];$this->saveToDescripUrlTable('category_id','category_description',$data,$item_id);return true;} private function saveGenEditorContent_brand($data){ $item_id=$data['item_id'];$this->saveToDescripUrlTable('manufacturer_id','manufacturer_description',$data,$item_id);return true;} private function saveGenEditorContent_info($data){ $item_id=$data['item_id'];$d_name='information_id';$table='information_description';foreach($data['content'] as $lang_id=> $content){ $tag =$this->db->escape($content['tag']);$m_keyword =$this->db->escape($content['meta_keyword']);$m_description =$this->db->escape($content['meta_description']);$title =$this->db->escape($content['title']);$description=$this->db->escape($content['description']);$sql="UPDATE ".DB_PREFIX.$table." SET tag = '". $tag  ."', meta_keyword = '". $m_keyword ."', meta_description = '". $m_description ."', seo_title = '". $title ."' WHERE ".$d_name." = ".$item_id." AND language_id = ".$lang_id.";";$query=$this->db->query($sql);$keyword =$content['keyword'];if($keyword <> ''){ $sql="UPDATE ".DB_PREFIX."url_alias SET keyword = '". $keyword ."' WHERE query = '".$d_name."=". $item_id ."' AND language_id = ".$lang_id.";";$query=$this->db->query($sql);} } return true;} private function saveToDescripUrlTable($d_name,$table,$data,$item_id){ foreach($data['content'] as $lang_id=> $content){ $tag =$this->db->escape($content['tag']);$m_keyword =$this->db->escape($content['meta_keyword']);$m_description =$this->db->escape($content['meta_description']);$title =$this->db->escape($content['title']);$description=$this->db->escape($content['description']);$sql="UPDATE ".DB_PREFIX.$table." SET tag = '". $tag  ."', meta_keyword = '". $m_keyword ."', meta_description = '". $m_description ."', seo_title = '". $title ."', description = '". $description ."' WHERE ".$d_name." = ".$item_id." AND language_id = ".$lang_id.";";$query=$this->db->query($sql);$keyword =$content['keyword'];if($keyword <> ''){ $sql="UPDATE ".DB_PREFIX."url_alias SET keyword = '". $keyword ."' WHERE query = '".$d_name."=". $item_id ."' AND language_id = ".$lang_id.";";$query=$this->db->query($sql);} } } private function getExampleProducts($data,$get_total=9){ $query_prods=array();if( $data['totalProduct']==0)return $query_prods;if($data['CPBI']=='category'){ $sql_start="SELECT pd.name FROM ".DB_PREFIX."product_description pd       LEFT JOIN ".DB_PREFIX."product_to_category pc ON pc.product_id = pd.product_id      WHERE pc.category_id = '".$data['id']."' AND pd.language_id = '". $data['l_id'];    }else{     $sql_start = "SELECT pd.name FROM ". DB_PREFIX ."product p       LEFT JOIN ". DB_PREFIX ."product_description pd ON pd.product_id = p.product_id      WHERE p.manufacturer_id = '".$data['id']."' AND pd.language_id = '".$data['l_id'];} for ($i=1;$i <=$get_total;$i++) { if($i > $data['totalProduct'])continue;$rand_prod=rand(0,$data['totalProduct']-1);$sql_finish="' LIMIT ". $rand_prod .", 1;";     $sql_prod = $sql_start . $sql_finish;     $query_prod = $this->db->query($sql_prod);     if(count($query_prod->rows)){ $query_prods[] = $query_prod->rows[0]['name'];}    }    return $query_prods;   }   private function getSentences($text , $count) {    $text = strip_tags(html_entity_decode($text));    $pos = 0;    $found = false;    for ($x=0; $x<=$count; $x++)    {     $pos = strpos($text, '.', 0);     if($pos !== false){      $found = true;     }    }    if($found){     if($pos === false) {      return $text;     }else{      return substr($text, 0, $pos+1);     }    }   }  }  if (!function_exists('array_replace_recursive'))  {    function array_replace_recursive($array, $array1)    {      $args = func_get_args();      $array = $args[0];      if (!is_array($array))      {        return $array;      }      for ($i = 1; $i < count($args); $i++)      {        if (is_array($args[$i]))        {          $array = recurse($array, $args[$i]);        }      }      return $array;    }    function recurse($array, $array1)      {        foreach ($array1 as $key => $value)        {          if (!isset($array[$key]) || (isset($array[$key]) && !is_array($array[$key])))          {            $array[$key] = array();          }          if (is_array($value))          {            $value = recurse($array[$key], $value);          }          $array[$key] = $value;        }        return $array;      }  }  ?>
