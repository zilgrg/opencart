<?php class ssb_cache extends Controller { private $expire=3600;function __construct(){ global $registry;parent::__construct($registry);} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} public function selfURL($onlyUrl=true){ if(!isset($_SERVER['REQUEST_URI'])){ $suri=$_SERVER['PHP_SELF'];}else{ $suri=$_SERVER['REQUEST_URI'];} if($onlyUrl){ $suri=strtok($suri,'?');$suri=strtok($suri,'&');} $s=empty($_SERVER["HTTPS"]) ? '':($_SERVER["HTTPS"]=="on") ? "s":"";$sp=strtolower($_SERVER["SERVER_PROTOCOL"]);$pr=substr($sp,0,strpos($sp,"/")).$s;$pt=($_SERVER["SERVER_PORT"]=="80") ? "":(":".$_SERVER["SERVER_PORT"]);return $pr."://".$_SERVER['SERVER_NAME'].$pt.$suri;} public function cacheSet($key,$value,$folder=''){ $this->cacheDel($key,$folder);if($folder){ if(!is_dir(DIR_CACHE.$folder)){ mkdir(DIR_CACHE.$folder);} } $path=$folder ? DIR_CACHE.$folder.'/':DIR_CACHE;$file=$path.'cache.ssb.'.preg_replace('/[^A-Z0-9\._-]/i','',$key).'.'.(time()+$this->expire);$handle=fopen($file,'w');fwrite($handle,serialize($value));fclose($handle);} public function cacheGet($key,$folder=''){ $path=$folder ? DIR_CACHE.$folder.'/':DIR_CACHE;$files=glob($path.'cache.ssb.'.preg_replace('/[^A-Z0-9\._-]/i','',$key).'.*');if ($files) { $cache=file_get_contents($files[0]);$data=unserialize($cache);foreach ($files as $file) { $time=substr(strrchr($file,'.'),1);if ($time < time()) { if (file_exists($file)) { unlink($file);} } } return $data;}else{ return false;} } public function cacheDel($key,$folder='') { $path=$folder ? DIR_CACHE.$folder.'/':DIR_CACHE;$files=glob($path.'cache.ssb.'.preg_replace('/[^A-Z0-9\._-]/i','',$key).'.*');if ($files) { foreach ($files as $file) { if (file_exists($file)) { unlink($file);} } } } public function cacheClr($folders='all') { function rrmdir($dir) { if(!file_exists($dir))return;foreach(glob($dir.'/*') as $file) { if(is_dir($file)) rrmdir($file);else unlink($file);} rmdir($dir);} $paladinFolders=array('path_controller','snippet');$folders=$folders=='all' ? $paladinFolders:$folders;foreach($folders as $folder){ $dir=DIR_CACHE.$folder;rrmdir($dir);} $files=glob(DIR_CACHE.'cache.ssb.*');if ($files) { foreach ($files as $file) { if (file_exists($file)) { unlink($file);} } } } } ?>
