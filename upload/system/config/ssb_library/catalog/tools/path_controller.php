<?php class pathController extends Controller { private $ssb_cache;function __construct(){ global $registry;parent::__construct($registry);require_once DIR_CONFIG.'ssb_library/ssb_cache.php';$this->ssb_cache=ssb_cache::getInstance();} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} private function getAllProductCategories($product_id) { $sql="SELECT * FROM ".DB_PREFIX."product_to_category WHERE product_id = '" . (int)$product_id . "'";$query=$this->db->query($sql);return $query->rows;} private function getPath($parent_id,$current_path='',$name='') { $this->load->model('catalog/category');$category_info=$this->model_catalog_category->getCategory($parent_id);if ($category_info AND $category_info['status']) { $i=1;while($category_info['parent_id'] > 0) { $paths[$i]=array('name'=> $category_info['name'],'id'=> $category_info['category_id']);$category_info=$this->model_catalog_category->getCategory($category_info['parent_id']);$i++;} $paths[$i]=array('name'=> $category_info['name'],'id'=> $category_info['category_id']);$result=$paths;$path_length=count($paths);foreach($result as $i=> $section){ $path=$section['id'];for ($s=$i+1;$s <=$path_length;$s++) { $path=$result[$s]['id'].'_'.$path;} $result[$i]['path']=$path;} return array_reverse($result);}else{ return false;} } public function getProductPath($product_id,$mode) { $cache_name='path_product'.(int)$this->config->get('config_language_id').'.'.(int)$this->config->get('config_store_id').'.'.(int)$product_id.'.'.$mode;$paths=$this->ssb_cache->cacheGet($cache_name,'path_controller');if ($paths) return $paths;$categories=$this->getAllProductCategories($product_id);$paths=array();if($categories) { foreach($categories as $category){ $path=$this->getPath($category['category_id']);if($path){ $paths[]=$path;} } } $result=$paths[0];switch ($mode) { case 'shortest':foreach($paths as $i=> $path){ if(isset($paths[$i+1])){ if(count($paths[$i]) > count($paths[$i+1])){ $result=$paths[$i+1];} } } break;case 'longest':foreach($paths as $i=> $path){ if(isset($paths[$i+1])){ if(count($paths[$i]) < count($paths[$i+1])){ $result=$paths[$i+1];} } } break;} $this->ssb_cache->cacheSet($cache_name,$result,'path_controller');return $result;} public function getCaregoryPath($category_id,$mode) { $cache_name='path_category.'.(int)$this->config->get('config_language_id').'.'.(int)$this->config->get('config_store_id').'.'.(int)$category_id.'.'.$mode;$paths=$this->ssb_cache->cacheGet($cache_name,'path_controller');if ($paths) return $paths;$paths=array();$paths=$this->getPath($category_id);$this->ssb_cache->cacheSet($cache_name,$paths,'path_controller');return $paths;} } ?>
