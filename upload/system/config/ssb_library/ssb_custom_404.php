<?php class ssb_custom_404 extends Controller { private $pagin_limit=30;function __construct(){ global $registry;parent::__construct($registry);} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} public function getAllUrl404($data=array()){ $page=isset($data['page']) ? (int)$data['page']:1;$data['start']=($page-1) * $this->pagin_limit;$data['limit']=$this->pagin_limit;$sql="SELECT * FROM ".DB_PREFIX."custom_url_404";$sql.=" ORDER BY hit DESC";$sql.=" LIMIT ".(int)$data['start'].",".(int)$data['limit'];$query=$this->db->query($sql);$data['total']=count($query->rows);$allUrl404=array( 'pagination'=> $this->getPagination($data),'data' => $query->rows );return $allUrl404;} private function getPagination($data){ $total=$this->getTotal();$url ='&metaData[action]=getRedirect404Data';$page=isset($data['page']) ? (int)$data['page']:1;$pagination =new Pagination();$pagination->total =$total;$pagination->page =$page;$pagination->limit =$this->pagin_limit;$pagination->text ='Showing {start} to {end} of {total} ({pages} Pages)';$pagination->url =$this->url->link('module/superseobox/ajax','token='.$this->session->data['token'].$url.'&data[page]={page}','SSL');$pagination=$pagination->render();return $pagination;} public function getTotal(){ $query=$this->db->query("SELECT COUNT(*) AS total FROM ".DB_PREFIX."custom_url_404");return $query->row['total'];} public function getUrl404($data=array()){ if(!is_array($data) AND !count($data))return;if(isset($data['url_404'])){ $val=urldecode($data['url_404']);$val=$this->db->escape(html_entity_decode($val,ENT_QUOTES,'UTF-8'));$sql="SELECT * FROM ".DB_PREFIX."custom_url_404 WHERE url_404 = '" . $val . "'";}elseif(isset($data['custom_url_404_id'])){ $val=(int)$data['custom_url_404_id'];$sql="SELECT * FROM ".DB_PREFIX."custom_url_404 WHERE custom_url_404_id = '" . $val . "'";}elseif(isset($data['url_redirect'])){ $val=urldecode($data['url_redirect']);$val=$this->db->escape(html_entity_decode($val,ENT_QUOTES,'UTF-8'));$sql="SELECT * FROM ".DB_PREFIX."custom_url_404 WHERE url_redirect = '" . $val . "'";} $query=$this->db->query($sql);return count($query->rows) ? $query->rows[0]:false;} public function addHit($custom_url_404_id){ $url_404=$this->getUrl404(array('custom_url_404_id'=> $custom_url_404_id));if($url_404){ $new_hit=$url_404['hit']+1;$this->db->query("UPDATE ".DB_PREFIX."custom_url_404 SET hit = ".$new_hit." WHERE custom_url_404_id = '" . (int)$custom_url_404_id . "'");} } public function deleteAll(){ $sql="DELETE FROM ".DB_PREFIX."custom_url_404 WHERE 1";$query=$this->db->query($sql);} public function save($data) { foreach($data as $item_id=> $data_){ $this->saveItem($data_,$item_id);} } public function saveItem($data,$item_id) { if($item_id=="new_row"){ foreach($data as $i=> $data_){ $this->insertUrl($data_);} return;} if($this->getUrl404(array('custom_url_404_id'=> $item_id)) !==false){ $this->editUrl($item_id,$data);}else{ $this->insertUrl($data);} } public function insertUrl($data=array()){ $url_404=isset($data['url_404']) ? urldecode($data['url_404']):'';$url_redirect=isset($data['url_redirect']) ? urldecode($data['url_redirect']):'';$this->delUrl(array('url_404'=> $url_404));$url_404=$this->db->escape(html_entity_decode($url_404,ENT_QUOTES,'UTF-8'));$url_redirect=$this->db->escape(html_entity_decode($url_redirect,ENT_QUOTES,'UTF-8'));if($url_404 OR $url_redirect){ $sql="INSERT INTO ".DB_PREFIX."custom_url_404 SET hit = 1, url_404 = '" . $url_404 . "', url_redirect = '". $url_redirect ."'";$this->db->query($sql);} } public function editUrl($item_id,$data){ $hit =isset($data['hit']) ? "`hit` = ".$data['hit'].", ":'';$url_404=isset($data['url_404']) ? urldecode($data['url_404']):'';$url_404=$this->db->escape(html_entity_decode($url_404,ENT_QUOTES,'UTF-8'));$url_404=$url_404 ? "`url_404` = '" . $url_404 . "', ":'';$url_redirect=isset($data['url_redirect']) ? urldecode($data['url_redirect']):'';$url_redirect=$this->db->escape(html_entity_decode($url_redirect,ENT_QUOTES,'UTF-8'));$url_redirect=$url_redirect ? "`url_redirect` = '" . $url_redirect . "', ":'';$set=rtrim($hit.$url_404.$url_redirect,", ");if($set){ $sql="UPDATE ".DB_PREFIX."custom_url_404 SET ".$set." WHERE custom_url_404_id = ".$item_id.";";$this->db->query($sql);} } public function delUrl($data=array()){ if(!is_array($data) AND !count($data))return;if(isset($data['url_404'])){ $val=urldecode($data['url_404']);$val=$this->db->escape(html_entity_decode($val,ENT_QUOTES,'UTF-8'));$sql="DELETE FROM ".DB_PREFIX."custom_url_404 WHERE url_404 = '" . $val . "'";}elseif(isset($data['custom_url_404_id'])){ $val=(int)$data['custom_url_404_id'];$sql="DELETE FROM ".DB_PREFIX."custom_url_404 WHERE custom_url_404_id = '" . $val . "'";}elseif(isset($data['url_redirect'])){ $val=urldecode($data['url_redirect']);$val=$this->db->escape(html_entity_decode($val,ENT_QUOTES,'UTF-8'));$sql="DELETE FROM ".DB_PREFIX."custom_url_404 WHERE url_redirect = '" . $val . "'";} $query=$this->db->query($sql);} } ?>
