<?php class ssb_category_template extends Controller { function __construct(){ global $registry;parent::__construct($registry);} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} public function getCategoryTemplate($data=array(),$prepare_respond=false){ $condition='';if(isset($data['category_entity'])){ $condition.=" AND category_entity = '" . $data['category_entity'] . "'";} if(isset($data['category_id'])){ $condition.=" AND category_id = ".(int)$data['category_id'];} if(isset($data['l_code'])){ $condition.=" AND l_code = ".(int)$data['l_code'];} $sql="SELECT * FROM ".DB_PREFIX."category_psm_template WHERE 1 ".$condition.";";$query=$this->db->query($sql);$respond=false;if(count($query->rows)){ if($prepare_respond){ $respond=$this->prepareRespond($query->rows);}else{ $respond=$query->rows;} } return $respond;} public function prepareRespond($data,$addCategoryName=false){ $respond=array();foreach($data as $val){ if($addCategoryName){ $respond[$val['category_entity']][$val['category_id']][$val['l_code']]=$val['template'];}else{ $respond[$val['category_id']][$val['l_code']]=$val['template'];} } return $respond;} public function clearAll($entityCategory){ $sql="DELETE FROM ".DB_PREFIX."category_psm_template WHERE category_entity = '" . $entityCategory . "'";$query=$this->db->query($sql);} public function clearCategory($entityCategory,$data){ $sql="DELETE FROM ".DB_PREFIX."category_psm_template WHERE category_entity = '" . $entityCategory . "'";foreach($data as $category_id=> $l_code){ $condition=" AND category_id = ".$category_id." AND l_code = '" . $l_code . "';";$currentsql=$sql.$condition;$query=$this->db->query($currentsql);} } public function save($entityCategory,$data){ if(!$data['template']){ $this->clearCategory($entityCategory,array((int)$data['category_id']=> $data['l_code']));return;} if($this->isItem($entityCategory,$data)){ $sql="UPDATE ".DB_PREFIX."category_psm_template SET `template`='" . $this->db->escape($data['template']) . "' WHERE  category_entity = '". $entityCategory ."' AND category_id = '" . (int)$data['category_id'] . "' AND l_code = '" . $data['l_code'] . "';";}else{ $sql="INSERT INTO ".DB_PREFIX."category_psm_template (`category_entity`, `category_id`, `l_code`, `template`) VALUES ('" . $entityCategory . "', '" . (int)$data['category_id'] . "', '" . $data['l_code'] . "', '" . $this->db->escape($data['template']) . "');";} $query=$this->db->query($sql);} public function isItem($entityCategory,$data) { $sql="SELECT * FROM ".DB_PREFIX."category_psm_template WHERE category_entity = '" . $entityCategory . "' AND category_id = ".$data['category_id']." AND l_code = '" . $data['l_code'] . "';";$query=$this->db->query($sql);if(!count($query->rows)){ return false;}else{ return true;} } public function getCategories($data) { $category_data=array();$sql="SELECT * FROM ".DB_PREFIX."category c LEFT JOIN ".DB_PREFIX."category_description cd ON (c.category_id = cd.category_id) WHERE cd.language_id = ".(int)$this->config->get('config_language_id');$sql.=" ORDER BY c.sort_order, cd.name ASC";if (isset($data['start']) || isset($data['limit'])) { if ($data['start'] < 0) { $data['start']=0;} if ($data['limit'] < 1) { $data['limit']=20;} $sql.=" LIMIT ".(int)$data['start'].",".(int)$data['limit'];} $query=$this->db->query($sql);foreach ($query->rows as $result) { $category_data[]=array( 'category_id'=> $result['category_id'],'name' => $this->getPath($result['category_id'],$this->config->get('config_language_id')),'status' => $result['status'],'sort_order' => $result['sort_order'] );} return $category_data;} public function getPath($category_id) { $query=$this->db->query("SELECT name, parent_id FROM ".DB_PREFIX."category c LEFT JOIN ".DB_PREFIX."category_description cd ON (c.category_id = cd.category_id) WHERE c.category_id = '" . (int)$category_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY c.sort_order, cd.name ASC");if ($query->row['parent_id']) { return $this->getPath($query->row['parent_id'],$this->config->get('config_language_id')).$this->language->get('text_separator').$query->row['name'];} else { return $query->row['name'];} } } ?>
