<?php class gen_urls extends Controller { private $ssb_data;private $transliteration;private $seo_data=array();private $g_count =0;private $category_template =array();private $def_data=array( 'entity_cat' => '','entity_name'=> '','CPBI' => 'all','id_entity' => '','testgenerator'=> false );function __construct(){ global $registry;parent::__construct($registry);require_once DIR_CONFIG.'ssb_library/ssb_helper.php';$this->ssb_helper=ssb_helper::getInstance();require_once DIR_CONFIG.'ssb_library/admin/generators/gen_helper.php';$this->gen_helper=gen_helper::getInstance();require_once DIR_CONFIG.'ssb_library/admin/transliteration/transliteration.php';$this->transliteration=transliteration::getInstance();require_once DIR_CONFIG.'ssb_library/ssb_data.php';$this->ssb_data=ssb_data::getInstance();} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} public function generate($data){ $time_start=microtime(true);$sql="UPDATE ".DB_PREFIX."setting SET `value` = '1' WHERE `group` = 'config' AND `key` = 'config_seo_url';";$this->db->query($sql);extract(array_merge($this->def_data,$data));$additionData=isset($additionData) ? $additionData:'';$res_count=0;$res_seo_data=array();if($entity_name !='STAN_urls'){ if($id_entity==''){ $CPBI=$entity_name=='CPBI_urls' ? 'all':$entity_name;} if($CPBI=='all'){ $CPBIs=$this->ssb_data->getMatadata('CPBI',array('keys'=>true));foreach($CPBIs as $CPBI){ $this->setVars_Common($entity_name,$CPBI,$testgenerator,$additionData,$pack);$this->doGenerate_CPBI_urls($CPBI,$id_entity);$res_count+=$this->g_count;$res_seo_data=array_merge($res_seo_data,$this->seo_data);} }else{ $pack=isset($pack) ? $pack:0;$this->setVars_Common($entity_name,$CPBI,$testgenerator,$additionData,$pack);$this->doGenerate_CPBI_urls($CPBI,$id_entity);$res_count =$this->g_count;$res_seo_data=$this->seo_data;} }else{ $this->setVars_Common($entity_name,$CPBI,$testgenerator);$this->doGenerate_STAN_urls($testgenerator);$res_count =$this->g_count;$res_seo_data=$this->seo_data;} $time_end=microtime(true);$time=$time_end-$time_start;return array('time'=> $time,'count'=> $res_count,'seo_data'=> $res_seo_data);} public function doGenerate_CPBI_urls($CPBI,$id_entity=''){ if($id_entity){ $CPBI_item=$this->ssb_data->getCPBI_item($CPBI,$id_entity);$CPBI_lang=$CPBI_item['data'][$id_entity];$this->setVars_CPBI_Process($CPBI,$id_entity,$CPBI_lang);$meta_CPBI=$this->ssb_data->getMatadata('CPBI',array('val'=> 'db_name'));$db_name=$meta_CPBI[$CPBI];$l_code=$this->active_lang_code;$val =$CPBI_lang[$this->active_lang_code];if(isset($this->templates[$l_code])){ $status=$this->genProcess_CPBI_urls($l_code,$val,$id_entity,$CPBI);if($status OR $this->testgenerator){ $this->g_count++;} unset($CPBI_lang[$this->active_lang_code]);} foreach($CPBI_lang as $l_code=> $val){ $language_id=$this->ssb_helper->getLang_Code_Id($l_code);if($this->isSeoUrl($db_name.'_id='.$id_entity,$language_id)){ $generate_status=$this->ssb_data->getEntityStatus('urls','CPBI_urls',$CPBI);if($generate_status){ $this->db->query("UPDATE ".DB_PREFIX."url_alias SET auto_gen = 'CPBI_urls' WHERE query = '" . $db_name . '_id=' . $id_entity . "' AND language_id = '". $language_id ."'");} continue;} $status=$this->genProcess_CPBI_urls($l_code,$val,$id_entity,$CPBI);if($status OR $this->testgenerator){ $this->g_count++;} } }else{ $data_CPBI=$this->ssb_data->getCPBI('CPBI_urls','urls',$this->pack,$CPBI);$CPBI_data=$data_CPBI['data'];foreach($CPBI_data as $CPBI_id=> $CPBI_lang){ $this->setVars_CPBI_Process($CPBI,$CPBI_id,$CPBI_lang);$l_code=$this->active_lang_code;$val =$CPBI_lang[$this->active_lang_code];if(isset($this->templates[$l_code])){ $status=$this->genProcess_CPBI_urls($l_code,$val,$CPBI_id,$CPBI);if($status OR $this->testgenerator){ $this->g_count++;} unset($CPBI_lang[$this->active_lang_code]);} foreach($CPBI_lang as $l_code=> $val){ if(!isset($this->templates[$l_code]))continue;$status=$this->genProcess_CPBI_urls($l_code,$val,$CPBI_id,$CPBI);if($status OR $this->testgenerator){ $this->g_count++;} } if($this->testgenerator){ if($this->g_count>30)break;} } if($this->testgenerator){ $testData=array('CPBI'=> $CPBI);$this->endSeoData('CPBI_urls',$testData);} } } public function doGenerate_STAN_urls($testgenerator){ foreach($this->STAN_urls_data as $page_urls){ foreach($page_urls[1] as $l_code=> $page_url){ if($page_url)$page_url.=$this->STAN_urls_ext;$this->g_count++;if(!$testgenerator){ $language_id=$this->ssb_helper->getLang_Code_Id($l_code);if($this->isSeoUrl($page_urls[0],$language_id)){ $sql="DELETE FROM ".DB_PREFIX."url_alias WHERE query = '". $page_urls[0] ."' AND language_id=".(int)$language_id;} $this->saveSeoURL($page_urls[0],$page_url,'STAN_urls',$language_id);}else{ $testData=array( 'count'=> $this->g_count,'name'=> $page_urls[0],'seoURL'=> $page_url,'l_code'=> $l_code );$this->fillSeoData('STAN_urls',$l_code,$testData);} } } $this->endSeoData('STAN_urls');} private function setVars_CPBI_Process($CPBI,$CPBI_id=false,$CPBI_lang){ $setting_entities =$this->ssb_data->getSetting();$this->templates =$setting_entities['entity']['urls']['CPBI_urls']['data'][$CPBI]['data'];$this->templ_objs =$this->gen_helper->parseTemplate('',$CPBI,$this->templates);$this->category_data=false;if($this->category_template AND count($this->category_template) AND $CPBI=='product'){ $lang_values=array_values($CPBI_lang);$cat_ids=$lang_values[0]['c_id'];foreach($this->category_template as $cat_id=> $cat_val){ if(is_array($cat_ids) AND in_array($cat_id,$cat_ids)){ $this->templates =$cat_val;$this->templ_objs =$this->gen_helper->parseTemplate('',$CPBI,$this->templates);$this->category_data =true;$this->category_data_lang_array=array_keys($cat_val);break;} } } } private function setVars_Common($entity_name,$CPBI,$testgenerator,$additionData='',$pack=0){ $this->seo_data =array();$this->g_count =0;$this->testgenerator=$testgenerator;$this->pack =$pack;$setting =$this->ssb_data->getSetting();$this->active_lang_code =$this->ssb_helper->getDefaultLanguage();$this->active_language_id=$this->ssb_helper->getLang_Code_Id($this->active_lang_code);if($entity_name !='STAN_urls'){ $this->national_lang=isset($setting['entity']['urls']['CPBI_urls']['national_lang'])? $setting['entity']['urls']['CPBI_urls']['national_lang']:false;$this->CPBI_alias =$this->ssb_data->getMatadata('CPBI',array('val'=>'alias'));$meta_CPBI=$this->ssb_data->getMatadata('CPBI',array('val'=>'db_name'));$this->CPBI_db_name =$meta_CPBI[$CPBI];$this->CPBI_urls_ext=$setting['entity']['urls']['CPBI_urls']['ext'];$this->specialPatterns=$this->ssb_data->getPatterns('special');$this->condition=isset($additionData['condition']) ? $additionData['condition']:'';if($CPBI=='product'){ require_once DIR_CONFIG.'ssb_library/ssb_category_template.php';$ssb_category_template=ssb_category_template::getInstance();$this->category_template=$ssb_category_template->getCategoryTemplate(array('category_entity'=> 'urls'),true);}else{ $this->category_template=array();} }else{ $this->STAN_urls_data=$setting['entity']['urls']['STAN_urls']['data'];$this->STAN_urls_ext=$setting['entity']['urls']['STAN_urls']['ext'];} } private function genProcess_CPBI_urls($l_code,$val,$CPBI_id,$CPBI){ $language_id=$this->ssb_helper->getLang_Code_Id($l_code);$query=$this->CPBI_db_name."_id=".$CPBI_id;$orig_name=$name=$val[$this->CPBI_alias[$CPBI]['name']];$replacinArr=$this->ssb_data->getReplacingArr('urls',$CPBI);if($this->templates[$l_code] !=''){ $name=$this->gen_helper->getSeoString( $this->templ_objs[$l_code],$this->templates[$l_code],$this->specialPatterns,$val,$CPBI,$l_code,'CPBI_urls',$replacinArr);}elseif(count($replacinArr)){ $param=array('product'=> 'pn','category'=> 'cn','brand'=> 'bn','info'=> 'in');$param=$param[$CPBI];if(is_array($replacinArr[$param])){ $search =$replacinArr[$param]['search'];$replace=$replacinArr[$param]['replace'];$name=str_replace($search,$replace,$name);} } $seoURL=$this->transliteration->get($name,$this->national_lang);$old_keyword=false;$CPBI_keyword=false;if($this->condition=='gen_only_for_empty'){ $sql="SELECT * FROM ".DB_PREFIX."url_alias WHERE query = '" . $query . "';";$exist_urls=$this->db->query($sql);foreach($exist_urls->rows as $exist_url){ if($exist_url['auto_gen']=='CPBI_urls'){ if($exist_url['language_id']==$language_id AND !$this->testgenerator){ return false;} }elseif($exist_url['language_id']==$this->active_language_id AND $language_id==$this->active_language_id){ $seoURL=$exist_url['keyword'];$sql="DELETE FROM ".DB_PREFIX."url_alias WHERE query = '" . $query . "' AND auto_gen <> 'CPBI_urls';";$this->db->query($sql);$old_keyword=true;} } } $seoURL_=($this->CPBI_db_name !='category' AND $this->CPBI_db_name !='manufacturer' AND !$old_keyword) ? $seoURL.$this->CPBI_urls_ext:$seoURL;$sql="SELECT query FROM ".DB_PREFIX."url_alias WHERE keyword = '" . $seoURL_ . "' AND query <> '". $query . "'";$exist_seoURL=$this->db->query($sql);if($exist_seoURL->num_rows){$seoURL=$seoURL.'-'.$CPBI_id;} if($this->CPBI_db_name !='category' AND $this->CPBI_db_name !='manufacturer' AND !$old_keyword){ if($seoURL)$seoURL.=$this->CPBI_urls_ext;} if(!$this->testgenerator){ $sql="DELETE FROM ".DB_PREFIX."url_alias WHERE query = '". $query ."' AND language_id = ".(int)$language_id.";";$this->db->query($sql);$this->saveSeoURL($query,$seoURL,'CPBI_urls',$language_id,!$old_keyword);}else{ $testData=array( 'count'=> $this->g_count,'name'=> $orig_name,'seoURL'=> $seoURL,'l_code'=> $l_code,'CPBI' => $CPBI,);$this->fillSeoData('CPBI_urls',$l_code,$testData);} if($old_keyword){ return false;}else{ return true;} } private function saveSeoURL($query,$keyword,$auto_gen,$language_id='',$auto_gen_status=true){ $sql_column=$language_id=='' ? "(query, keyword, auto_gen)":"(query, keyword, language_id, auto_gen)";$auto_gen=$auto_gen_status ? $auto_gen:'';$sql_value=$language_id=='' ? "('" . $query . "', '" . $keyword . "', '" . $auto_gen . "')" :"('" . $query . "', '" . $keyword . "', ".$language_id.", '" . $auto_gen . "')";$sql="INSERT INTO ".DB_PREFIX."url_alias ".$sql_column." VALUES ".$sql_value;$insert_seoURL=$this->db->query($sql);} private function addTD($text,$attr=''){ return "<td ".$attr.">".$text."</td>";} private function fillSeoData($whom,$l_code,$testData){ $hide=$this->active_lang_code !=$testData['l_code'] ? 'style="display:none;"':'';$specTemplate='';if(isset($this->category_data) AND $this->category_data AND in_array($l_code,$this->category_data_lang_array)){ $specTemplate=' <span title="" class="pull-right tr-static label">'.$this->templates[$l_code].'</span>';} $this->seo_data[]='<tr '.$hide.' class= "lang-'. $testData['l_code'] .'">'.$this->addTD($testData['name'].$specTemplate).$this->addTD($testData['seoURL']) .'</tr>';} private function endSeoData($whom,$testData=''){ if($whom=='CPBI_urls'){ $language_text=$this->language->load('module/superseobox');$templates_text='';$l_code_info='';if(is_array($this->templates)){ foreach($this->templates as $l_code=> $val){ $hide=$this->active_lang_code !=$l_code ? 'style="display:none;"':'';if($val){ $templates_text.='<span class="label label-warning lang-'. $l_code .'" '.$hide.'>'.$val.'</span>';}else{ $templates_text.='<span class="label lang-'. $l_code .'" '.$hide.'>no template</span>';} $l_code_info.='<span class="label label-info lang-'. $l_code .'" '.$hide.'>'.$l_code.'</span>';} } $header='        <tr class="tr-static"><td class="caption" colspan="4" >Template for '.$language_text['text_entity_name_'.$testData['CPBI']].': '.$templates_text.'</td></tr>        <tr class="tr-static">         <th>Name of '.$testData['CPBI'].'</th>         <th>SEO URL '.$l_code_info.'</th>        </tr>       ';$footer='<tr class="tr-static"><th colspan="4">...etc.</th></tr>';}else{ $header=' <tr class="tr-static">         <th>Original URL</th>         <th>SEO URL</th>        </tr class="tr-static">      ';$footer='<tr class="tr-static"><th colspan="3">...etc.</th></tr>';} array_unshift($this->seo_data,$header);$this->seo_data[]=$footer;} private function clearSeoUrl($query ){ $sql="DELETE FROM ".DB_PREFIX."url_alias WHERE query = '". $query ."'";$this->db->query($sql);} private function isSeoUrl($query,$language_id=''){ $addQuery='';if($language_id !=''){ $addQuery=" AND language_id=".(int)$language_id;} $sql="SELECT * FROM ".DB_PREFIX."url_alias WHERE query = '". $query ."'".$addQuery.";";$query=$this->db->query($sql);return count($query->rows);} }?>
