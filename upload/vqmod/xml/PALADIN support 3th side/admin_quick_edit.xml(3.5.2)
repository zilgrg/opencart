<modification>

    <id>Enables you to select which columns are displayed on overview pages and enables to quick edit the values in place</id>
    <version>3.5.2</version>
    <vqmver>2.3.2</vqmver>
    <author>bull5-i</author>


<!-- SALES -> VOUCHER THEMES -->
    <file name="admin/controller/sale/voucher_theme.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleVoucherTheme extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="5"><![CDATA[
            $this->data['voucher_themes'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) {
                $cols = $this->config->get('aqe_sales_voucher_themes');
                $columns = array(
                    'voucher_theme_id'  => $result['voucher_theme_id'],
                    'selected'          => isset($this->request->post['selected']) && in_array($result['voucher_theme_id'], $this->request->post['selected']),
                    'action'            => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'image') {
                                $this->load->model('tool/image');
                                if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
                                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                } else {
                                    $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                }
                                $columns[$column] = $result['image'];
                                $columns['thumb'] = $image;
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['voucher_themes'][] = $columns;
            } else {
                $this->data['voucher_themes'][] = array(
                    'voucher_theme_id' => $result['voucher_theme_id'],
                    'name'             => $result['name'],
                    'selected'         => isset($this->request->post['selected']) && in_array($result['voucher_theme_id'], $this->request->post['selected']),
                    'action'           => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_image'] = $this->language->get('column_image');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) {
            $cols = $this->config->get('aqe_sales_voucher_themes');
            if (!is_array($cols)) {
                $column_order = array('name');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/voucher_theme/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['text_image_manager'] = $this->language->get('text_image_manager');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('sale/voucher_theme/load_data', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['token'] = $this->session->data['token'];

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('sale/voucher_theme');
            $result = $this->model_sale_voucher_theme->getVoucherThemeDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('sale/voucher_theme');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('sale/voucher_theme');
        $this->load->model('sale/voucher_theme');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
                $alt = "";
            } else {
                $lang_id = null;
                $alt = $this->request->post['alt'];
            }

            $result = $this->model_sale_voucher_theme->quickEditVoucherTheme($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id'))
                        $json['value'] = $value;
                    else
                        $json['value'] = $this->request->post['old'];
                } else if ($column == 'image') {
                    $this->load->model('tool/image');
                    if ($value && file_exists(DIR_IMAGE . $value)) {
                        $image = $this->model_tool_image->resize($value, $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    } else {
                        $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    }
                    $json['value'] = '<img src="' . $image . '" data-id="' . $id . '" data-image="' . $value . '" alt="' . $alt . '" style="padding: 1px; border: 1px solid #DDDDDD;" />';
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'sale/voucher_theme')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/voucher_theme')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/voucher_theme.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_image_manager']     = 'Image Manager';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_image']           = 'Image';
            ]]></add>
        </operation>
        <operation error="log">
            <search position="after"><![CDATA[
$_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_data']        = 'Warning: Loading data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/voucher_theme.php">
        <operation>
            <search position="before"><![CDATA[
            public function addVoucherTheme($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditVoucherTheme($voucher_theme_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'image');
        $result = false;
        if (in_array($column, $editable)) {
            if ($column == 'name') {
                $result = $this->db->query("UPDATE " . DB_PREFIX . "voucher_theme_description SET name = '" . $this->db->escape($value) . "' WHERE voucher_theme_id = '" . (int)$voucher_theme_id . "' AND language_id = '" . (int)$lang_id . "'");
            } else if ($column == 'image') {
                $result = $this->db->query("UPDATE " . DB_PREFIX . "voucher_theme SET image = '" . $this->db->escape($value) . "' WHERE voucher_theme_id = '" . (int)$voucher_theme_id . "'");
            }
        }
        return $result;
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/voucher_theme_list.tpl">
        <operation>
            <search position="replace" offset="4"><![CDATA[
            <td class="left"><?php if ($sort == 'name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php
if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) {
    foreach($column_order as $col) {
        if (!empty($column_info[$col]['sort'])) {
?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
<?php   } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
<?php   }
    }
} else { ?>
              <td class="left"><?php if ($sort == 'name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
<?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            <td class="left"><?php echo $voucher_theme['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'image': ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $voucher_theme['voucher_theme_id']; ?>">
                <img src="<?php echo $voucher_theme['thumb']; ?>" alt="<?php echo $voucher_theme['name']; ?>" style="padding: 1px; border: 1px solid #DDDDDD;" data-id="<?php echo $voucher_theme['voucher_theme_id']; ?>" data-image="<?php echo $voucher_theme['image']; ?>" />
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $voucher_theme['voucher_theme_id']; ?>"><?php echo $voucher_theme[$col]; ?></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td class="left"><?php echo $voucher_theme['name']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="3"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="3"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_voucher_themes_status')) { ?>
<script type="text/javascript"><!--
function update_image(field, callback) {
    $('#dialog').remove();

    $('#content').prepend('<div id="dialog" style="padding: 3px 0px 0px 0px;"><iframe src="index.php?route=common/filemanager&token=<?php echo $token; ?>&field=' + encodeURIComponent(field) + '" style="padding:0; margin: 0; display: block; width: 100%; height: 100%;" frameborder="no" scrolling="auto"></iframe></div>');

    $('#dialog').dialog({
        title: '<?php echo $text_image_manager; ?>',
        close: function (event, ui) {
            if ($.isFunction(callback)) {
                callback.call();
            }
        },
        bgiframe: false,
        width: 800,
        height: 400,
        resizable: false,
        modal: true
    });
};
$(function() {
 $(".image_quick_edit").editable(function(value, settings) {
    var params = {alt: $(this.revert).attr('alt')};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : "image_edit",
      indicator : '<img src="view/image/aqe-pro/aqe_image_loading.gif" alt="<?php echo $text_saving; ?>" style="width: <?php echo $this->config->get('aqe_list_view_image_width'); ?>px; height: <?php echo $this->config->get('aqe_list_view_image_height'); ?>px; padding: 1px; border: 1px solid #DDDDDD;" />',
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> GIFT VOUCHERS -->
    <file name="admin/controller/sale/voucher.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleVoucher extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="11"><![CDATA[
            $this->data['vouchers'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
                $cols = $this->config->get('aqe_sales_vouchers');
                $columns = array(
                    'voucher_id'    => $result['voucher_id'],
                    'selected'      => isset($this->request->post['selected']) && in_array($result['voucher_id'], $this->request->post['selected']),
                    'action'        => $action
                );
                if (!is_array($cols)) {
                    $columns['code'] = $result['code'];
                    $columns['from_name'] = $result['from_name'];
                    $columns['to_name'] = $result['to_name'];
                    $columns['theme'] = $result['theme'];
                    $columns['amount'] = $this->formatCurrency($result['amount']);
                    $date = new DateTime($result['date_added']);
                    $columns['date_added'] = $date->format($this->language->get('date_format_short'));
                    $columns['status'] = ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'date_added') {
                                $date = new DateTime($result['date_added']);
                                $columns[$column] = $date->format($this->language->get('date_format_short'));
                            } else if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if ($column == 'amount') {
                                $columns[$column] = $this->formatCurrency($result['amount']);
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['vouchers'][] = $columns;
            } else {
                $this->data['vouchers'][] = array(
                    'voucher_id' => $result['voucher_id'],
                    'code'       => $result['code'],
                    'from'       => $result['from_name'],
                    'to'         => $result['to_name'],
                    'theme'      => $result['theme'],
                    'amount'     => $this->currency->format($result['amount'], $this->config->get('config_currency')),
                    'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
                    'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                    'selected'   => isset($this->request->post['selected']) && in_array($result['voucher_id'], $this->request->post['selected']),
                    'action'     => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        $this->data['column_from_name'] = $this->language->get('column_from_name');
        $this->data['column_from_email'] = $this->language->get('column_from_email');
        $this->data['column_to_name'] = $this->language->get('column_to_name');
        $this->data['column_to_email'] = $this->language->get('column_to_email');
        $this->data['column_message'] = $this->language->get('column_message');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
            $cols = $this->config->get('aqe_sales_vouchers');
            if (!is_array($cols)) {
                $column_order = array('code', 'from_name', 'to_name', 'amount', 'theme', 'status', 'date_added');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/voucher/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));
            $this->data['error_update'] = $this->language->get('error_update');

            if (in_array("theme", $column_order)) {
                $this->load->model('sale/voucher_theme');
                $this->data['themes'] = $this->model_sale_voucher_theme->getVoucherThemes();
                $t_select = array();
                foreach ($this->data['themes'] as $t) {
                    $t_select[$t['voucher_theme_id']] = $t['name'];
                }
                $this->data['theme_select'] = addslashes(json_encode($t_select));
            } else {
                $this->data['theme_select'] = addslashes(json_encode(array()));
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_code'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.code' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
        $this->data['sort_from_name'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.from_name' . $url, 'SSL');
        $this->data['sort_from_email'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.from_email' . $url, 'SSL');
        $this->data['sort_to_name'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.to_name' . $url, 'SSL');
        $this->data['sort_to_email'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.to_email' . $url, 'SSL');
        $this->data['sort_message'] = $this->url->link('sale/voucher', 'token=' . $this->session->data['token'] . '&sort=v.message' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function formatCurrency($value) {
        $string = '';
        $currency = $this->config->get('config_currency');

        $decimal_place = $this->currency->getDecimalPlace($currency);
        $decimal_point = '.';
        $thousand_point = '';

        if ($this->currency->getSymbolLeft($currency)) {
            $string .= $this->currency->getSymbolLeft($currency);
        }

        $string .= number_format(round($value, (int)$decimal_place), (int)$decimal_place, $decimal_point, $thousand_point);

        if ($this->currency->getSymbolRight($currency)) {
            $string .= $this->currency->getSymbolRight($currency);
        }

        return $string;
    }

    public function quick_update() {
        $this->language->load('sale/voucher');
        $this->load->model('sale/voucher');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_sale_voucher->quickEditVoucher($id, $column, $value, null, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if ($column == 'amount') {
                    $json['value'] = $this->formatCurrency($value);
                } else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if ($column == 'theme') {
                    $this->load->model('sale/voucher_theme');
                    $theme = $this->model_sale_voucher_theme->getVoucherTheme((int)$value);
                    if ($theme)
                        $json['value'] = $theme['name'];
                    else
                        $json['value'] = '';
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/voucher')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "code") {
            if (utf8_strlen($data['new']) < 3 || utf8_strlen($data['new']) > 10) {
                $this->error['warning'] = $this->language->get('error_code');
            } else {
                $voucher_info = $this->model_sale_voucher->getVoucherByCode($data['new']);

                if ($voucher_info) {
                    if (!isset($data['id'])) {
                        $this->error['warning'] = $this->language->get('error_exists');
                    } elseif ($voucher_info['voucher_id'] != $data['id'])  {
                        $this->error['warning'] = $this->language->get('error_exists');
                    }
                }
            }
        }

        if ($column == "to_name" && ((utf8_strlen($data['new']) < 1) || (utf8_strlen($data['new']) > 64))) {
            $this->error['warning'] = $this->language->get('error_to_name');
        }

        if ($column == "from_name" && ((utf8_strlen($data['new']) < 1) || (utf8_strlen($data['new']) > 64))) {
            $this->error['warning'] = $this->language->get('error_from_name');
        }

        if (in_array($column, array("to_email", "from_email")) && ((utf8_strlen($data['new']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $data['new']))) {
            $this->error['warning'] = $this->language->get('error_email');
        }

        if ($column == "amount" && $data['new'] < 1) {
            $this->error['warning'] = $this->language->get('error_amount');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/voucher.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
$_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_from_name']    = 'From';
$_['column_from_email']   = 'From E-mail';
$_['column_to_name']      = 'To';
$_['column_to_email']     = 'To E-mail';
$_['column_message']      = 'Message';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
$_['error_code']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/voucher.php">
        <operation>
            <search position="before"><![CDATA[
            public function addVoucher($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditVoucher($voucher_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('code', 'from_name', 'to_name', 'from_email', 'to_email', 'theme', 'message', 'amount', 'status');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('status')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "voucher` SET " . $column . " = '" . (int)$value . "' WHERE voucher_id = '" . (int)$voucher_id . "'");
            else if ($column == 'theme')
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "voucher` SET voucher_theme_id = '" . (int)$value . "' WHERE voucher_id = '" . (int)$voucher_id . "'");
            else if (in_array($column, array('amount')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "voucher` SET " . $column . " = '" . (float)$value . "' WHERE voucher_id = '" . (int)$voucher_id . "'");
            else if (in_array($column, array('code', 'from_name', 'to_name', 'from_email', 'to_email', 'message')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "voucher` SET " . $column . " = '" . $this->db->escape($value) . "' WHERE voucher_id = '" . (int)$voucher_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT v.voucher_id, v.code, v.from_name, v.from_email, v.to_name, v.to_email, (SELECT vtd.name FROM " . DB_PREFIX . "voucher_theme_description vtd WHERE vtd.voucher_theme_id = v.voucher_theme_id AND vtd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS theme, v.amount, v.status, v.date_added FROM " . DB_PREFIX . "voucher v";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
            $sql = "SELECT v.*, (SELECT vtd.name FROM " . DB_PREFIX . "voucher_theme_description vtd WHERE vtd.voucher_theme_id = v.voucher_theme_id AND vtd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS theme FROM " . DB_PREFIX . "voucher v";
        } else {
            $sql = "SELECT v.voucher_id, v.code, v.from_name, v.from_email, v.to_name, v.to_email, (SELECT vtd.name FROM " . DB_PREFIX . "voucher_theme_description vtd WHERE vtd.voucher_theme_id = v.voucher_theme_id AND vtd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS theme, v.amount, v.status, v.date_added FROM " . DB_PREFIX . "voucher v";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
            $sort_data[] = 'v.from_email';
            $sort_data[] = 'v.to_email';
            $sort_data[] = 'v.message';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/voucher_list.tpl">
        <operation>
            <search position="replace" offset="34"><![CDATA[
            <td class="left"><?php if ($sort == 'v.code') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) {
    foreach($column_order as $col) {
        if (!empty($column_info[$col]['sort'])) {
?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
<?php   } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
<?php   }
    }
} else { ?>
              <td class="left"><?php if ($sort == 'v.code') { ?>
                <a href="<?php echo $sort_code; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_code; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_code; ?>"><?php echo $column_code; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'v.from_name') { ?>
                <a href="<?php echo $sort_from; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_from; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_from; ?>"><?php echo $column_from; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'v.to_name') { ?>
                <a href="<?php echo $sort_to; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_to; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_to; ?>"><?php echo $column_to; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'v.amount') { ?>
                <a href="<?php echo $sort_amount; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_amount; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_amount; ?>"><?php echo $column_amount; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'theme') { ?>
                <a href="<?php echo $sort_theme; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_theme; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_theme; ?>"><?php echo $column_theme; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'v.status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'v.date_added') { ?>
                <a href="<?php echo $sort_date_added; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_added; ?>"><?php echo $column_date_added; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            <td class="left"><?php echo $voucher['code']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $voucher['voucher_id']; ?>"><?php echo $voucher[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $voucher['code']; ?></td>
              <td class="left"><?php echo $voucher['from']; ?></td>
              <td class="left"><?php echo $voucher['to']; ?></td>
              <td class="right"><?php echo $voucher['amount']; ?></td>
              <td class="left"><?php echo $voucher['theme']; ?></td>
              <td class="left"><?php echo $voucher['status']; ?></td>
              <td class="left"><?php echo $voucher['date_added']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="9"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="9"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_vouchers_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".text_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'textarea',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      submit    : 'OK',
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
  $(".amount_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : function(value, settings) {
            return $.trim(value.replace(/[^\d\.]/g, ""));
      },
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".theme_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($theme_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".date_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'date_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> AFFILIATES -->
    <file name="admin/controller/sale/affiliate.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleAffiliate extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            private function getList()
            ]]></search>
            <add><![CDATA[
        $filters = array();
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            foreach($this->config->get('aqe_sales_affiliates') as $column => $attr) {
                $filters[$column] = (isset($this->request->get['filter_' . $column])) ? $this->request->get['filter_' . $column] : null;
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            $url .= '&filter_name=' . $this->request->get['filter_name'];
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            foreach($this->config->get('aqe_sales_affiliates') as $column => $attr) {
                if ($attr['filter']['show'] && isset($this->request->get['filter_' . $column])) {
                    $url .= '&filter_' . $column . '=' . urlencode(html_entity_decode($this->request->get['filter_' . $column], ENT_QUOTES, 'UTF-8'));
                }
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix for filter urls -->
            <search position="replace" regex="true"><![CDATA[~\$url \.= '&(.*?)=' \. \$this->request->get\['(.*?)'\];~]]></search>
            <add><![CDATA[$url .= '&$1=' . urlencode(html_entity_decode($this->request->get['$2'], ENT_QUOTES, 'UTF-8'));]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $affiliate_total = $this->model_sale_affiliate->getTotalAffiliates($data);
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            foreach($this->config->get('aqe_sales_affiliates') as $column => $attr) {
                $data['filter_' . $column] = $filters[$column];
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="10"><![CDATA[
            $this->data['affiliates'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
                $cp_cols = $this->config->get('aqe_sales_affiliates');
                $columns = array(
                    'affiliate_id'  => $result['affiliate_id'],
                    'selected'      => isset($this->request->post['selected']) && in_array($result['affiliate_id'], $this->request->post['selected']),
                    'action'        => $action
                );
                if (!is_array($cp_cols)) {
                    $columns['name'] = $result['name'];
                    $columns['email'] = $result['email'];
                    $columns['balance'] = $this->currency->format($result['balance'], $this->config->get('config_currency'));
                    $columns['status'] = ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                    $columns['approved'] = ($result['approved'] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                    $date = new DateTime($result['date_added']);
                    $columns['date_added'] = $date->format($this->language->get('date_format_short'));
                } else {
                    foreach($cp_cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if (in_array($column, array('newsletter', 'approved')))
                                $columns[$column] = ($result[$column] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                            else if ($column == 'date_added') {
                                $date = new DateTime($result['date_added']);
                                $columns[$column] = $date->format($this->language->get('date_format_short'));
                            } else if ($column == 'balance')
                                $columns[$column] = $this->currency->format($result['balance'], $this->config->get('config_currency'));
                            else if ($column == 'commission')
                                $columns[$column] = number_format(round($result['commission'], 2), 2, '.', '') . " %";
                            else if ($column == 'tracking_code')
                                $columns[$column] = $result['code'];
                            else
                                $columns[$column] = $result[$column];
                        }
                    }
                }
                $this->data['affiliates'][] = $columns;
            } else {
                $this->data['affiliates'][] = array(
                    'affiliate_id' => $result['affiliate_id'],
                    'name'         => $result['name'],
                    'email'        => $result['email'],
                    'balance'      => $this->currency->format($result['balance'], $this->config->get('config_currency')),
                    'status'       => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
                    'approved'     => ($result['approved'] ? $this->language->get('text_yes') : $this->language->get('text_no')),
                    'date_added'   => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                    'selected'     => isset($this->request->post['selected']) && in_array($result['affiliate_id'], $this->request->post['selected']),
                    'action'       => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $this->data['columns'] = array();
            foreach($this->config->get('aqe_sales_affiliates') as $column => $attr) {
                $this->data['columns'][$column] = $this->language->get('column_' . $column);
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_filter'] = $this->language->get('button_filter');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $cp_cols = $this->config->get('aqe_sales_affiliates');
            if (!is_array($cp_cols)) {
                $column_order = array('name', 'email', 'balance', 'status', 'approved', 'date_added');
                $cp_cols = array();
            } else {
                $column_order = array();
                uasort($cp_cols, 'column_sort');

                foreach($cp_cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cp_cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/affiliate/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));
            $this->data['yes_no_select'] = addslashes(json_encode(array("0" => $this->language->get('text_no'), "1" => $this->language->get('text_yes'))));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['load_name_url'] = html_entity_decode($this->url->link('sale/affiliate/load_name', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['load_zone_url'] = html_entity_decode($this->url->link('sale/affiliate/load_zone', 'token=' . $this->session->data['token'], 'SSL'));

            if (in_array("country", $column_order)) {
                $this->load->model('localisation/country');
                $this->data['countries'] = $this->model_localisation_country->getCountries();
                $c_select = array();
                foreach ($this->data['countries'] as $c) {
                    $c_select[$c['country_id']] = $c['name'];
                }
                $this->data['country_select'] = addslashes(json_encode($c_select));
            } else {
                $this->data['country_select'] = addslashes(json_encode(array()));
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('sale/affiliate', 'token=' . $this->session->data['token'] . '&sort=name' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $this->data['sorts'] = array();
            foreach($this->config->get('aqe_sales_affiliates') as $column => $attr) {
                $this->data['sorts'][$column] = $this->url->link('sale/affiliate', 'token=' . $this->session->data['token'] . '&sort=' . $attr['sort'] . $url, 'SSL');
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['filter_name'] = $filter_name;
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $this->data['filters'] = $filters;
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_name() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('sale/affiliate');
            $result = $this->model_sale_affiliate->getAffiliate($id);
            if ($result) {
                $json['first_name'] = $result['firstname'];
                $json['last_name'] = $result['lastname'];
            } else {
                $this->language->load('sale/affiliate');
                $json['error'] = $this->language->get('error_load_name');
            }
        } else {
            $this->language->load('sale/affiliate');
            $json['error'] = $this->language->get('error_load_name');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function load_zone() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('sale/affiliate');
            $affiliate = $this->model_sale_affiliate->getAffiliate($id);
            if ($affiliate) {
                $this->load->model('localisation/zone');
                $results = $this->model_localisation_zone->getZonesByCountryId($affiliate['country_id']);
                $zones = array();
                $found = false;
                foreach ($results as $result) {
                    $zones[$result['zone_id']] = $result['name'];
                    if ($result['zone_id'] == $affiliate['zone_id'])
                        $found = true;
                }
                if ($found) {
                    $zones['selected'] = $affiliate['zone_id'];
                } else {
                    $zones = array("0" => "") + $zones;
                    $zones['selected'] = "0";
                }
                $json['select'] = $zones;
            } else {
                $this->language->load('sale/affiliate');
                $json['error'] = $this->language->get('error_load_zone');
            }
        } else {
            $this->language->load('sale/affiliate');
            $json['error'] = $this->language->get('error_load_zone');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('sale/affiliate');
        $this->load->model('sale/affiliate');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_sale_affiliate->quickEditAffiliate($id, $column, $value, null, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('email', 'telephone', 'fax', 'company', 'address_1', 'address_2', 'city', 'postcode', 'tracking_code', 'tax')))
                    $json['value'] = $value;
                else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if (in_array($column, array('approved')))
                    $json['value'] = ((int)$value) ? $this->language->get('text_yes') : $this->language->get('text_no');
                else if ($column == 'country') {
                    $this->load->model('localisation/country');
                    $country = $this->model_localisation_country->getCountry((int)$value);
                    if ($country)
                        $json['value'] = $country['name'];
                    else
                        $json['value'] = '';
                } else if ($column == 'region') {
                    $this->load->model('localisation/zone');
                    $zone = $this->model_localisation_zone->getZone((int)$value);
                    if ($zone)
                        $json['value'] = $zone['name'];
                    else
                        $json['value'] = '';
                } else if($column == 'name') {
                        $json['value'] = str_replace("||", " ", $value);
                } else if($column == 'commission') {
                        $json['value'] = number_format(round($value, 2), 2, '.', '') . " %";
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'sale/affiliate')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!in_array($column, array("name", "region"))) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/affiliate')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && strpos($data['new'], "||") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name") {
            list($first, $last) = explode("||", $data['new']);
            if (utf8_strlen($first) < 1 || utf8_strlen($first) > 32)
                $this->error['warning'] = $this->language->get('error_firstname');
            else if (utf8_strlen($last) < 1 || utf8_strlen($last) > 32)
                $this->error['warning'] = $this->language->get('error_lastname');
        }

        if ($column == "email") {
            if ((utf8_strlen($data['new']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $data['new'])) {
                $this->error['warning'] = $this->language->get('error_email');
            }

            $affiliate_info = $this->model_sale_affiliate->getAffiliateByEmail($data['new']);

            if ($affiliate_info && ($id != $affiliate_info['affiliate_id'])) {
                $this->error['warning'] = $this->language->get('error_exists');
            }
        }

        if ($column == "telephone" && ((utf8_strlen($data['new']) < 3) || utf8_strlen($data['new']) > 32)) {
            $this->error['warning'] = $this->language->get('error_telephone');
        }

        if ($column == "address_1" && ((utf8_strlen($data['new']) < 3) || (utf8_strlen($data['new']) > 128))) {
            $this->error['warning'] = $this->language->get('error_address_1');
        }

        if ($column == "city" && ((utf8_strlen($data['new']) < 2) || (utf8_strlen($data['new']) > 128))) {
            $this->error['warning'] = $this->language->get('error_city');
        }

        if ($column == "country") {
            $this->load->model('localisation/country');

            $affiliate_info = $this->model_sale_affiliate->getAffiliate($id);

            $country_info = $this->model_localisation_country->getCountry($data['new']);

            if ($country_info && $affiliate_info && $country_info['postcode_required'] && (utf8_strlen($affiliate_info['postcode']) < 2) || (utf8_strlen($affiliate_info['postcode']) > 10)) {
                $this->error['warning'] = $this->language->get('error_postcode');
            }

            if ($data['new'] == '') {
                $this->error['warning'] = $this->language->get('error_country');
            }
        }

        if ($column == "region" && $data['new'] == '') {
            $this->error['warning'] = $this->language->get('error_zone');
        }

        if ($column == "tracking_code" && $data['new'] == '') {
            $this->error['warning'] = $this->language->get('error_code');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/affiliate.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_telephone']      = 'Telephone';
$_['column_fax']            = 'Fax';
$_['column_company']        = 'Company';
$_['column_address_1']      = 'Address 1';
$_['column_address_2']      = 'Address 2';
$_['column_city']           = 'City';
$_['column_postcode']       = 'Postcode';
$_['column_country']        = 'Country';
$_['column_region']         = 'Region';
$_['column_commission']     = 'Commission';
$_['column_tracking_code']  = 'Tracking Code';
$_['column_tax']            = 'Tax ID';
$_['column_ip']             = 'IP';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
$_['error_zone']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_name']        = 'Warning: Loading name data failed!';
$_['error_load_zone']        = 'Warning: Loading region data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/affiliate.php">
        <operation>
            <search position="before"><![CDATA[
            public function addAffiliate($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditAffiliate($affiliate_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'email', 'telephone', 'fax', 'company', 'address_1', 'address_2', 'city', 'postcode', 'country', 'region', 'tracking_code', 'commission', 'tax', 'approved', 'status');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('email', 'telephone', 'fax', 'company', 'address_1', 'address_2', 'city', 'postcode', 'tax')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET " . $column . " = '" . $this->db->escape($value) . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if ($column == 'tracking_code')
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET code = '" . $this->db->escape($value) . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if (in_array($column, array('approved', 'status')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET " . $column . " = '" . (int)$value . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if ($column == "country")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET country_id = '" . (int)$value . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if ($column == "region")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET zone_id = '" . (int)$value . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if ($column == "commission")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET " . $column . " = '" . (float)$value . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            else if ($column == "name") {
                list($first_name, $last_name) = explode("||", $value);
                $result = $this->db->query("UPDATE " . DB_PREFIX . "affiliate SET firstname = '" . $this->db->escape($first_name) . "', lastname = '" . $this->db->escape($last_name) . "' WHERE affiliate_id = '" . (int)$affiliate_id . "'");
            }
        }
        return $result;
    }

    public function filterInterval($filter, $field, $date=false) {
        if ($date) {
            if (preg_match('/^(!=|<>)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) <> DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(<|<=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) <= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) >= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(<|<=|>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) ${matches[1]} DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=|<|<=)$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field)";
            } else {
                return "DATE(${field}) = DATE('${filter}')";
            }
        } else {
            if (preg_match('/^(!=|<>)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field <> '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(<|<=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] <= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] >= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(<|<=|>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field ${matches[1]} '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=|<|<=)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field";
            } else {
                return $field . " = '" . (int)$filter . "'";
            }
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT *, CONCAT(a.firstname, ' ', a.lastname) AS name, (SELECT SUM(at.amount) FROM " . DB_PREFIX . "affiliate_transaction at WHERE at.affiliate_id = a.affiliate_id GROUP BY at.affiliate_id) AS balance FROM " . DB_PREFIX . "affiliate a";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $sql = "SELECT a.*, CONCAT(a.firstname, ' ', a.lastname) AS name, (SELECT SUM(at.amount) FROM " . DB_PREFIX . "affiliate_transaction at WHERE at.affiliate_id = a.affiliate_id GROUP BY at.affiliate_id) AS balance, c.name AS country, z.name AS region FROM " . DB_PREFIX . "affiliate a LEFT JOIN " . DB_PREFIX . "country c ON (a.country_id = c.country_id) LEFT JOIN " . DB_PREFIX . "zone z ON (a.zone_id = z.zone_id)";
        } else {
            $sql = "SELECT *, CONCAT(a.firstname, ' ', a.lastname) AS name, (SELECT SUM(at.amount) FROM " . DB_PREFIX . "affiliate_transaction at WHERE at.affiliate_id = a.affiliate_id GROUP BY at.affiliate_id) AS balance FROM " . DB_PREFIX . "affiliate a";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "affiliate";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "affiliate a LEFT JOIN " . DB_PREFIX . "country c ON (a.country_id = c.country_id) LEFT JOIN " . DB_PREFIX . "zone z ON (a.zone_id = z.zone_id)";
        } else {
            $sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "affiliate";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="18" index="2"><![CDATA[
            if (!empty($data['filter_name'])) {
            ]]></search>
            <add><![CDATA[
        if (!empty($data['filter_name'])) {
            $implode[] = "LCASE(CONCAT(a.firstname, ' ', a.lastname)) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "%'";
        }

        if (!empty($data['filter_email'])) {
            $implode[] = "a.email = '" . $this->db->escape($data['filter_email']) . "'";
        }

        if (!empty($data['filter_code'])) {
            $implode[] = "a.code = '" . $this->db->escape($data['filter_code']) . "'";
        }

        if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
            $implode[] = "a.status = '" . (int)$data['filter_status'] . "'";
        }

        if (isset($data['filter_approved']) && !is_null($data['filter_approved'])) {
            $implode[] = "a.approved = '" . (int)$data['filter_approved'] . "'";
        }

        if (!empty($data['filter_date_added'])) {
            $implode[] = "DATE(a.date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (!empty($data['filter_name'])) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            if (!empty($data['filter_telephone'])) {
                $implode[] = "a.telephone LIKE '" . $this->db->escape($data['filter_telephone']) . "%'";
            }

            if (!empty($data['filter_fax'])) {
                $implode[] = "a.fax LIKE '" . $this->db->escape($data['filter_fax']) . "%'";
            }

            if (!empty($data['filter_company'])) {
                $implode[] = "LCASE(a.company) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_company'])) . "%'";
            }

            if (!empty($data['filter_address_1'])) {
                $implode[] = "LCASE(a.address_1) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_address_1'])) . "%'";
            }

            if (!empty($data['filter_address_2'])) {
                $implode[] = "LCASE(a.address_2) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_address_2'])) . "%'";
            }

            if (!empty($data['filter_city'])) {
                $implode[] = "LCASE(a.city) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_city'])) . "%'";
            }

            if (!empty($data['filter_postcode'])) {
                $implode[] = "LCASE(a.postcode) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_postcode'])) . "%'";
            }

            if (!empty($data['filter_country'])) {
                $implode[] = "a.country_id = '" . (int)$data['filter_country'] . "'";
            }

            if (!empty($data['filter_region'])) {
                $implode[] = "LCASE(z.name) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_region'])) . "%'";
            }

            if (!empty($data['filter_tracking_code'])) {
                $implode[] = "a.code LIKE '" . $this->db->escape($data['filter_tracking_code']) . "%'";
            }

            if (isset($data['filter_commission'])) {
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($data['filter_commission'], "a.commission");
                } else {
                    $implode[] = "a.commission = '" . (float)$data['filter_commission'] . "'";
                }
            }

            if (isset($data['filter_tax'])) {
                $implode[] = "a.tax = '" . $this->db->escape($data['filter_tax']) . "'";
            }

            if (isset($data['filter_balance'])) {
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($data['filter_balance'], "IFNULL((SELECT SUM(at.amount) FROM " . DB_PREFIX . "affiliate_transaction at WHERE at.affiliate_id = a.affiliate_id GROUP BY at.affiliate_id), 0.0)");
                } else {
                    $implode[] = "IFNULL((SELECT SUM(at.amount) FROM " . DB_PREFIX . "affiliate_transaction at WHERE at.affiliate_id = a.affiliate_id GROUP BY at.affiliate_id), 0.0) = '" . (float)$data['filter_balance'] . "'";
                }
            }

            if (!empty($data['filter_ip'])) {
                $implode[] = "ip LIKE '" . $this->db->escape($data['filter_ip']) . "%'";
            }
        }
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $implode[] = "a.email = '" . $this->db->escape($data['filter_email']) . "'";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $implode[] = "LCASE(a.email) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_email'])) . "%'";
        } else {
            $implode[] = "a.email = '" . $this->db->escape($data['filter_email']) . "'";
        }
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $implode[] = "a.code = '" . $this->db->escape($data['filter_code']) . "'";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $implode[] = "a.code LIKE '" . $this->db->escape($data['filter_code']) . "%'";
        } else {
            $implode[] = "a.code = '" . $this->db->escape($data['filter_code']) . "'";
        }
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $implode[] = "DATE(a.date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('aqe_interval_filter')) {
            $implode[] = $this->filterInterval($this->db->escape($data['filter_date_added']), "a.date_added", true);
        } else {
            $implode[] = "DATE(a.date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere for affiliate name and email -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "LCASE\((.*?)\) LIKE '" \. \$this->db->escape\(utf8_strtolower\(\$data\['(.*?)'\]\)\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $implode[] = "LCASE($1) LIKE '%" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                } else {
                    $implode[] = "LCASE($1) LIKE '" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere other fields -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "(.*?) LIKE '" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $implode[] = "$1 LIKE '%" . $this->db->escape($data['$2']) . "%'";
                } else {
                    $implode[] = "$1 LIKE '" . $this->db->escape($data['$2']) . "%'";
                }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
            $sort_data[] = 'a.telephone';
            $sort_data[] = 'a.fax';
            $sort_data[] = 'a.company';
            $sort_data[] = 'a.address_1';
            $sort_data[] = 'a.address_2';
            $sort_data[] = 'a.city';
            $sort_data[] = 'a.postcode';
            $sort_data[] = 'country';
            $sort_data[] = 'region';
            $sort_data[] = 'a.tracking_code';
            $sort_data[] = 'a.commission';
            $sort_data[] = 'a.tax';
            $sort_data[] = 'balance';
            $sort_data[] = 'a.ip';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/affiliate_list.tpl">
        <operation>
            <search position="replace" offset="25"><![CDATA[
            <td class="left"><?php if ($sort == 'name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo $sorts[$col]; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo $columns[$col]; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo $columns[$col]; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'a.email') { ?>
                <a href="<?php echo $sort_email; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_email; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_email; ?>"><?php echo $column_email; ?></a>
                <?php } ?></td>
              <td class="right"><?php echo $column_balance; ?></td>
              <td class="left"><?php if ($sort == 'a.status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'a.approved') { ?>
                <a href="<?php echo $sort_approved; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_approved; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_approved; ?>"><?php echo $column_approved; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'a.date_added') { ?>
                <a href="<?php echo $sort_date_added; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_added; ?>"><?php echo $column_date_added; ?></a>
                <?php } ?></td>
<?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="31"><![CDATA[
            <tr class="filter">
            ]]></search>
            <add><![CDATA[
            <tr class="filter">
              <td></td>
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'country': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <?php foreach ($countries as $country) { ?>
                  <option value="<?php echo $country['country_id']; ?>"<?php echo ($country['country_id'] == $filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $country['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    case 'status': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="1"<?php echo ($filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_enabled; ?></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && !$filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_disabled; ?></option>
                </select>
              </td>
                        <?php break;
                    case 'approved': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="1"<?php echo ($filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_yes; ?></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && !$filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_no; ?></option>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><input type="text" name="filter_<?php echo $col; ?>" value="<?php echo $filters[$col]; ?>" class="filter <?php echo $col; ?>" /></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td><input type="text" name="filter_name" value="<?php echo $filter_name; ?>" /></td>
              <td><input type="text" name="filter_email" value="<?php echo $filter_email; ?>" /></td>
              <td>&nbsp;</td>
              <td><select name="filter_status">
                  <option value="*"></option>
                  <?php if ($filter_status) { ?>
                  <option value="1" selected="selected"><?php echo $text_enabled; ?></option>
                  <?php } else { ?>
                  <option value="1"><?php echo $text_enabled; ?></option>
                  <?php } ?>
                  <?php if (!is_null($filter_status) && !$filter_status) { ?>
                  <option value="0" selected="selected"><?php echo $text_disabled; ?></option>
                  <?php } else { ?>
                  <option value="0"><?php echo $text_disabled; ?></option>
                  <?php } ?>
                </select></td>
              <td><select name="filter_approved">
                  <option value="*"></option>
                  <?php if ($filter_approved) { ?>
                  <option value="1" selected="selected"><?php echo $text_yes; ?></option>
                  <?php } else { ?>
                  <option value="1"><?php echo $text_yes; ?></option>
                  <?php } ?>
                  <?php if (!is_null($filter_approved) && !$filter_approved) { ?>
                  <option value="0" selected="selected"><?php echo $text_no; ?></option>
                  <?php } else { ?>
                  <option value="0"><?php echo $text_no; ?></option>
                  <?php } ?>
                </select></td>
              <td><input type="text" name="filter_date_added" value="<?php echo $filter_date_added; ?>" size="12" id="date" /></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="5"><![CDATA[
            <td class="left"><?php echo $affiliate['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $affiliate['affiliate_id']; ?>"><?php echo $affiliate[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $affiliate['name']; ?></td>
              <td class="left"><?php echo $affiliate['email']; ?></td>
              <td class="right"><?php echo $affiliate['balance']; ?></td>
              <td class="left"><?php echo $affiliate['status']; ?></td>
              <td class="left"><?php echo $affiliate['approved']; ?></td>
              <td class="left"><?php echo $affiliate['date_added']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="8"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="8"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            function filter() {
            ]]></search>
            <add><![CDATA[
$('#form input, #form select').keydown(function(e) {
    if (e.keyCode == 13) {
        filter();
    }
});
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            var filter_name = $('input[name=\'filter_name\']').attr('value');
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) {
foreach($column_info as $column => $val) {
    if ($val['filter']['show']) {
        if ($val['filter']['type'] == 0) { ?>
    var filter_<?php echo $column; ?> = $('input[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?>) {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php } else if ($val['filter']['type'] == 1) { ?>
    var filter_<?php echo $column; ?> = $('select[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?> && filter_<?php echo $column; ?> != '*') {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php }
    }
}
} ?>
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix select filters -->
            <search position="replace" regex="true"><![CDATA[~if \((.*?) != '\*'\) {~]]></search>
            <add><![CDATA[
    if ($1 && $1 != '*') {
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $('#date').datepicker
            ]]></search>
            <add><![CDATA[$('#date, input.filter.date_added').datepicker]]></add>
        </operation>
        <operation error="log"><!-- Sort & order fix for filtering -->
            <search position="replace" regex="true"><![CDATA[~url = 'index\.php\?route=(.*?)&token=<\?php echo \$token; \?>';~]]></search>
            <add><![CDATA[url = 'index.php?route=$1&token=<?php echo $token; ?>&sort=<?php echo $sort; ?>&order=<?php echo $order; ?>';]]></add>
        </operation>
        <operation error="log"><!-- Do not constrain date field input -->
            <search position="replace"><![CDATA[{dateFormat: 'yy-mm-dd'}]]></search>
            <add><![CDATA[{dateFormat: 'yy-mm-dd', constrainInput: false}]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_affiliates_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".yes_no_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($yes_no_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".country_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($country_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".region_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'advanced_select_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      loadurl   : "<?php echo $load_zone_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
 $(".text_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'textarea',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      submit    : 'OK',
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".date_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'date_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
  });
 $(".name_quick_edit").editable(function(value, settings) {
    var name = $('#first_name', this).val() + '||' + $('#last_name', this).val();
    return quick_update(this, name, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'person_name_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_name_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
  $(".number_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : function(value, settings) {
            return $.trim(value.replace(/[^\d\.]/g, ""));
      },
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> RETURNS -->
    <file name="admin/controller/sale/return.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleReturn extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            private function getList()
            ]]></search>
            <add><![CDATA[
        $filters = array();
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            foreach($this->config->get('aqe_sales_returns') as $column => $attr) {
                $filters[$column] = (isset($this->request->get['filter_' . $column])) ? $this->request->get['filter_' . $column] : null;
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            $url .= '&filter_return_id=' . $this->request->get['filter_return_id'];
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            foreach($this->config->get('aqe_sales_returns') as $column => $attr) {
                if ($attr['filter']['show'] && isset($this->request->get['filter_' . $column])) {
                    $url .= '&filter_' . $column . '=' . urlencode(html_entity_decode($this->request->get['filter_' . $column], ENT_QUOTES, 'UTF-8'));
                }
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix for filter urls -->
            <search position="replace" regex="true"><![CDATA[~\$url \.= '&(.*?)=' \. \$this->request->get\['(.*?)'\];~]]></search>
            <add><![CDATA[$url .= '&$1=' . urlencode(html_entity_decode($this->request->get['$2'], ENT_QUOTES, 'UTF-8'));]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $return_total = $this->model_sale_return->getTotalReturns($data);
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            foreach($this->config->get('aqe_sales_returns') as $column => $attr) {
                $data['filter_' . $column] = $filters[$column];
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="11"><![CDATA[
            $this->data['returns'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
                $cp_cols = $this->config->get('aqe_sales_returns');
                $columns = array(
                    'selected'      => isset($this->request->post['selected']) && in_array($result['return_id'], $this->request->post['selected']),
                    'action'        => $action
                );
                if (!is_array($cp_cols)) {
                    $columns['return_id'] = $result['return_id'];
                    $columns['order_id'] = $result['order_id'];
                    $columns['customer'] = $result['customer'];
                    $columns['product'] = $result['product'];
                    $columns['model'] = $result['model'];
                    $columns['status'] = $result['status'];
                    $date = new DateTime($result['date_added']);
                    $columns['date_added'] = $date->format($this->language->get('date_format_short'));
                    $date = new DateTime($result['date_modified']);
                    $columns['date_modified'] = $date->format($this->language->get('date_format_short'));
                } else {
                    foreach($cp_cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'opened')
                                $columns[$column] = ($result[$column] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                            else if (in_array($column, array('date_added', 'date_ordered', 'date_modified'))) {
                                $date = new DateTime($result[$column]);
                                $columns[$column] = $date->format("Y-m-d");
                            } else if ($column == 'product_id') {
                                $columns[$column] = $result['product_name'];
                                $columns['product_href'] = $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $result['product_id'], 'SSL');
                            } else if ($column == 'customer_id') {
                                $columns[$column] = $result['customer_name'];
                                $columns['customer_href'] = $this->url->link('sale/customer/update', 'token=' . $this->session->data['token'] . '&customer_id=' . $result['customer_id'], 'SSL');
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['returns'][] = $columns;
            } else {
                $this->data['returns'][] = array(
                    'return_id'     => $result['return_id'],
                    'order_id'      => $result['order_id'],
                    'customer'      => $result['customer'],
                    'product'       => $result['product'],
                    'model'         => $result['model'],
                    'status'        => $result['status'],
                    'date_added'    => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                    'date_modified' => date($this->language->get('date_format_short'), strtotime($result['date_modified'])),
                    'selected'      => isset($this->request->post['selected']) && in_array($result['return_id'], $this->request->post['selected']),
                    'action'        => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $this->data['columns'] = array();
            foreach($this->config->get('aqe_sales_returns') as $column => $attr) {
                $this->data['columns'][$column] = $this->language->get('column_' . $column);
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_filter'] = $this->language->get('button_filter');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $cp_cols = $this->config->get('aqe_sales_returns');
            if (!is_array($cp_cols)) {
                $column_order = array('return_id', 'order_id', 'customer', 'product', 'model', 'return_status', 'date_added', 'date_modified');
                $cp_cols = array();
            } else {
                $column_order = array();
                uasort($cp_cols, 'column_sort');

                foreach($cp_cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cp_cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/return/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['yes_no_select'] = addslashes(json_encode(array("0" => $this->language->get('text_no'), "1" => $this->language->get('text_yes'))));

            $this->data['text_yes'] = $this->language->get('text_yes');
            $this->data['text_no'] = $this->language->get('text_no');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_notify_customer'] = $this->language->get('text_notify_customer');
            $this->data['notify_customer'] = $this->config->get('aqe_sales_returns_notify_customer');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['load_name_url'] = html_entity_decode($this->url->link('sale/return/load_name', 'token=' . $this->session->data['token'], 'SSL'));

            if (in_array("return_reason", $column_order)) {
                $this->load->model('localisation/return_reason');
                $this->data['return_reasons'] = $this->model_localisation_return_reason->getReturnReasons();
                $rr_select = array();
                foreach ($this->data['return_reasons'] as $rr) {
                    $rr_select[$rr['return_reason_id']] = $rr['name'];
                }
                $this->data['return_reasons_select'] = addslashes(json_encode($rr_select));
            } else {
                $this->data['return_reasons_select'] = addslashes(json_encode(array()));
            }

            if (in_array("return_action", $column_order)) {
                $this->load->model('localisation/return_action');
                $this->data['return_actions'] = $this->model_localisation_return_action->getReturnActions();
                $ra_select = array("0" => "");
                foreach ($this->data['return_actions'] as $ra) {
                    $ra_select[$ra['return_action_id']] = $ra['name'];
                }
                $this->data['return_actions_select'] = addslashes(json_encode($ra_select));
            } else {
                $this->data['return_actions_select'] = addslashes(json_encode(array()));
            }

            if (in_array("return_status", $column_order)) {
                $this->load->model('localisation/return_status');
                $this->data['return_statuses'] = $this->model_localisation_return_status->getReturnStatuses();
                $rs_select = array();
                foreach ($this->data['return_statuses'] as $rs) {
                    $rs_select[$rs['return_status_id']] = $rs['name'];
                }
                $this->data['return_statuses_select'] = addslashes(json_encode($rs_select));
            } else {
                $this->data['return_statuses_select'] = addslashes(json_encode(array()));
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_return_id'] = $this->url->link('sale/return', 'token=' . $this->session->data['token'] . '&sort=r.return_id' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $this->data['sorts'] = array();
            foreach($this->config->get('aqe_sales_returns') as $column => $attr) {
                $this->data['sorts'][$column] = $this->url->link('sale/return', 'token=' . $this->session->data['token'] . '&sort=' . $attr['sort'] . $url, 'SSL');
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['filter_return_id'] = $filter_return_id;
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $this->data['filters'] = $filters;
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_name() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('sale/return');
            $result = $this->model_sale_return->getReturn($id);
            if ($result) {
                $json['first_name'] = $result['firstname'];
                $json['last_name'] = $result['lastname'];
            } else {
                $this->language->load('sale/return');
                $json['error'] = $this->language->get('error_load_name');
            }
        } else {
            $this->language->load('sale/return');
            $json['error'] = $this->language->get('error_load_name');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('sale/return');
        $this->load->model('sale/return');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "return_status") {
                if (isset($this->request->post['notify'])) {
                    $notify = $this->request->post['notify'];
                } else {
                    $notify = $this->config->get('aqe_sales_returns_notify_customer');
                }
                $data = array();
                $data['notify'] = $notify;
                $data['comment'] = "";
                $data['return_status_id'] = $value;
                $this->model_sale_return->addReturnHistory($id, $data);
                $result = true;
            } else {
                $result = $this->model_sale_return->quickEditReturn($id, $column, $value, null, $this->request->post);
            }

            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('email', 'telephone', 'product', 'model', 'comment', 'date_ordered')))
                    $json['value'] = $value;
                else if (in_array($column, array('return_id', 'order_id', 'quantity')))
                    $json['value'] = (int)$value;
                else if (in_array($column, array('opened'))) {
                    $json['value'] = ((int)$value) ? $this->language->get('text_yes') : $this->language->get('text_no');
                } else if ($column == 'return_reason') {
                    $this->load->model('localisation/return_reason');
                    $return_reason = $this->model_localisation_return_reason->getReturnReason((int)$value);
                    if ($return_reason)
                        $json['value'] = $return_reason['name'];
                    else
                        $json['value'] = '';
                } else if ($column == 'return_action') {
                    $this->load->model('localisation/return_action');
                    $return_action = $this->model_localisation_return_action->getReturnAction((int)$value);
                    if ($return_action)
                        $json['value'] = $return_action['name'];
                    else
                        $json['value'] = '';
                } else if ($column == 'return_status') {
                    $this->load->model('localisation/return_status');
                    $return_status = $this->model_localisation_return_status->getReturnStatus((int)$value);
                    if ($return_status)
                        $json['value'] = $return_status['name'];
                    else
                        $json['value'] = '';
                } else if ($column == 'customer_id') {
                    $this->load->model('sale/customer');
                    $customer = $this->model_sale_customer->getCustomer((int)$value);
                    if ($customer)
                        $json['value'] = $customer['firstname'] . ' ' . $customer['lastname'];
                    else
                        $json['value'] = '';
                } else if ($column == 'product_id') {
                    $this->load->model('catalog/product');
                    $product = $this->model_catalog_product->getProduct((int)$value);
                    if ($product)
                        $json['value'] = $product['name'];
                    else
                        $json['value'] = '';
                } else if($column == 'customer') {
                        $json['value'] = str_replace("||", " ", $value);
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'sale/return')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!in_array($column, array("name"))) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/return')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && strpos($data['new'], "||") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name") {
            list($first, $last) = explode("||", $data['new']);
            if (utf8_strlen($first) < 1 || utf8_strlen($first) > 32)
                $this->error['warning'] = $this->language->get('error_firstname');
            else if (utf8_strlen($last) < 1 || utf8_strlen($last) > 32)
                $this->error['warning'] = $this->language->get('error_lastname');
        }

        if ($column == "email") {
            if ((utf8_strlen($data['new']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $data['new'])) {
                $this->error['warning'] = $this->language->get('error_email');
            }
        }

        if ($column == "telephone" && ((utf8_strlen($data['new']) < 3) || utf8_strlen($data['new']) > 32)) {
            $this->error['warning'] = $this->language->get('error_telephone');
        }

        if ($column == "product" && ((utf8_strlen($data['new']) < 1) || (utf8_strlen($data['new']) > 255))) {
            $this->error['warning'] = $this->language->get('error_product');
        }

        if ($column == "model" && ((utf8_strlen($data['new']) < 1) || (utf8_strlen($data['new']) > 64))) {
            $this->error['warning'] = $this->language->get('error_model');
        }

        if ($column == "return_action" && $data['new'] == 0) {
            $this->error['warning'] = $this->language->get('error_return_action');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/return.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_notify_customer']   = 'Notify Customer';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_customer_id']    = 'Customer ID';
$_['column_email']          = 'E-mail';
$_['column_telephone']      = 'Telephone';
$_['column_product_id']     = 'Product ID';
$_['column_quantity']       = 'Quantity';
$_['column_return_reason']  = 'Return Reason';
$_['column_opened']         = 'Opened';
$_['column_comment']        = 'Comment';
$_['column_return_action']  = 'Return Action';
$_['column_return_status']  = 'Status';
$_['column_date_ordered']   = 'Date Ordered';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
$_['error_model']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_name']        = 'Warning: Loading name data failed!';
$_['error_return_action']    = 'Return action required!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/return.php">
        <operation>
            <search position="before"><![CDATA[
            public function addReturn($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditReturn($return_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('order_id', 'customer_id', 'customer', 'email', 'telephone', 'product_id', 'product', 'model', 'quantity', 'return_reason', 'opened', 'comment', 'return_action', 'return_status', 'date_ordered');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('email', 'telephone', 'product', 'model', 'comment', 'date_ordered')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "return` SET " . $column . " = '" . $this->db->escape($value) . "', date_modified = NOW() WHERE return_id = '" . (int)$return_id . "'");
            else if (in_array($column, array('order_id', 'product_id', 'customer_id', 'quantity', 'opened')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "return` SET " . $column . " = '" . (int)$value . "', date_modified = NOW() WHERE return_id = '" . (int)$return_id . "'");
            else if (in_array($column, array('return_reason', 'return_action', 'return_status')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "return` SET " . $column . "_id = '" . (int)$value . "', date_modified = NOW() WHERE return_id = '" . (int)$return_id . "'");
            else if ($column == "customer") {
                list($first_name, $last_name) = explode("||", $value);
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "return` SET firstname = '" . $this->db->escape($first_name) . "', lastname = '" . $this->db->escape($last_name) . "', date_modified = NOW() WHERE return_id = '" . (int)$return_id . "'");
            }
        }
        return $result;
    }

    public function filterInterval($filter, $field, $date=false) {
        if ($date) {
            if (preg_match('/^(!=|<>)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) <> DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(<|<=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) <= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) >= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(<|<=|>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) ${matches[1]} DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=|<|<=)$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field)";
            } else {
                return "DATE(${field}) = DATE('${filter}')";
            }
        } else {
            if (preg_match('/^(!=|<>)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field <> '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(<|<=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] <= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] >= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(<|<=|>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field ${matches[1]} '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=|<|<=)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field";
            } else {
                return $field . " = '" . (int)$filter . "'";
            }
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT *, CONCAT(r.firstname, ' ', r.lastname) AS customer, (SELECT rs.name FROM " . DB_PREFIX . "return_status rs WHERE rs.return_status_id = r.return_status_id AND rs.language_id = '" . (int)$this->config->get('config_language_id') . "') AS status FROM `" . DB_PREFIX . "return` r";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $sql = "SELECT r.*, CONCAT(r.firstname, ' ', r.lastname) AS customer, rs.name AS return_status, ra.name AS return_action, rr.name AS return_reason, CONCAT(c.firstname, ' ', c.lastname) AS customer_name, pd.name AS product_name FROM `" . DB_PREFIX . "return` r LEFT JOIN " . DB_PREFIX . "customer c ON (r.customer_id = c.customer_id) LEFT JOIN " . DB_PREFIX . "return_status rs ON (r.return_status_id = rs.return_status_id AND rs.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "return_action ra ON (r.return_action_id = ra.return_action_id AND ra.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "return_reason rr ON (r.return_reason_id = rr.return_reason_id AND rr.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "product_description pd ON (r.product_id = pd.product_id AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "')";
        } else {
            $sql = "SELECT *, CONCAT(r.firstname, ' ', r.lastname) AS customer, (SELECT rs.name FROM " . DB_PREFIX . "return_status rs WHERE rs.return_status_id = r.return_status_id AND rs.language_id = '" . (int)$this->config->get('config_language_id') . "') AS status FROM `" . DB_PREFIX . "return` r";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "return`r";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "return` r LEFT JOIN " . DB_PREFIX . "customer c ON (r.customer_id = c.customer_id) LEFT JOIN " . DB_PREFIX . "return_status rs ON (r.return_status_id = rs.return_status_id AND rs.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "return_action ra ON (r.return_action_id = ra.return_action_id AND ra.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "return_reason rr ON (r.return_reason_id = rr.return_reason_id AND rr.language_id = '" . (int)$this->config->get('config_language_id') . "') LEFT JOIN " . DB_PREFIX . "product_description pd ON (r.product_id = pd.product_id AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "')";
        } else {
            $sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "return` r";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (!empty($data['filter_return_id'])) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            if (!empty($data['filter_customer_id'])) {
                $implode[] = "CONCAT(c.firstname, ' ', c.lastname) = '" . $this->db->escape($data['filter_customer_id']) . "'";
            }

            if (!empty($data['filter_email'])) {
                $implode[] = "LCASE(r.email) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_email'])) . "%'";
            }

            if (!empty($data['filter_telephone'])) {
                $implode[] = "r.telephone LIKE '" . $this->db->escape($data['filter_telephone']) . "%'";
            }

            if (!empty($data['filter_product_id'])) {
                $implode[] = "pd.name = '" . $this->db->escape($data['filter_product_id']) . "'";
            }

            if (!empty($data['filter_quantity'])) {
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($data['filter_quantity'], "r.quantity");
                } else {
                    $implode[] = "r.quantity = '" . (int)$data['filter_quantity'] . "'";
                }
            }

            if (!empty($data['filter_return_reason'])) {
                $implode[] = "r.return_reason_id = '" . (int)$data['filter_return_reason'] . "'";
            }

            if (!empty($data['filter_opened'])) {
                $implode[] = "r.opened = '" . (int)$data['filter_opened'] . "'";
            }

            if (!empty($data['filter_comment'])) {
                $implode[] = "LCASE(r.comment) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_comment'])) . "%'";
            }

            if (isset($data['filter_return_action']) && !is_null($data['filter_return_action'])) {
                $implode[] = "r.return_action_id = '" . (int)$data['filter_return_action'] . "'";
            }

            if (!empty($data['filter_return_status'])) {
                $implode[] = "r.return_status_id = '" . (int)$data['filter_return_status'] . "'";
            }

            if (!empty($data['filter_date_ordered'])) {
                $implode[] = "DATE(r.date_ordered) = DATE('" . $this->db->escape($data['filter_date_ordered']) . "')";
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Date interval -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "DATE\((.*?)\) = DATE\('" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "\'\)";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($this->db->escape($data['$2']), "$1", true);
                } else {
                    $implode[] = "DATE($1) = DATE('" . $this->db->escape($data['$2']) . "')";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Return ID & Order ID interval -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "r\.(return_id|order_id) = '" \. \(int\)\$data\['(.*?)'\] \. "\'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($data['$2'], "r.$1");
                } else {
                    $implode[] = "r.$1 = '" . (int)$data['$2'] . "'";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix product & model filtering -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "r\.(product|model) = '" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "'";~]]></search>
            <add><![CDATA[
            $implode[] = "LCASE(r.$1) LIKE '" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere for return fields -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "(.*?) LIKE '" \. \$this->db->escape\((.*?)\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $implode[] = "$1 LIKE '%" . $this->db->escape($2) . "%'";
                } else {
                    $implode[] = "$1 LIKE '" . $this->db->escape($2) . "%'";
                }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
            $sort_data[] = 'customer_name';
            $sort_data[] = 'r.email';
            $sort_data[] = 'r.telephone';
            $sort_data[] = 'product_name';
            $sort_data[] = 'r.quantity';
            $sort_data[] = 'return_reason';
            $sort_data[] = 'r.opened';
            $sort_data[] = 'r.comment';
            $sort_data[] = 'return_action';
            $sort_data[] = 'return_status';
            $sort_data[] = 'r.date_ordered';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/return_list.tpl">
        <operation>
            <search position="replace" offset="39"><![CDATA[
            <td class="right"><?php if ($sort == 'r.return_id') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo $sorts[$col]; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo $columns[$col]; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo $columns[$col]; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="right"><?php if ($sort == 'r.return_id') { ?>
                <a href="<?php echo $sort_return_id; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_return_id; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_return_id; ?>"><?php echo $column_return_id; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'r.order_id') { ?>
                <a href="<?php echo $sort_order_id; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_order_id; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_order_id; ?>"><?php echo $column_order_id; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'customer') { ?>
                <a href="<?php echo $sort_customer; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_customer; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_customer; ?>"><?php echo $column_customer; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.product') { ?>
                <a href="<?php echo $sort_product; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_product; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_product; ?>"><?php echo $column_product; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.model') { ?>
                <a href="<?php echo $sort_model; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_model; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_model; ?>"><?php echo $column_model; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.date_added') { ?>
                <a href="<?php echo $sort_date_added; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_added; ?>"><?php echo $column_date_added; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.date_modified') { ?>
                <a href="<?php echo $sort_date_modified; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_modified; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_modified; ?>"><?php echo $column_date_modified; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="18"><![CDATA[
            <tr class="filter">
            ]]></search>
            <add><![CDATA[
            <tr class="filter">
              <td></td>
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'return_reason': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <?php foreach ($return_reasons as $return_reason) { ?>
                  <option value="<?php echo $return_reason['return_reason_id']; ?>"<?php echo ($return_reason['return_reason_id'] == $filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $return_reason['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    case 'return_action': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && $filters[$col] == '0') ? ' selected="selected"' : ''; ?>><?php echo $text_none; ?></option>
                  <?php foreach ($return_actions as $return_action) { ?>
                  <option value="<?php echo $return_action['return_action_id']; ?>"<?php echo ($return_action['return_action_id'] == $filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $return_action['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    case 'return_status': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <?php foreach ($return_statuses as $return_status) { ?>
                  <option value="<?php echo $return_status['return_status_id']; ?>"<?php echo ($return_status['return_status_id'] == $filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $return_status['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    case 'opened': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="1"<?php echo ($filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_yes; ?></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && !$filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_no; ?></option>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><input type="text" name="filter_<?php echo $col; ?>" value="<?php echo $filters[$col]; ?>" class="filter <?php echo $col; ?>" /></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td align="right"><input type="text" name="filter_return_id" value="<?php echo $filter_return_id; ?>" size="4" style="text-align: right;" /></td>
              <td align="right"><input type="text" name="filter_order_id" value="<?php echo $filter_order_id; ?>" size="4" style="text-align: right;" /></td>
              <td><input type="text" name="filter_customer" value="<?php echo $filter_customer; ?>" /></td>
              <td><input type="text" name="filter_product" value="<?php echo $filter_product; ?>" /></td>
              <td><input type="text" name="filter_model" value="<?php echo $filter_model; ?>" /></td>
              <td><select name="filter_return_status_id">
                  <option value="*"></option>
                  <?php foreach ($return_statuses as $return_status) { ?>
                  <?php if ($return_status['return_status_id'] == $filter_return_status_id) { ?>
                  <option value="<?php echo $return_status['return_status_id']; ?>" selected="selected"><?php echo $return_status['name']; ?></option>
                  <?php } else { ?>
                  <option value="<?php echo $return_status['return_status_id']; ?>"><?php echo $return_status['name']; ?></option>
                  <?php } ?>
                  <?php } ?>
                </select></td>
              <td><input type="text" name="filter_date_added" value="<?php echo $filter_date_added; ?>" size="12" class="date" /></td>
              <td><input type="text" name="filter_date_modified" value="<?php echo $filter_date_modified; ?>" size="12" class="date" /></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="7"><![CDATA[
            <td class="right"><?php echo $return['return_id']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $return['return_id']; ?>"><?php echo $return[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="right"><?php echo $return['return_id']; ?></td>
              <td class="right"><?php echo $return['order_id']; ?></td>
              <td class="left"><?php echo $return['customer']; ?></td>
              <td class="left"><?php echo $return['product']; ?></td>
              <td class="left"><?php echo $return['model']; ?></td>
              <td class="left"><?php echo $return['status']; ?></td>
              <td class="left"><?php echo $return['date_added']; ?></td>
              <td class="left"><?php echo $return['date_modified']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="10"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="10"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            function filter() {
            ]]></search>
            <add><![CDATA[
$('#form input, #form select').keydown(function(e) {
    if (e.keyCode == 13) {
        filter();
    }
});
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            var filter_return_id = $('input[name=\'filter_return_id\']').attr('value');
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) {
foreach($column_info as $column => $val) {
    if ($val['filter']['show']) {
        if ($val['filter']['type'] == 0) { ?>
    var filter_<?php echo $column; ?> = $('input[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?>) {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php } else if ($val['filter']['type'] == 1) { ?>
    var filter_<?php echo $column; ?> = $('select[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?> && filter_<?php echo $column; ?> != '*') {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php }
    }
}
} ?>
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix select filters -->
            <search position="replace" regex="true"><![CDATA[~if \(([^&]*?) != '\*'\) {~]]></search>
            <add><![CDATA[
    if ($1 && $1 != '*') {
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $('.date').datepicker
            ]]></search>
            <add><![CDATA[$('.date, input.filter.date_ordered, input.filter.date_added, input.filter.date_modified').datepicker]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $('input[name=\'filter_customer\']').catcomplete({
            ]]></search>
            <add><![CDATA[$('input[name=\'filter_customer_none\']').catcomplete({]]></add>
        </operation>
        <operation error="log"><!-- Sort & order fix for filtering -->
            <search position="replace" regex="true"><![CDATA[~url = 'index\.php\?route=(.*?)&token=<\?php echo \$token; \?>';~]]></search>
            <add><![CDATA[url = 'index.php?route=$1&token=<?php echo $token; ?>&sort=<?php echo $sort; ?>&order=<?php echo $order; ?>';]]></add>
        </operation>
        <operation error="log"><!-- Do not constrain date field input -->
            <search position="replace"><![CDATA[{dateFormat: 'yy-mm-dd'}]]></search>
            <add><![CDATA[{dateFormat: 'yy-mm-dd', constrainInput: false}]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_returns_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".status_quick_edit").editable(function(value, settings) {
    var notify = $('#notify', this).is(':checked') ? 1 : 0;
    var params = {notify: notify};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'status_edit',
      data      : '<?php echo trim($return_statuses_select); ?>',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      notify_customer_text : '<?php echo $text_notify_customer; ?>',
      notify_customer      : <?php echo (int)$notify_customer; ?>,
  });
 $(".action_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($return_actions_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
  });
 $(".reason_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($return_reasons_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
  });
 $(".yes_no_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($yes_no_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
  });
 $(".product_quick_edit").editable(function(value, settings) {
    var product = $('#product_edit', this);
    var product_id = product.attr('title');
    if (!product_id || product.val() == '')
        return this.revert;
    value = product_id;
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'product_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
      token     : '<?php echo $token; ?>',
  });
 $(".customer_quick_edit").editable(function(value, settings) {
    var customer = $('#customer_edit', this);
    var customer_id = customer.attr('title');
    if (!customer_id || customer.val() == '')
        return this.revert;
    value = customer_id;
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'customer_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
      token     : '<?php echo $token; ?>',
  });
 $(".name_quick_edit").editable(function(value, settings) {
    var name = $('#first_name', this).val() + '||' + $('#last_name', this).val();
    return quick_update(this, name, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'person_name_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_name_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
 $(".text_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'textarea',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      submit    : 'OK',
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".date_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'date_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
  });
});
$('input[name=\'filter_product_id\']').autocomplete({
    delay: 0,
    source: function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/product/autocomplete&token=<?php echo $token; ?>&filter_name=' +  encodeURIComponent(request.term),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item.name,
                        value: item.product_id
                    }
                }));
            }
        });
    },
    select: function(event, ui) {
        $('input[name=\'filter_product_id\']').val(ui.item.label);
        return false;
    },
    focus: function(event, ui) {
        $('input[name=\'filter_product_id\']').val(ui.item.label);
        return false;
    }
});
$('input[name=\'filter_customer_id\']').catcomplete({
    delay: 0,
    source: function(request, response) {
        $.ajax({
            url: 'index.php?route=sale/customer/autocomplete&token=<?php echo $token; ?>&filter_name=' +  encodeURIComponent(request.term),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        category: item.customer_group,
                        label: item.name,
                        value: item.customer_id
                    }
                }));
            }
        });
    },
    select: function(event, ui) {
        $('input[name=\'filter_customer_id\']').val(ui.item.label);
        return false;
    },
    focus: function(event, ui) {
        $('input[name=\'filter_customer_id\']').val(ui.item.label);
        return false;
    }
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> COUPONS -->
    <file name="admin/controller/sale/coupon.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleCoupon extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="10"><![CDATA[
            $this->data['coupons'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) {
                $cols = $this->config->get('aqe_sales_coupons');
                $columns = array(
                    'coupon_id'  => $result['coupon_id'],
                    'selected'   => isset($this->request->post['selected']) && in_array($result['coupon_id'], $this->request->post['selected']),
                    'action'     => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['code'] = $result['code'];
                    $columns['discount'] = $result['discount'];
                    $date = new DateTime($result['date_start']);
                    $columns['date_start'] = $date->format($this->language->get('date_format_short'));
                    $date = new DateTime($result['date_end']);
                    $columns['date_end'] = $date->format($this->language->get('date_format_short'));
                    $columns['status'] = ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if (in_array($column, array('date_start', 'date_end'))) {
                                $date = new DateTime($result[$column]);
                                $columns[$column] = $date->format("Y-m-d");
                            } else if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if ($column == 'type') {
                                $columns[$column] = (($result[$column] == 'P') ? $this->language->get('text_percent') : $this->language->get('text_amount'));
                            } else if (in_array($column, array('logged', 'shipping'))) {
                                $columns[$column] = (($result[$column]) ? $this->language->get('text_yes') : $this->language->get('text_no'));
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['coupons'][] = $columns;
            } else {
                $this->data['coupons'][] = array(
                    'coupon_id'  => $result['coupon_id'],
                    'name'       => $result['name'],
                    'code'       => $result['code'],
                    'discount'   => $result['discount'],
                    'date_start' => date($this->language->get('date_format_short'), strtotime($result['date_start'])),
                    'date_end'   => date($this->language->get('date_format_short'), strtotime($result['date_end'])),
                    'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
                    'selected'   => isset($this->request->post['selected']) && in_array($result['coupon_id'], $this->request->post['selected']),
                    'action'     => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        $this->data['column_type'] = $this->language->get('column_type');
        $this->data['column_total'] = $this->language->get('column_total');
        $this->data['column_logged'] = $this->language->get('column_logged');
        $this->data['column_shipping'] = $this->language->get('column_shipping');
        $this->data['column_uses_customer'] = $this->language->get('column_uses_customer');
        $this->data['column_uses_total'] = $this->language->get('column_uses_total');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) {
            $cols = $this->config->get('aqe_sales_coupons');
            if (!is_array($cols)) {
                $column_order = array('name', 'code', 'discount', 'date_start', 'date_end', 'status');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/coupon/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));
            $this->data['yes_no_select'] = addslashes(json_encode(array("0" => $this->language->get('text_no'), "1" => $this->language->get('text_yes'))));
            $this->data['type_select'] = addslashes(json_encode(array('P' => $this->language->get('text_percent'), "F" => $this->language->get('text_amount'))));
            $this->data['error_update'] = $this->language->get('error_update');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = HTTPS_SERVER . 'index.php?route=sale/coupon&token=' . $this->session->data['token'] . '&sort=name' . $url;
            ]]></search>
            <add><![CDATA[
        $this->data['sort_type'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=type' . $url, 'SSL');
        $this->data['sort_total'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=total' . $url, 'SSL');
        $this->data['sort_logged'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=logged' . $url, 'SSL');
        $this->data['sort_shipping'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=shipping' . $url, 'SSL');
        $this->data['sort_uses_total'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=uses_total' . $url, 'SSL');
        $this->data['sort_uses_customer'] = $this->url->link('sale/coupon', 'token=' . $this->session->data['token'] . '&sort=uses_customer' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function quick_update() {
        $this->language->load('sale/coupon');
        $this->load->model('sale/coupon');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_sale_coupon->quickEditCoupon($id, $column, $value, null, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('discount', 'total')))
                    $json['value'] = sprintf("%.4f", round((float)$value, 4));
                else if (in_array($column, array('uses_total', 'uses_customer')))
                    $json['value'] = (int)$value;
                else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if (in_array($column, array('logged', 'shipping')))
                    $json['value'] = ((int)$value) ? $this->language->get('text_yes') : $this->language->get('text_no');
                else if (in_array($column, array('date_start', 'date_end')))
                    $json['value'] = $value;
                else if ($column == 'type')
                    $json['value'] = ($value == 'P') ? $this->language->get('text_percent') : $this->language->get('text_amount');
                else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/coupon')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && (utf8_strlen($data['new']) < 3 || utf8_strlen($data['new']) > 128)) {
            $this->error['warning'] = $this->language->get('error_name');
        }

        if ($column == "code") {
            if (utf8_strlen($data['new']) < 3 || utf8_strlen($data['new']) > 10) {
                $this->error['warning'] = $this->language->get('error_code');
            } else {
                $coupon_info = $this->model_sale_coupon->getCouponByCode($data['new']);

                if ($coupon_info) {
                    if (!isset($data['id'])) {
                        $this->error['warning'] = $this->language->get('error_exists');
                    } elseif ($coupon_info['coupon_id'] != $data['id'])  {
                        $this->error['warning'] = $this->language->get('error_exists');
                    }
                }
            }
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/coupon.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_type']         = 'Type';
$_['column_total']        = 'Total Amount';
$_['column_logged']       = 'Customer Login';
$_['column_shipping']     = 'Free Shipping';
$_['column_uses_total']   = 'Uses Per Coupon';
$_['column_uses_customer']  = 'Uses Per Customer';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_code']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/coupon.php">
        <operation>
            <search position="before"><![CDATA[
            public function addCoupon($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditCoupon($coupon_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'code', 'type', 'total', 'logged', 'shipping', 'discount', 'date_start', 'date_end', 'uses_total', 'uses_customer', 'status');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('logged', 'shipping', 'uses_total', 'uses_customer', 'status')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "coupon` SET " . $column . " = '" . (int)$value . "' WHERE coupon_id = '" . (int)$coupon_id . "'");
            else if (in_array($column, array('discount', 'total')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "coupon` SET " . $column . " = '" . (float)$value . "' WHERE coupon_id = '" . (int)$coupon_id . "'");
            else if (in_array($column, array('name', 'code', 'type', 'date_start', 'date_end')))
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "coupon` SET " . $column . " = '" . $this->db->escape($value) . "' WHERE coupon_id = '" . (int)$coupon_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status FROM " . DB_PREFIX . "coupon";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) {
            $sql = "SELECT * FROM " . DB_PREFIX . "coupon";
        } else {
            $sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status FROM " . DB_PREFIX . "coupon";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) {
            $sort_data[] = 'type';
            $sort_data[] = 'total';
            $sort_data[] = 'logged';
            $sort_data[] = 'shipping';
            $sort_data[] = 'uses_total';
            $sort_data[] = 'uses_customer';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/coupon_list.tpl">
        <operation>
            <search position="replace" offset="29"><![CDATA[
            <td class="left"><?php if ($sort == 'cd.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'code') { ?>
                <a href="<?php echo $sort_code; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_code; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_code; ?>"><?php echo $column_code; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'discount') { ?>
                <a href="<?php echo $sort_discount; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_discount; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_discount; ?>"><?php echo $column_discount; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'date_start') { ?>
                <a href="<?php echo $sort_date_start; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_start; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_start; ?>"><?php echo $column_date_start; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'date_end') { ?>
                <a href="<?php echo $sort_date_end; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_end; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_end; ?>"><?php echo $column_date_end; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="5"><![CDATA[
            <td class="left"><?php echo $coupon['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $coupon['coupon_id']; ?>"><?php echo $coupon[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $coupon['name']; ?></td>
              <td class="left"><?php echo $coupon['code']; ?></td>
              <td class="right"><?php echo $coupon['discount']; ?></td>
              <td class="left"><?php echo $coupon['date_start']; ?></td>
              <td class="left"><?php echo $coupon['date_end']; ?></td>
              <td class="left"><?php echo $coupon['status']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="8"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="8"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_coupons_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".type_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($type_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".yes_no_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($yes_no_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".date_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'date_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> CUSTOMERS -->
    <file name="admin/controller/sale/customer.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerSaleCustomer extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            private function getList()
            ]]></search>
            <add><![CDATA[
        $filters = array();
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            foreach($this->config->get('aqe_sales_customers') as $column => $attr) {
                $filters[$column] = (isset($this->request->get['filter_' . $column])) ? $this->request->get['filter_' . $column] : null;
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            $url .= '&filter_name=' . $this->request->get['filter_name'];
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            foreach($this->config->get('aqe_sales_customers') as $column => $attr) {
                if ($attr['filter']['show'] && isset($this->request->get['filter_' . $column])) {
                    $url .= '&filter_' . $column . '=' . urlencode(html_entity_decode($this->request->get['filter_' . $column], ENT_QUOTES, 'UTF-8'));
                }
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix for filter urls -->
            <search position="replace" regex="true"><![CDATA[~\$url \.= '&(.*?)=' \. \$this->request->get\['(.*?)'\];~]]></search>
            <add><![CDATA[$url .= '&$1=' . urlencode(html_entity_decode($this->request->get['$2'], ENT_QUOTES, 'UTF-8'));]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $customer_total = $this->model_sale_customer->getTotalCustomers($data);
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            foreach($this->config->get('aqe_sales_customers') as $column => $attr) {
                $data['filter_' . $column] = $filters[$column];
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="11"><![CDATA[
            $this->data['customers'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
                $cp_cols = $this->config->get('aqe_sales_customers');
                $columns = array(
                    'customer_id' => $result['customer_id'],
                    'selected'    => isset($this->request->post['selected']) && in_array($result['customer_id'], $this->request->post['selected']),
                    'action'      => $action
                );
                if (!is_array($cp_cols)) {
                    $columns['name'] = $result['name'];
                    $columns['email'] = $result['email'];
                    $columns['customer_group'] = $result['customer_group'];
                    $columns['status'] = ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                    $columns['approved'] = ($result['approved'] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                    $columns['ip'] = $result['ip'];
                    $date = new DateTime($result['date_added']);
                    $columns['date_added'] = $date->format($this->language->get('date_format_short'));
                } else {
                    foreach($cp_cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if (in_array($column, array('newsletter', 'approved')))
                                $columns[$column] = ($result[$column] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                            else if ($column == 'date_added') {
                                $date = new DateTime($result['date_added']);
                                $columns[$column] = $date->format($this->language->get('date_format_short'));
                            } else
                                $columns[$column] = $result[$column];
                        }
                    }
                }
                $this->data['customers'][] = $columns;
            } else {
                $this->data['customers'][] = array(
                    'customer_id'    => $result['customer_id'],
                    'name'           => $result['name'],
                    'email'          => $result['email'],
                    'customer_group' => $result['customer_group'],
                    'status'         => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
                    'approved'       => ($result['approved'] ? $this->language->get('text_yes') : $this->language->get('text_no')),
                    'ip'             => $result['ip'],
                    'date_added'     => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                    'selected'       => isset($this->request->post['selected']) && in_array($result['customer_id'], $this->request->post['selected']),
                    'action'         => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $this->data['columns'] = array();
            foreach($this->config->get('aqe_sales_customers') as $column => $attr) {
                $this->data['columns'][$column] = $this->language->get('column_' . $column);
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_filter'] = $this->language->get('button_filter');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $cp_cols = $this->config->get('aqe_sales_customers');
            if (!is_array($cp_cols)) {
                $column_order = array('name', 'email', 'customer_group', 'status', 'ip', 'date_added');
                $cp_cols = array();
            } else {
                $column_order = array();
                uasort($cp_cols, 'column_sort');

                foreach($cp_cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cp_cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/customer/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));
            $this->data['yes_no_select'] = addslashes(json_encode(array("0" => $this->language->get('text_no'), "1" => $this->language->get('text_yes'))));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['load_name_url'] = html_entity_decode($this->url->link('sale/customer/load_name', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('sale/customer_group');
            $customer_groups = $this->model_sale_customer_group->getCustomerGroups();
            $c_select = array();
            foreach ($customer_groups as $c) {
                $c_select[$c['customer_group_id']] = $c['name'];
            }
            $this->data['customer_group_select'] = addslashes(json_encode($c_select));
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('sale/customer', 'token=' . $this->session->data['token'] . '&sort=name' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $this->data['sorts'] = array();
            foreach($this->config->get('aqe_sales_customers') as $column => $attr) {
                $this->data['sorts'][$column] = $this->url->link('sale/customer', 'token=' . $this->session->data['token'] . '&sort=' . $attr['sort'] . $url, 'SSL');
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['filter_name'] = $filter_name;
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $this->data['filters'] = $filters;
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_name() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('sale/customer');
            $result = $this->model_sale_customer->getCustomer($id);
            if ($result) {
                $json['first_name'] = $result['firstname'];
                $json['last_name'] = $result['lastname'];
            } else {
                $this->language->load('sale/customer');
                $json['error'] = $this->language->get('error_load_name');
            }
        } else {
            $this->language->load('sale/customer');
            $json['error'] = $this->language->get('error_load_name');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('sale/customer');
        $this->load->model('sale/customer');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_sale_customer->quickEditCustomer($id, $column, $value, null, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('email', 'telephone', 'fax')))
                    $json['value'] = $value;
                else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if (in_array($column, array('approved', 'newsletter')))
                    $json['value'] = ((int)$value) ? $this->language->get('text_yes') : $this->language->get('text_no');
                else if ($column == 'customer_group') {
                    $this->load->model('sale/customer_group');
                    $customer_group = $this->model_sale_customer_group->getCustomerGroup((int)$value);
                    if ($customer_group)
                        $json['value'] = $customer_group['name'];
                    else
                        $json['value'] = '';
                } else if($column == 'name') {
                        $json['value'] = str_replace("||", " ", $value);
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'sale/customer')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/customer')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && strpos($data['new'], "||") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name") {
            list($first, $last) = explode("||", $data['new']);
            if (utf8_strlen($first) < 1 || utf8_strlen($first) > 32)
                $this->error['warning'] = $this->language->get('error_firstname');
            else if (utf8_strlen($last) < 1 || utf8_strlen($last) > 32)
                $this->error['warning'] = $this->language->get('error_lastname');
        }

        if ($column == "email" && ((utf8_strlen($data['new']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $data['new']))) {
            $this->error['warning'] = $this->language->get('error_email');
        }

        if ($column == "telephone" && ((utf8_strlen($data['new']) < 3) || utf8_strlen($data['new']) > 32)) {
            $this->error['warning'] = $this->language->get('error_telephone');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/customer.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_telephone']       = 'Telephone';
$_['column_fax']             = 'Fax';
$_['column_newsletter']      = 'Newsletter';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_zone']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_name']        = 'Warning: Loading name data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/customer.php">
        <operation>
            <search position="before"><![CDATA[
            public function addCustomer($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditCustomer($customer_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'email', 'telephone', 'fax', 'newsletter', 'customer_group', 'approved', 'status');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('email', 'telephone', 'fax')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "customer SET " . $column . " = '" . $this->db->escape($value) . "' WHERE customer_id = '" . (int)$customer_id . "'");
            else if (in_array($column, array('newsletter', 'approved', 'status')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "customer SET " . $column . " = '" . (int)$value . "' WHERE customer_id = '" . (int)$customer_id . "'");
            else if ($column == "customer_group")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "customer SET customer_group_id = '" . (int)$value . "' WHERE customer_id = '" . (int)$customer_id . "'");
            else if ($column == "name") {
                list($first_name, $last_name) = explode("||", $value);
                $result = $this->db->query("UPDATE " . DB_PREFIX . "customer SET firstname = '" . $this->db->escape($first_name) . "', lastname = '" . $this->db->escape($last_name) . "' WHERE customer_id = '" . (int)$customer_id . "'");
            }
        }
        return $result;
    }

    public function filterInterval($filter, $field, $date=false) {
        if ($date) {
            if (preg_match('/^(!=|<>)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) <> DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(<|<=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) <= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) >= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(<|<=|>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) ${matches[1]} DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=|<|<=)$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field)";
            } else {
                return "DATE(${field}) = DATE('${filter}')";
            }
        } else {
            if (preg_match('/^(!=|<>)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field <> '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(<|<=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] <= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] >= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(<|<=|>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field ${matches[1]} '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=|<|<=)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field";
            } else {
                return $field . " = '" . (int)$filter . "'";
            }
        }
    }
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer"
            ]]></search>
            <add><![CDATA["SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer c"]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (!empty($data['filter_name'])) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            if (!empty($data['filter_customer_group'])) {
                $implode[] = "c.customer_group_id = '" . (int)$data['filter_customer_group'] . "'";
            }

            if (!empty($data['filter_telephone'])) {
                $implode[] = "telephone LIKE '%" . $this->db->escape($data['filter_telephone']) . "%'";
            }

            if (!empty($data['filter_fax'])) {
                $implode[] = "fax LIKE '%" . $this->db->escape($data['filter_fax']) . "%'";
            }

            if (isset($data['filter_newsletter']) && !is_null($data['filter_newsletter'])) {
                $implode[] = "newsletter = '" . (int)$data['filter_newsletter'] . "'";
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Date interval -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "DATE\((.*?)\) = DATE\('" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "\'\)";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_interval_filter')) {
                    $implode[] = $this->filterInterval($this->db->escape($data['$2']), "$1", true);
                } else {
                    $implode[] = "DATE($1) = DATE('" . $this->db->escape($data['$2']) . "')";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere for customer name and email -->
            <search position="replace" regex="true"><![CDATA[~\$implode\[\] = "LCASE\((.*?)\) LIKE '" \. \$this->db->escape\(utf8_strtolower\(\$data\['(.*?)'\]\)\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $implode[] = "LCASE($1) LIKE '%" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                } else {
                    $implode[] = "LCASE($1) LIKE '" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
            $sort_data[] = 'c.telephone';
            $sort_data[] = 'c.fax';
            $sort_data[] = 'c.newsletter';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/customer_list.tpl">
        <operation>
            <search position="replace" offset="34"><![CDATA[
            <td class="left"><?php if ($sort == 'name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo $sorts[$col]; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo $columns[$col]; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo $columns[$col]; ?></td>
                <?php } ?>
              <?php } ?>
             <?php } else { ?>
              <td class="left"><?php if ($sort == 'name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'c.email') { ?>
                <a href="<?php echo $sort_email; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_email; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_email; ?>"><?php echo $column_email; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'customer_group') { ?>
                <a href="<?php echo $sort_customer_group; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_customer_group; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_customer_group; ?>"><?php echo $column_customer_group; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'c.status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'c.approved') { ?>
                <a href="<?php echo $sort_approved; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_approved; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_approved; ?>"><?php echo $column_approved; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'c.ip') { ?>
                <a href="<?php echo $sort_ip; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_ip; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_ip; ?>"><?php echo $column_ip; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'c.date_added') { ?>
                <a href="<?php echo $sort_date_added; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_added; ?>"><?php echo $column_date_added; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="41"><![CDATA[
            <tr class="filter">
            ]]></search>
            <add><![CDATA[
            <tr class="filter">
              <td></td>
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'customer_group': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <?php foreach ($customer_groups as $customer_group) { ?>
                  <option value="<?php echo $customer_group['customer_group_id']; ?>"<?php echo ($customer_group['customer_group_id'] == $filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $customer_group['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    case 'status': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="1"<?php echo ($filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_enabled; ?></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && !$filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_disabled; ?></option>
                </select>
              </td>
                        <?php break;
                    case 'newsletter':
                    case 'approved': ?>
              <td class="<?php echo $column_info[$col]['align']; ?>">
                <select name="filter_<?php echo $col; ?>">
                  <option value="*"></option>
                  <option value="1"<?php echo ($filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_yes; ?></option>
                  <option value="0"<?php echo (!is_null($filters[$col]) && !$filters[$col]) ? ' selected="selected"' : ''; ?>><?php echo $text_no; ?></option>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><input type="text" name="filter_<?php echo $col; ?>" value="<?php echo $filters[$col]; ?>" class="filter <?php echo $col; ?>" /></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td><input type="text" name="filter_name" value="<?php echo $filter_name; ?>" /></td>
              <td><input type="text" name="filter_email" value="<?php echo $filter_email; ?>" /></td>
              <td><select name="filter_customer_group_id">
                  <option value="*"></option>
                  <?php foreach ($customer_groups as $customer_group) { ?>
                  <?php if ($customer_group['customer_group_id'] == $filter_customer_group_id) { ?>
                  <option value="<?php echo $customer_group['customer_group_id']; ?>" selected="selected"><?php echo $customer_group['name']; ?></option>
                  <?php } else { ?>
                  <option value="<?php echo $customer_group['customer_group_id']; ?>"><?php echo $customer_group['name']; ?></option>
                  <?php } ?>
                  <?php } ?>
                </select></td>
              <td><select name="filter_status">
                  <option value="*"></option>
                  <?php if ($filter_status) { ?>
                  <option value="1" selected="selected"><?php echo $text_enabled; ?></option>
                  <?php } else { ?>
                  <option value="1"><?php echo $text_enabled; ?></option>
                  <?php } ?>
                  <?php if (!is_null($filter_status) && !$filter_status) { ?>
                  <option value="0" selected="selected"><?php echo $text_disabled; ?></option>
                  <?php } else { ?>
                  <option value="0"><?php echo $text_disabled; ?></option>
                  <?php } ?>
                </select></td>
              <td><select name="filter_approved">
                  <option value="*"></option>
                  <?php if ($filter_approved) { ?>
                  <option value="1" selected="selected"><?php echo $text_yes; ?></option>
                  <?php } else { ?>
                  <option value="1"><?php echo $text_yes; ?></option>
                  <?php } ?>
                  <?php if (!is_null($filter_approved) && !$filter_approved) { ?>
                  <option value="0" selected="selected"><?php echo $text_no; ?></option>
                  <?php } else { ?>
                  <option value="0"><?php echo $text_no; ?></option>
                  <?php } ?>
                </select></td>
              <td><input type="text" name="filter_ip" value="<?php echo $filter_ip; ?>" /></td>
              <td><input type="text" name="filter_date_added" value="<?php echo $filter_date_added; ?>" size="12" id="date" /></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            <td class="left"><?php echo $customer['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $customer['customer_id']; ?>"><?php echo $customer[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $customer['name']; ?></td>
              <td class="left"><?php echo $customer['email']; ?></td>
              <td class="left"><?php echo $customer['customer_group']; ?></td>
              <td class="left"><?php echo $customer['status']; ?></td>
              <td class="left"><?php echo $customer['approved']; ?></td>
              <td class="left"><?php echo $customer['ip']; ?></td>
              <td class="left"><?php echo $customer['date_added']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="10"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 3; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="10"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            function filter() {
            ]]></search>
            <add><![CDATA[
$('#form input, #form select').keydown(function(e) {
    if (e.keyCode == 13) {
        filter();
    }
});
            ]]></add>
        </operation>
        <operation error="log">
            <search position="before"><![CDATA[
            var filter_name = $('input[name=\'filter_name\']').attr('value');
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) {
foreach($column_info as $column => $val) {
    if ($val['filter']['show']) {
        if ($val['filter']['type'] == 0) { ?>
    var filter_<?php echo $column; ?> = $('input[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?>) {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php } else if ($val['filter']['type'] == 1) { ?>
    var filter_<?php echo $column; ?> = $('select[name=\'filter_<?php echo $column; ?>\']').attr('value');

    if (filter_<?php echo $column; ?> && filter_<?php echo $column; ?> != '*') {
        url += '&filter_<?php echo $column; ?>=' + encodeURIComponent(filter_<?php echo $column; ?>);
    }

<?php }
    }
}
} ?>
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix select filters -->
            <search position="replace" regex="true"><![CDATA[~if \((.*?) != '\*'\) {~]]></search>
            <add><![CDATA[
    if ($1 && $1 != '*') {
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            $('#date').datepicker
            ]]></search>
            <add><![CDATA[$('#date, input.filter.date_added').datepicker]]></add>
        </operation>
        <operation error="log"><!-- Sort & order fix for filtering -->
            <search position="replace" regex="true"><![CDATA[~url = 'index\.php\?route=(.*?)&token=<\?php echo \$token; \?>';~]]></search>
            <add><![CDATA[url = 'index.php?route=$1&token=<?php echo $token; ?>&sort=<?php echo $sort; ?>&order=<?php echo $order; ?>';]]></add>
        </operation>
        <operation error="log"><!-- Do not constrain date field input -->
            <search position="replace"><![CDATA[{dateFormat: 'yy-mm-dd'}]]></search>
            <add><![CDATA[{dateFormat: 'yy-mm-dd', constrainInput: false}]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_customers_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".yes_no_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($yes_no_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".group_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($customer_group_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".name_quick_edit").editable(function(value, settings) {
    var name = $('#first_name', this).val() + '||' + $('#last_name', this).val();
    return quick_update(this, name, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'person_name_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_name_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- SALES -> ORDERS -->
    <file name="admin/controller/sale/order.php">
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_orders_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_filter'] = $this->language->get('button_filter');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_orders_status')) {
            $cols = $this->config->get('aqe_sales_orders');
            if (!is_array($cols)) {
                $cols = array();
            }
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('sale/order/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/order_status');
            $order_statuses = $this->model_localisation_order_status->getOrderStatuses();
            $status_select = array();
            foreach ($order_statuses as $status) {
                $status_select[$status['order_status_id']] = $status['name'];
            }
            $this->data['status_select'] = addslashes(json_encode($status_select));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['text_notify_customer'] = $this->language->get('text_notify_customer');
            $this->data['notify_customer'] = $this->config->get('aqe_sales_orders_notify_customer');
            $this->data['error_update'] = $this->language->get('error_update');
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix for filter urls -->
            <search position="replace" regex="true"><![CDATA[~\$url \.= '&(.*?)=' \. \$this->request->get\['(.*?)'\];~]]></search>
            <add><![CDATA[$url .= '&$1=' . urlencode(html_entity_decode($this->request->get['$2'], ENT_QUOTES, 'UTF-8'));]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function quick_update() {
        $this->load->language('sale/order');
        $this->load->model('sale/order');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $order_id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if (isset($this->request->post['notify'])) {
                $notify = $this->request->post['notify'];
            } else {
                $notify = $this->config->get('aqe_sales_orders_notify_customer');
            }
            $data = array();
            $data['notify'] = $notify;
            $data['comment'] = "";
            $data['order_status_id'] = $value;
            if ($column == "status") {
                $this->model_sale_order->addOrderHistory($order_id, $data);
                $result = true;
            } else
                $result = false;
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('status'))) {
                    $this->load->model('localisation/order_status');
                    $status = $this->model_localisation_order_status->getOrderStatus($value);
                    $json['value'] = $status['name'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'sale/order')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/sale/order.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_notify_customer']   = 'Notify Customer';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_action']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/sale/order.php">
        <operation>
            <search position="before"><![CDATA[
            public function addOrder($data)
            ]]></search>
            <add><![CDATA[
    public function filterInterval($filter, $field, $date=false) {
        if ($date) {
            if (preg_match('/^(!=|<>)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) <> DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(<|<=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) <= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 4 && strtotime($matches[1]) >= strtotime($matches[3])) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field) AND DATE($field) ${matches[2]} DATE('" . $matches[3] . "')";
            } else if (preg_match('/^(<|<=|>|>=)\s*(\d{2,4}-\d{1,2}-\d{1,2})$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE($field) ${matches[1]} DATE('" . $matches[2] . "')";
            } else if (preg_match('/^(\d{2,4}-\d{1,2}-\d{1,2})\s*(>|>=|<|<=)$/', html_entity_decode(trim($filter)), $matches) && count($matches) == 3) {
                return "DATE('" . $matches[1] . "') ${matches[2]} DATE($field)";
            } else {
                return "DATE(${field}) = DATE('${filter}')";
            }
        } else {
            if (preg_match('/^(!=|<>)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field <> '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(<|<=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] <= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 4 && (float)$matches[1] >= (float)$matches[3]) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field AND $field ${matches[2]} '" . (float)$matches[3] . "'";
            } else if (preg_match('/^(<|<=|>|>=)\s*(-?\d+\.?\d*)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "$field ${matches[1]} '" . (float)$matches[2] . "'";
            } else if (preg_match('/^(-?\d+\.?\d*)\s*(>|>=|<|<=)$/', html_entity_decode(trim(str_replace(",", ".", $filter))), $matches) && count($matches) == 3) {
                return "'" . (float)$matches[1] . "' ${matches[2]} $field";
            } else {
                return $field . " = '" . (int)$filter . "'";
            }
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (!empty($data['filter_date_added'])) {
            ]]></search>
            <add><![CDATA[
        if (!empty($data['filter_date_modified'])) {
            $sql .= " AND DATE(date_modified) = DATE('" . $this->db->escape($data['filter_date_modified']) . "')";
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere for customer name (getOrders) -->
            <search position="replace" regex="true"><![CDATA[~\$sql .= " AND LCASE\((.*?)\) LIKE '" \. \$this->db->escape\(utf8_strtolower\(\$data\['(.*?)'\]\)\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $sql .= " AND LCASE($1) LIKE '%" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                } else {
                    $sql .= " AND LCASE($1) LIKE '" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Match anywhere for customer name (getTotalOrders) -->
            <search position="replace" regex="true"><![CDATA[~\$sql .= " AND (.*?) LIKE '%" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "\%'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_match_anywhere')) {
                    $sql .= " AND LCASE($1) LIKE '%" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                } else {
                    $sql .= " AND LCASE($1) LIKE '" . $this->db->escape(utf8_strtolower($data['$2'])) . "%'";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Date interval -->
            <search position="replace" regex="true"><![CDATA[~\$sql \.= " AND DATE\((.*?)\) = DATE\('" \. \$this->db->escape\(\$data\['(.*?)'\]\) \. "\'\)";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_interval_filter')) {
                    $sql .= " AND " . $this->filterInterval($this->db->escape($data['$2']), "$1", true);
                } else {
                    $sql .= " AND DATE($1) = DATE('" . $this->db->escape($data['$2']) . "')";
                }
            ]]></add>
        </operation>
        <operation error="log"><!-- Total & Order ID interval -->
            <search position="replace" regex="true"><![CDATA[~\$sql \.= " AND o\.(order_id|total) = '" \. \((int|float)\)\$data\['(.*?)'\] \. "\'";~]]></search>
            <add><![CDATA[
                if ($this->config->get('aqe_interval_filter')) {
                    $sql .= " AND " . $this->filterInterval($data['$3'], "o.$1");
                } else {
                    $sql .= " AND o.$1 = '" . ($2)$data['$3'] . "'";
                }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/order_list.tpl">
        <operation error="log">
            <search position="before"><![CDATA[<?php echo $header; ?>]]></search>
            <add><![CDATA[<?php $_order = $order; ?>]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            <td class="left"><?php echo $order['status']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_orders_status')) { ?>
              <td class="<?php echo $column_info["status"]['align']; ?><?php echo ($column_info["status"]['qe_status']) ? ' ' . $column_info["status"]['qe_type'] : ''; ?>" id="<?php echo "status-" . $order['order_id']; ?>"><?php echo $order["status"]; ?></td>
            <?php } else { ?>
              <td class="left"><?php echo $order['status']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[$('#form input')]]></search>
            <add><![CDATA[$('#form input, #form select')]]></add>
        </operation>
        <operation error="log"><!-- Sort & order fix for filtering -->
            <search position="replace" regex="true"><![CDATA[~url = 'index\.php\?route=(.*?)&token=<\?php echo \$token; \?>';~]]></search>
            <add><![CDATA[url = 'index.php?route=$1&token=<?php echo $token; ?>&sort=<?php echo $sort; ?>&order=<?php echo $_order; ?>';]]></add>
        </operation>
        <operation error="log"><!-- Do not constrain date field input -->
            <search position="replace"><![CDATA[{dateFormat: 'yy-mm-dd'}]]></search>
            <add><![CDATA[{dateFormat: 'yy-mm-dd', constrainInput: false}]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_sales_orders_status')) { ?>
<script type="text/javascript"><!--
$(function() {
 $(".status_quick_edit").editable(function(value, settings) {
    var notify = $('#notify', this).is(':checked') ? 1 : 0;
    var params = {notify: notify};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'status_edit',
      data      : '<?php echo trim($status_select); ?>',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      notify_customer_text : '<?php echo $text_notify_customer; ?>',
      notify_customer      : <?php echo (int)$notify_customer; ?>,
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> INFORMATION -->
    <file name="admin/controller/catalog/information.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogInformation extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['informations'] = array();
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
            $this->load->model('setting/store');

            $stores = $this->model_setting_store->getStores();

            $multistore = count($stores);

            $this->data['stores'] = array();

            $this->data['stores'][0] = array(
                    'name' => $this->config->get('config_name'),
                    'href' => HTTP_CATALOG
                );

            foreach ($stores as $store) {
                $this->data['stores'][$store['store_id']] = array(
                    'name' => $store['name'],
                    'href' => $store['url']
                    );
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $action[] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status') && !$multistore) {
                $action[] = array(
                    'text'  => $this->language->get('text_view'),
                    'click' => HTTP_CATALOG . 'index.php?route=information/information&information_id=' . $result['information_id']
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['informations'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
                $cols = $this->config->get('aqe_catalog_information');
                $columns = array(
                    'information_id' => $result['information_id'],
                    'selected'       => isset($this->request->post['selected']) && in_array($result['information_id'], $this->request->post['selected']),
                    'action'         => $action
                );
                if (!is_array($cols)) {
                    $columns['title'] = $result['title'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if ($column == 'id') {
                                $columns[$column] = $result['information_id'];
                            } else if ($column == 'store') {
                                $stores = $this->model_catalog_information->getInformationStores($result['information_id']);
                                $info_stores = array();
                                foreach($stores as $store) {
                                    $info_stores[] = $this->data['stores'][$store]['name'];
                                }
                                $columns[$column] = implode("<br />", $info_stores);
                            } else if ($column == 'view_in_store') {
                                $info_stores = $this->model_catalog_information->getInformationStores($result['information_id']);

                                $columns[$column] = array();

                                foreach ($info_stores as $store) {
                                    if (!in_array($store, array_keys($this->data['stores'])))
                                        continue;
                                    $columns[$column][] = array(
                                        'name' => $this->data['stores'][$store]['name'],
                                        'href' => $this->data['stores'][$store]['href'] . 'index.php?route=information/information&information_id=' . $result['information_id']
                                        );
                                }
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['informations'][] = $columns;
            } else {
                $this->data['informations'][] = array(
                    'information_id' => $result['information_id'],
                    'title'          => $result['title'],
                    'sort_order'     => $result['sort_order'],
                    'selected'       => isset($this->request->post['selected']) && in_array($result['information_id'], $this->request->post['selected']),
                    'action'         => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
        $this->data['column_seo'] = $this->language->get('column_seo');
        $this->data['column_status'] = $this->language->get('column_status');
        $this->data['column_store'] = $this->language->get('column_store');
        $this->data['column_view_in_store'] = $this->language->get('column_view_in_store');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
            $cols = $this->config->get('aqe_catalog_information');
            if (!is_array($cols)) {
                $column_order = array('title', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/information/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));

            $this->data['text_select'] = $this->language->get('text_select');
            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/information/load_data', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['load_popup_url'] = html_entity_decode($this->url->link('catalog/information/load_popup', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_title'] = $this->url->link('catalog/information', 'token=' . $this->session->data['token'] . '&sort=id.title' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/information', 'token=' . $this->session->data['token'] . '&sort=i.information_id' . $url, 'SSL');
        $this->data['sort_seo'] = $this->url->link('catalog/information', 'token=' . $this->session->data['token'] . '&sort=seo' . $url, 'SSL');
        $this->data['sort_status'] = $this->url->link('catalog/information', 'token=' . $this->session->data['token'] . '&sort=i.status' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_popup() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadPopup($this->request->post)) {
            $this->data = array_merge($this->data, $this->load->language('catalog/information'));

            $this->data['error_warning'] = '';
            list($this->data['parameter'], $this->data['i_id']) = explode("-", $this->request->post['id']);

            $this->data['token'] = $this->session->data['token'];

            $json["success"] = 1;

            switch ($this->data['parameter']) {
                case "store":
                    $this->load->model('setting/store');
                    $this->data['stores'] = $this->model_setting_store->getStores();
                    array_unshift($this->data['stores'], array("store_id" => 0, "name" => $this->config->get('config_name')));
                    $this->load->model('catalog/information');
                    $this->data['item_store'] = $this->model_catalog_information->getInformationStores($this->data['i_id']);
                    $json['title'] = $this->language->get('entry_store');
                    break;
                default:
                    $json["success"] = 0;
                    $json['error'] = $this->language->get('error_load_popup');
                    break;
            }
            $json['title'] = $this->language->get('text_' . $this->data['parameter']);
        } else {
            $json['error'] = $this->language->get('error_load_popup');
        }

        $this->template = 'catalog/quick_edit_form.tpl';

        $json['popup'] = $this->render();

        $this->response->setOutput(json_encode($json));
    }

    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/information');
            $result = $this->model_catalog_information->getInformationDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['title']);
            }
        } else {
            $this->language->load('catalog/information');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/information');
        $this->load->model('catalog/information');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "title") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $result = $this->model_catalog_information->quickEditInformation($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('seo')))
                    $json['value'] = $value;
                else if (in_array($column, array('sort_order')))
                    $json['value'] = (int)$value;
                else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if($column == 'store') {
                    if (isset($this->request->post['i_s'])) {
                        $this->request->post['i_s'] = (array)$this->request->post['i_s'];

                        $this->load->model('setting/store');
                        $stores = $this->model_setting_store->getStores();
                        array_unshift($stores, array("store_id" => 0, "name" => $this->config->get('config_name')));

                        $info_stores = array();

                        foreach ($stores as $store) {
                            if (in_array($store['store_id'], $this->request->post['i_s']))
                                $info_stores[] = $store['name'];
                        }
                        $json['value'] = implode("<br>", $info_stores);
                    } else {
                        $json['value'] = "";
                    }
                } else if($column == 'title') {
                    if ($lang_id == $this->config->get('config_language_id')) {
                        $json['value'] = $value;
                    } else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/information')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "title") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateLoadPopup($data) {
        if (!$this->user->hasPermission('modify', 'catalog/information')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/information')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "title" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "title" && (strlen(utf8_decode($data['new'])) < 3) || (strlen(utf8_decode($data['new'])) > 64)) {
            $this->error['warning'] = $this->language->get('error_title');
        }

        if ($column == "seo") {
            $keyword = utf8_decode($data['new']);
            if ($this->model_catalog_information->urlAliasExists($id, $keyword)) {
                $this->error['warning'] = $this->language->get('error_duplicate_seo_keyword');
            }
        }

        if (in_array($column, array("store"))) {
            if (!isset($data['i_id'])) {
                $this->error['warning'] = $this->language->get('error_update');
            }
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/information.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_store']             = 'Stores';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
$_['column_store']           = 'Stores';
$_['column_seo']             = 'SEO Keyword';
$_['column_status']          = 'Status';
$_['column_view_in_store']   = 'View in Store';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_title']
            ]]></search>
            <add><![CDATA[
$_['error_update']                  = 'Warning: Updating the value failed!';
$_['error_load_data']               = 'Warning: Loading data failed!';
$_['error_load_popup']              = 'Warning: Loading popup data failed!';
$_['error_duplicate_seo_keyword']   = 'Warning: SEO keyword already in use!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/information.php">
        <operation>
            <search position="before"><![CDATA[
            public function addInformation($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditInformation($information_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('title', 'status', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('sort_order', 'status')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "information SET `" . $column . "` = '" . (int)$value . "' WHERE information_id = '" . (int)$information_id . "'");
            else if ($column == "title")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "information_description SET title = '" . $this->db->escape($value) . "' WHERE information_id = '" . (int)$information_id . "' AND language_id = '" . (int)$lang_id . "'");
        } else if ($column == 'seo') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "url_alias WHERE query = 'information_id=" . (int)$information_id. "'");
            if (!empty($value))
                $result = $this->db->query("INSERT INTO " . DB_PREFIX . "url_alias SET query = 'information_id=" . (int)$information_id . "', keyword = '" . $this->db->escape($value) . "'");
            else
                $result = 1;
        } else if ($column == 'store') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "information_to_store WHERE information_id = '" . (int)$information_id . "'");

            if (isset($data['i_s'])) {
                foreach ((array)$data['i_s'] as $store_id) {
                    $this->db->query("INSERT INTO " . DB_PREFIX . "information_to_store SET information_id = '" . (int)$information_id . "', store_id = '" . (int)$store_id . "'");
                }
            }
            $result = 1;
        }
        $this->cache->delete('information');
        return $result;
    }

    public function urlAliasExists($information_id, $keyword) {
        $query = $this->db->query("SELECT 1 FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($keyword) . "' AND query <> 'information_id=" . (int)$information_id . "'");

        if ($query->row) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT * FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "'";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
			//Paladin  AND language_id = '" . (int)$this->config->get('config_language_id') . "'
            $sql = "SELECT i.*, id.*, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = CONCAT('information_id=', i.information_id) AND language_id = '" . (int)$this->config->get('config_language_id') . "') AS seo FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "'";
        } else {
            $sql = "SELECT * FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "'";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
            $sort_data[] = 'i.information_id';
            $sort_data[] = 'i.status';
            $sort_data[] = 'seo';
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY id.title");
            ]]></search>
            <add><![CDATA[
                if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) {
					//Paladin  AND language_id = '" . (int)$this->config->get('config_language_id') . "'
                    $query = $this->db->query("SELECT i.*, id.*, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = CONCAT('information_id=', i.information_id) AND language_id = '" . (int)$this->config->get('config_language_id') . "') AS seo FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY id.title");
                } else {
                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY id.title");
                }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/information_list.tpl">
        <operation>
            <search position="replace" offset="9"><![CDATA[
            <td class="left"><?php if ($sort == 'id.title') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'id.title') { ?>
                <a href="<?php echo $sort_title; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_title; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_title; ?>"><?php echo $column_title; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'i.sort_order') { ?>
                <a href="<?php echo $sort_sort_order; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sort_order; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sort_order; ?>"><?php echo $column_sort_order; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $information['title']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'view_in_store': ?>
              <td class="view_store <?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>">
                <select onchange="((this.value !== '') ? window.open(this.value) : null); this.value = '';">
                  <option value=""><?php echo $text_select; ?></option>
                  <?php foreach ($information[$col] as $store) { ?>
                  <option value="<?php echo $store['href']; ?>"><?php echo $store['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $information['information_id']; ?>"><?php echo $information[$col]; ?></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td class="left"><?php echo $information['title']; ?></td>
              <td class="right"><?php echo $information['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) { ?>
            [ <a <?php echo (isset($action['click'])) ? 'onClick="window.open(\'' . $action['click'] . '\')"' : 'href="' . $action['href'] . '"'; ?>><?php echo $action['text']; ?></a> ]
            <?php } else { ?>
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_information_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".store_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', $("#aqe-popup-form").serializeHash());
  }, {
      type      : "multiselect_edit",
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
      loadurl   : "<?php echo $load_popup_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
<?php if ($single_lang_editing) { ?>
 $(".title_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".title_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> REVIEWS -->
    <file name="admin/controller/catalog/review.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogReview extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');
            $this->document->addScript('view/javascript/jquery/ui/jquery-ui-timepicker-addon.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="9"><![CDATA[
            $this->data['reviews'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) {
                $cols = $this->config->get('aqe_catalog_reviews');
                $columns = array(
                    'review_id' => $result['review_id'],
                    'selected'  => isset($this->request->post['selected']) && in_array($result['review_id'], $this->request->post['selected']),
                    'action'    => $action
                );
                if (!is_array($cols)) {
                    $columns['product'] = $result['name'];
                    $columns['author'] = $result['author'];
                    $columns['rating'] = $result['rating'];
                    $columns['status'] = ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                    $date = new DateTime($result['date_added']);
                    $columns['date_added'] = $date->format($this->language->get('date_format_short'));
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'product') {
                                $columns[$column] = $result['name'];
                            } else if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if ($column == 'date_added') {
                                $date = new DateTime($result['date_added']);
                                $columns[$column] = $date->format("Y-m-d H:i");
                            } else if ($column == 'id') {
                                $columns[$column] = $result['review_id'];
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['reviews'][] = $columns;
            } else {
                $this->data['reviews'][] = array(
                    'review_id'  => $result['review_id'],
                    'name'       => $result['name'],
                    'author'     => $result['author'],
                    'rating'     => $result['rating'],
                    'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
                    'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                    'selected'   => isset($this->request->post['selected']) && in_array($result['review_id'], $this->request->post['selected']),
                    'action'     => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_action'] = $this->language->get('column_action');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
        $this->data['column_text'] = $this->language->get('column_text');
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_product'] = $this->url->link('catalog/review'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/review', 'token=' . $this->session->data['token'] . '&sort=r.review_id' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) {
            $cols = $this->config->get('aqe_catalog_reviews');
            if (!is_array($cols)) {
                $column_order = array('product', 'author', 'rating', 'status', 'date_added');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/review/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['token'] = $this->session->data['token'];
            $this->data['language_id'] = $this->config->get('config_language_id');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function quick_update() {
        $this->language->load('catalog/review');
        $this->load->model('catalog/review');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_catalog_review->quickEditReview($id, $column, $value, null, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('author', 'text')))
                    $json['value'] = $value;
                else if (in_array($column, array('rating')))
                    $json['value'] = (int)$value < 1 ? 1 : (int)$value > 5 ? 5 : (int)$value;
                else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if($column == 'product') {
                    $this->load->model('catalog/review');
                    $review = $this->model_catalog_review->getReview($id);
                    $json['value'] = $review['product'];
                } else if($column == 'date_added') {
                    $json['value'] = $value;
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/review')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "author" && (utf8_strlen($data['new']) < 3 || utf8_strlen($data['new']) > 64)) {
            $this->error['warning'] = $this->language->get('error_author');
        }

        if ($column == "text" && utf8_strlen($data['new']) < 1) {
            $this->error['warning'] = $this->language->get('error_text');
        }

        if ($column == "date_added") {
            if (preg_match("/^(19|20)\d\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0-3]):[0-5][0-9]$/", $data['new'])) {
                list($date, $time) = explode(' ', $data['new']);
                list($year , $month , $day) = explode('-', $date);
                if (!checkdate($month , $day , $year)) {
                    $this->error['warning'] = $this->language->get('error_invalid_date');
                }
            } else {
                $this->error['warning'] = $this->language->get('error_date_format');
            }
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/review.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
$_['column_text']            = 'Text';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_product']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_date_format']      = 'Warning: Date format is not recognized! Must be \'YYYY-MM-DD HH:MM\'';
$_['error_invalid_date']     = 'Warning: Date is not valid!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/review.php">
        <operation>
            <search position="before"><![CDATA[
            public function addReview($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditReview($review_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('product', 'author', 'text', 'rating', 'status', 'date_added');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('status')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET `" . $column . "` = '" . (int)$value . "', date_modified = NOW() WHERE review_id = '" . (int)$review_id . "'");
            else if ($column == "product")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET product_id = '" . (int)$value . "', date_modified = NOW()  WHERE review_id = '" . (int)$review_id . "'");
            else if ($column == "author")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET author = '" . $this->db->escape($value) . "', date_modified = NOW()  WHERE review_id = '" . (int)$review_id . "'");
            else if ($column == "text")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET text = '" . $this->db->escape(strip_tags($value)) . "', date_modified = NOW()  WHERE review_id = '" . (int)$review_id . "'");
            else if ($column == "rating") {
                $rating = (int)$value < 1 ? 1 : (int)$value > 5 ? 5 : (int)$value;
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET rating = '" . $rating . "', date_modified = NOW()  WHERE review_id = '" . (int)$review_id . "'");
            } else if ($column == "date_added") {
                $date = $value;
                $result = $this->db->query("UPDATE " . DB_PREFIX . "review SET date_added = '" . $date . "', date_modified = NOW()  WHERE review_id = '" . (int)$review_id . "'");
            }
        }

        $this->cache->delete('product');

        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT r.review_id, pd.name, r.author, r.rating, r.status, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product_description pd ON (r.product_id = pd.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) {
            $sql = "SELECT r.review_id, pd.name, r.author, r.text, r.rating, r.status, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product_description pd ON (r.product_id = pd.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
        } else {
            $sql = "SELECT r.review_id, pd.name, r.author, r.rating, r.status, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product_description pd ON (r.product_id = pd.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) {
            $sort_data[] = "r.review_id";
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/review_list.tpl">
        <operation>
            <search position="replace" offset="24"><![CDATA[
            <td class="left"><?php if ($sort == 'pd.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'pd.name') { ?>
                <a href="<?php echo $sort_product; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_product; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_product; ?>"><?php echo $column_product; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.author') { ?>
                <a href="<?php echo $sort_author; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_author; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_author; ?>"><?php echo $column_author; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'r.rating') { ?>
                <a href="<?php echo $sort_rating; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_rating; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_rating; ?>"><?php echo $column_rating; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.status') { ?>
                <a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'r.date_added') { ?>
                <a href="<?php echo $sort_date_added; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_date_added; ?>"><?php echo $column_date_added; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="4"><![CDATA[
            <td class="left"><?php echo $review['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $review['review_id']; ?>"><?php echo $review[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $review['name']; ?></td>
              <td class="left"><?php echo $review['author']; ?></td>
              <td class="right"><?php echo $review['rating']; ?></td>
              <td class="left"><?php echo $review['status']; ?></td>
              <td class="left"><?php echo $review['date_added']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="7"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="7"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_reviews_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".product_quick_edit").editable(function(value, settings) {
    var product = $('#product_edit', this);
    var product_id = product.attr('title');
    if (!product_id || product.val() == '')
        return this.revert;
    value = product_id;
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'product_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      select    : true,
      token     : '<?php echo $token; ?>',
  });
 $(".date_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'date_time_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
  });
 $(".text_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      type      : 'textarea',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      submit    : 'OK',
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> DOWNLOADS -->
    <file name="admin/controller/catalog/download.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogDownload extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['downloads'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) {
                $cols = $this->config->get('aqe_catalog_downloads');
                $columns = array(
                    'download_id' => $result['download_id'],
                    'selected'    => isset($this->request->post['selected']) && in_array($result['download_id'], $this->request->post['selected']),
                    'action'      => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'id') {
                                $columns[$column] = $result['download_id'];
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['downloads'][] = $columns;
            } else {
                $this->data['downloads'][] = array(
                    'download_id' => $result['download_id'],
                    'name'        => $result['name'],
                    'remaining'   => $result['remaining'],
                    'selected'    => isset($this->request->post['selected']) && in_array($result['download_id'], $this->request->post['selected']),
                    'action'      => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
        $this->data['column_mask'] = $this->language->get('column_mask');
        $this->data['column_filename'] = $this->language->get('column_filename');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) {
            $cols = $this->config->get('aqe_catalog_downloads');
            if (!is_array($cols)) {
                $column_order = array('name', 'remaining');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/download/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/download/load_data', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('catalog/download'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/download', 'token=' . $this->session->data['token'] . '&sort=d.download_id' . $url, 'SSL');
        $this->data['sort_mask'] = $this->url->link('catalog/download', 'token=' . $this->session->data['token'] . '&sort=d.mask' . $url, 'SSL');
        $this->data['sort_filename'] = $this->url->link('catalog/download', 'token=' . $this->session->data['token'] . '&sort=d.filename' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/download');
            $result = $this->model_catalog_download->getDownloadDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('catalog/download');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/download');
        $this->load->model('catalog/download');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $result = $this->model_catalog_download->quickEditDownload($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('remaining')))
                    $json['value'] = (int)$value;
                else if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id'))
                        $json['value'] = $value;
                    else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/download')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/download')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/download.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
$_['column_mask']            = 'Mask';
$_['column_filename']        = 'Filename';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_data']        = 'Warning: Loading data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/download.php">
        <operation>
            <search position="before"><![CDATA[
            public function addDownload($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditDownload($download_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'mask', 'remaining');
        $result = false;
        if (in_array($column, $editable)) {
            if ($column == "remaining")
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "download` SET " . $column . " = '" . (int)$value . "' WHERE download_id = '" . (int)$download_id . "'");
            else if ($column == "mask")
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "download` SET " . $column . " = '" . $this->db->escape($value) . "' WHERE download_id = '" . (int)$download_id . "'");
            else if ($column == "name")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "download_description SET name = '" . $this->db->escape($value) . "' WHERE download_id = '" . (int)$download_id . "' AND language_id = '" . (int)$lang_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) {
            $sort_data[] = "d.download_id";
            $sort_data[] = "d.mask";
            $sort_data[] = "d.filename";
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/download_list.tpl">
        <operation>
            <search position="replace" offset="9"><![CDATA[
            <td class="left"><?php if ($sort == 'dd.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'dd.name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'd.remaining') { ?>
                <a href="<?php echo $sort_remaining; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_remaining; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_remaining; ?>"><?php echo $column_remaining; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $download['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $download['download_id']; ?>"><?php echo $download[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $download['name']; ?></td>
              <td class="right"><?php echo $download['remaining']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="6"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_downloads_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> MANUFACTURERS -->
    <file name="admin/controller/catalog/manufacturer.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogManufacturer extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['manufacturers'] = array();
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $this->load->model('setting/store');

            $stores = $this->model_setting_store->getStores();

            $multistore = count($stores);

            $this->data['stores'] = array();

            $this->data['stores'][0] = array(
                    'name' => $this->config->get('config_name'),
                    'href' => HTTP_CATALOG
                );

            foreach ($stores as $store) {
                $this->data['stores'][$store['store_id']] = array(
                    'name' => $store['name'],
                    'href' => $store['url']
                    );
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $action[] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status') && !$multistore) {
                $action[] = array(
                    'text'  => $this->language->get('text_view'),
                    'click' => HTTP_CATALOG . 'index.php?route=product/manufacturer/product&manufacturer_id=' . $result['manufacturer_id']
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['manufacturers'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
                $cols = $this->config->get('aqe_catalog_manufacturers');
                $columns = array(
                    'manufacturer_id' => $result['manufacturer_id'],
                    'selected'        => isset($this->request->post['selected']) && in_array($result['manufacturer_id'], $this->request->post['selected']),
                    'action'          => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'image') {
                                $this->load->model('tool/image');
                                if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
                                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                } else {
                                    $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                }
                                $columns[$column] = $result['image'];
                                $columns['thumb'] = $image;
                            } else if ($column == 'id') {
                                $columns[$column] = $result['manufacturer_id'];
                            } else if ($column == 'store') {
                                $stores = $this->model_catalog_manufacturer->getManufacturerStores($result['manufacturer_id']);
                                $manufacturer_stores = array();
                                foreach($stores as $store) {
                                    $manufacturer_stores[] = $this->data['stores'][$store]['name'];
                                }
                                $columns[$column] = implode("<br />", $manufacturer_stores);
                            } else if ($column == 'view_in_store') {
                                $manufacturer_stores = $this->model_catalog_manufacturer->getManufacturerStores($result['manufacturer_id']);

                                $columns[$column] = array();

                                foreach ($manufacturer_stores as $store) {
                                    if (!in_array($store, array_keys($this->data['stores'])))
                                        continue;
                                    $columns[$column][] = array(
                                        'name' => $this->data['stores'][$store]['name'],
                                        'href' => $this->data['stores'][$store]['href'] . 'index.php?route=product/manufacturer/product&manufacturer_id=' . $result['manufacturer_id']
                                        );
                                }
                            } else {
                                $columns[$column] = isset($result[$column]) ? $result[$column] : '';
                            }
                        }
                    }
                }
                $this->data['manufacturers'][] = $columns;
            } else {
                $this->data['manufacturers'][] = array(
                    'manufacturer_id' => $result['manufacturer_id'],
                    'name'            => $result['name'],
                    'sort_order'      => $result['sort_order'],
                    'selected'        => isset($this->request->post['selected']) && in_array($result['manufacturer_id'], $this->request->post['selected']),
                    'action'          => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
        $this->data['column_store'] = $this->language->get('column_store');
        $this->data['column_image'] = $this->language->get('column_image');
        $this->data['column_seo'] = $this->language->get('column_seo');
        $this->data['column_view_in_store'] = $this->language->get('column_view_in_store');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $cols = $this->config->get('aqe_catalog_manufacturers');
            if (!is_array($cols)) {
                $column_order = array('name', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/manufacturer/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['load_popup_url'] = html_entity_decode($this->url->link('catalog/manufacturer/load_popup', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_select'] = $this->language->get('text_select');
            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['text_image_manager'] = $this->language->get('text_image_manager');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['token'] = $this->session->data['token'];
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('catalog/manufacturer'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/manufacturer', 'token=' . $this->session->data['token'] . '&sort=manufacturer_id' . $url, 'SSL');
        $this->data['sort_seo'] = $this->url->link('catalog/manufacturer', 'token=' . $this->session->data['token'] . '&sort=seo' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_popup() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadPopup($this->request->post)) {
            $this->data = array_merge($this->data, $this->load->language('catalog/manufacturer'));

            $this->data['error_warning'] = '';
            list($this->data['parameter'], $this->data['i_id']) = explode("-", $this->request->post['id']);

            $this->data['token'] = $this->session->data['token'];

            $json["success"] = 1;

            switch ($this->data['parameter']) {
                case "store":
                    $this->load->model('setting/store');
                    $this->data['stores'] = $this->model_setting_store->getStores();
                    array_unshift($this->data['stores'], array("store_id" => 0, "name" => $this->config->get('config_name')));
                    $this->load->model('catalog/manufacturer');
                    $this->data['item_store'] = $this->model_catalog_manufacturer->getManufacturerStores($this->data['i_id']);
                    $json['title'] = $this->language->get('entry_store');
                    break;
                default:
                    $json["success"] = 0;
                    $json['error'] = $this->language->get('error_load_popup');
                    break;
            }
            $json['title'] = $this->language->get('text_' . $this->data['parameter']);
        } else {
            $json['error'] = $this->language->get('error_load_popup');
        }

        $this->template = 'catalog/quick_edit_form.tpl';

        $json['popup'] = $this->render();

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/manufacturer');
        $this->load->model('catalog/manufacturer');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            $result = $this->model_catalog_manufacturer->quickEditManufacturer($id, $column, $value, null, $this->request->post);
            $alt = isset($this->request->post['alt']) ? $this->request->post['alt'] : "";
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('seo', 'name')))
                    $json['value'] = $value;
                else if (in_array($column, array('sort_order')))
                    $json['value'] = (int)$value;
                else if ($column == 'image') {
                    $this->load->model('tool/image');
                    if ($value && file_exists(DIR_IMAGE . $value)) {
                        $image = $this->model_tool_image->resize($value, $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    } else {
                        $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    }
                    $json['value'] = '<img src="' . $image . '" data-id="' . $id . '" data-image="' . $value . '" alt="' . $alt . '" style="padding: 1px; border: 1px solid #DDDDDD;" />';
                } else if($column == 'store') {
                    if (isset($this->request->post['i_s'])) {
                        $this->request->post['i_s'] = (array)$this->request->post['i_s'];

                        $this->load->model('setting/store');
                        $stores = $this->model_setting_store->getStores();
                        array_unshift($stores, array("store_id" => 0, "name" => $this->config->get('config_name')));

                        $manufacturer_stores = array();

                        foreach ($stores as $store) {
                            if (in_array($store['store_id'], $this->request->post['i_s']))
                                $manufacturer_stores[] = $store['name'];
                        }
                        $json['value'] = implode("<br>", $manufacturer_stores);
                    } else {
                        $json['value'] = "";
                    }
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadPopup($data) {
        if (!$this->user->hasPermission('modify', 'catalog/manufacturer')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/category')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "seo") {
            $keyword = utf8_decode($data['new']);
            if ($this->model_catalog_manufacturer->urlAliasExists($id, $keyword)) {
                $this->error['warning'] = $this->language->get('error_duplicate_seo_keyword');
            }
        }

        if (in_array($column, array("store"))) {
            if (!isset($data['i_id'])) {
                $this->error['warning'] = $this->language->get('error_update');
            }
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/manufacturer.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_store']             = 'Stores';
$_['text_image_manager']     = 'Image Manager';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
$_['column_store']           = 'Stores';
$_['column_seo']             = 'SEO Keyword';
$_['column_image']           = 'Image';
$_['column_view_in_store']   = 'View in Store';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']                  = 'Warning: Updating the value failed!';
$_['error_load_popup']              = 'Warning: Loading popup data failed!';
$_['error_duplicate_seo_keyword']   = 'Warning: SEO keyword already in use!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/manufacturer.php">
        <operation>
            <search position="before"><![CDATA[
            public function addManufacturer($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditManufacturer($manufacturer_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('image', 'name', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('sort_order')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "manufacturer SET `" . $column . "` = '" . (int)$value . "' WHERE manufacturer_id = '" . (int)$manufacturer_id . "'");
            else if (in_array($column, array('image', 'name')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "manufacturer SET `" . $column . "` = '" . $this->db->escape($value) . "' WHERE manufacturer_id = '" . (int)$manufacturer_id . "'");
        } else if ($column == 'seo') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "url_alias WHERE query = 'manufacturer_id=" . (int)$manufacturer_id. "'");
            if (!empty($value))
                $result = $this->db->query("INSERT INTO " . DB_PREFIX . "url_alias SET query = 'manufacturer_id=" . (int)$manufacturer_id . "', keyword = '" . $this->db->escape($value) . "'");
            else
                $result = 1;
        } else if ($column == 'store') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "manufacturer_to_store WHERE manufacturer_id = '" . (int)$manufacturer_id . "'");

            if (isset($data['i_s'])) {
                foreach ((array)$data['i_s'] as $store_id) {
                    $this->db->query("INSERT INTO " . DB_PREFIX . "manufacturer_to_store SET manufacturer_id = '" . (int)$manufacturer_id . "', store_id = '" . (int)$store_id . "'");
                }
            }
            $result = 1;
        }
        $this->cache->delete('manufacturer');
        return $result;
    }

    public function urlAliasExists($manufacturer_id, $keyword) {
        $query = $this->db->query("SELECT 1 FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($keyword) . "' AND query <> 'manufacturer_id=" . (int)$manufacturer_id . "'");

        if ($query->row) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $sql = "SELECT * FROM " . DB_PREFIX . "manufacturer";
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
			//Paladin  AND language_id = '" . (int)$this->config->get('config_language_id') . "'
            $sql = "SELECT *, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = CONCAT('manufacturer_id=', manufacturer_id) AND language_id = '" . (int)$this->config->get('config_language_id') . "') AS seo FROM " . DB_PREFIX . "manufacturer";
        } else {
            $sql = "SELECT * FROM " . DB_PREFIX . "manufacturer";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $sort_data[] = 'manufacturer_id';
            $sort_data[] = "seo";
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "manufacturer ORDER BY name");
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
			//Paladin  AND language_id = '" . (int)$this->config->get('config_language_id') . "'
            $query = $this->db->query("SELECT *, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = CONCAT('manufacturer_id=', manufacturer_id) AND language_id = '" . (int)$this->config->get('config_language_id') . "') AS seo FROM " . DB_PREFIX . "manufacturer ORDER BY name");
        } else {
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "manufacturer ORDER BY name");
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/manufacturer_list.tpl">
        <operation>
            <search position="replace" offset="9"><![CDATA[
            <td class="left"><?php if ($sort == 'name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'sort_order') { ?>
                <a href="<?php echo $sort_sort_order; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sort_order; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sort_order; ?>"><?php echo $column_sort_order; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $manufacturer['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'image': ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $manufacturer['manufacturer_id']; ?>">
                <img src="<?php echo $manufacturer['thumb']; ?>" alt="<?php echo $manufacturer['name']; ?>" style="padding: 1px; border: 1px solid #DDDDDD;" data-id="<?php echo $manufacturer['manufacturer_id']; ?>" data-image="<?php echo $manufacturer['image']; ?>" />
              </td>
                        <?php break;
                    case 'view_in_store': ?>
              <td class="view_store <?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>">
                <select onchange="((this.value !== '') ? window.open(this.value) : null); this.value = '';">
                  <option value=""><?php echo $text_select; ?></option>
                  <?php foreach ($manufacturer[$col] as $store) { ?>
                  <option value="<?php echo $store['href']; ?>"><?php echo $store['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $manufacturer['manufacturer_id']; ?>"><?php echo $manufacturer[$col]; ?></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td class="left"><?php echo $manufacturer['name']; ?></td>
              <td class="right"><?php echo $manufacturer['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) { ?>
            [ <a <?php echo (isset($action['click'])) ? 'onClick="window.open(\'' . $action['click'] . '\')"' : 'href="' . $action['href'] . '"'; ?>><?php echo $action['text']; ?></a> ]
            <?php } else { ?>
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) { ?>
<script type="text/javascript"><!--
function update_image(field, callback) {
    $('#dialog').remove();

    $('#content').prepend('<div id="dialog" style="padding: 3px 0px 0px 0px;"><iframe src="index.php?route=common/filemanager&token=<?php echo $token; ?>&field=' + encodeURIComponent(field) + '" style="padding:0; margin: 0; display: block; width: 100%; height: 100%;" frameborder="no" scrolling="auto"></iframe></div>');

    $('#dialog').dialog({
        title: '<?php echo $text_image_manager; ?>',
        close: function (event, ui) {
            if ($.isFunction(callback)) {
                callback.call();
            }
        },
        bgiframe: false,
        width: 800,
        height: 400,
        resizable: false,
        modal: true
    });
};
$(function() {
 $(".image_quick_edit").editable(function(value, settings) {
    var params = {alt: $(this.revert).attr('alt')};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : "image_edit",
      indicator : '<img src="view/image/aqe-pro/aqe_image_loading.gif" alt="<?php echo $text_saving; ?>" style="width: <?php echo $this->config->get('aqe_list_view_image_width'); ?>px; height: <?php echo $this->config->get('aqe_list_view_image_height'); ?>px; padding: 1px; border: 1px solid #DDDDDD;" />',
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
  });
 $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".store_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', $("#aqe-popup-form").serializeHash());
  }, {
      type      : "multiselect_edit",
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
      loadurl   : "<?php echo $load_popup_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> OPTIONS -->
    <file name="admin/controller/catalog/option.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogOption extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['options'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) {
                $cols = $this->config->get('aqe_catalog_options');
                $columns = array(
                    'option_id'  => $result['option_id'],
                    'selected'   => isset($this->request->post['selected']) && in_array($result['option_id'], $this->request->post['selected']),
                    'action'     => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'id') {
                                $columns[$column] = $result['option_id'];
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['options'][] = $columns;
            } else {
                $this->data['options'][] = array(
                    'option_id'  => $result['option_id'],
                    'name'       => $result['name'],
                    'sort_order' => $result['sort_order'],
                    'selected'   => isset($this->request->post['selected']) && in_array($result['option_id'], $this->request->post['selected']),
                    'action'     => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) {
            $cols = $this->config->get('aqe_catalog_options');
            if (!is_array($cols)) {
                $column_order = array('name', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/option/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/option/load_data', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('catalog/option'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/option', 'token=' . $this->session->data['token'] . '&sort=o.option_id' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/option');
            $result = $this->model_catalog_option->getOptionDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('catalog/option');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/option');
        $this->load->model('catalog/option');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $result = $this->model_catalog_option->quickEditOption($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('sort_order')))
                    $json['value'] = (int)$value;
                else if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id'))
                        $json['value'] = $value;
                    else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/option')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/option')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/option.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_store']             = 'Stores';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_name']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_data']        = 'Warning: Loading data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/option.php">
        <operation>
            <search position="before"><![CDATA[
            public function addOption($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditOption($option_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if ($column == "sort_order")
                $result = $this->db->query("UPDATE `" . DB_PREFIX . "option` SET " . $column . " = '" . (int)$value . "' WHERE option_id = '" . (int)$option_id . "'");
            else if ($column == "name")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "option_description SET name = '" . $this->db->escape($value) . "' WHERE option_id = '" . (int)$option_id . "' AND language_id = '" . (int)$lang_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $sort_data[] = 'o.option_id';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/option_list.tpl">
        <operation>
            <search position="replace" offset="9"><![CDATA[
            <td class="left"><?php if ($sort == 'od.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'od.name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'o.sort_order') { ?>
                <a href="<?php echo $sort_sort_order; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sort_order; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sort_order; ?>"><?php echo $column_sort_order; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $option['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $option['option_id']; ?>"><?php echo $option[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $option['name']; ?></td>
              <td class="right"><?php echo $option['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="5"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_options_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> ATTRIBUTE GROUPS -->
    <file name="admin/controller/catalog/attribute_group.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogAttributeGroup extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['attribute_groups'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) {
                $cols = $this->config->get('aqe_catalog_attribute_groups');
                $columns = array(
                    'attribute_group_id' => $result['attribute_group_id'],
                    'selected'           => isset($this->request->post['selected']) && in_array($result['attribute_group_id'], $this->request->post['selected']),
                    'action'             => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'id') {
                                $columns[$column] = $result['attribute_group_id'];
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['attribute_groups'][] = $columns;
            } else {
                $this->data['attribute_groups'][] = array(
                    'attribute_group_id' => $result['attribute_group_id'],
                    'name'               => $result['name'],
                    'sort_order'         => $result['sort_order'],
                    'selected'           => isset($this->request->post['selected']) && in_array($result['attribute_group_id'], $this->request->post['selected']),
                    'action'             => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) {
            $cols = $this->config->get('aqe_catalog_attribute_groups');
            if (!is_array($cols)) {
                $column_order = array('name', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/attribute_group/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/attribute_group/load_data', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('catalog/attribute_group'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/attribute_group', 'token=' . $this->session->data['token'] . '&sort=ag.attribute_group_id' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/attribute_group');
            $result = $this->model_catalog_attribute_group->getAttributeGroupDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('catalog/attribute_group');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/attribute_group');
        $this->load->model('catalog/attribute_group');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $result = $this->model_catalog_attribute_group->quickEditAttributeGroup($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('sort_order')))
                    $json['value'] = (int)$value;
                else if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id'))
                        $json['value'] = $value;
                    else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/attribute_group')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/attribute_group')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && ((utf8_strlen($data['new']) < 3) || (utf8_strlen($data['new']) > 64))) {
            $this->error['warning'] = $this->language->get('error_name');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/attribute_group.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_name']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_data']        = 'Warning: Loading data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/attribute_group.php">
        <operation>
            <search position="before"><![CDATA[
            public function addAttributeGroup($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditAttributeGroup($attribute_group_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if ($column == "sort_order")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "attribute_group SET " . $column . " = '" . (int)$value . "' WHERE attribute_group_id = '" . (int)$attribute_group_id . "'");
            else if ($column == "name")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "attribute_group_description SET name = '" . $this->db->escape($value) . "' WHERE attribute_group_id = '" . (int)$attribute_group_id . "' AND language_id = '" . (int)$lang_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $sort_data[] = 'ag.attribute_group_id';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/attribute_group_list.tpl">
        <operation>
            <search position="replace" offset="9"><![CDATA[
            <td class="left"><?php if ($sort == 'agd.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'agd.name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'ag.sort_order') { ?>
                <a href="<?php echo $sort_sort_order; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sort_order; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sort_order; ?>"><?php echo $column_sort_order; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $attribute_group['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $attribute_group['attribute_group_id']; ?>"><?php echo $attribute_group[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $attribute_group['name']; ?></td>
              <td class="right"><?php echo $attribute_group['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attribute_groups_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> ATTRIBUTES -->
    <file name="admin/controller/catalog/attribute.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogAttribute extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="7"><![CDATA[
            $this->data['attributes'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) {
                $cols = $this->config->get('aqe_catalog_attributes');
                $columns = array(
                    'attribute_id'    => $result['attribute_id'],
                    'selected'        => isset($this->request->post['selected']) && in_array($result['attribute_id'], $this->request->post['selected']),
                    'action'          => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['attribute_group'] = $result['attribute_group'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'id') {
                                $columns[$column] = $result['attribute_id'];
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['attributes'][] = $columns;
            } else {
                $this->data['attributes'][] = array(
                    'attribute_id'    => $result['attribute_id'],
                    'name'            => $result['name'],
                    'attribute_group' => $result['attribute_group'],
                    'sort_order'      => $result['sort_order'],
                    'selected'        => isset($this->request->post['selected']) && in_array($result['attribute_id'], $this->request->post['selected']),
                    'action'          => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) {
            $cols = $this->config->get('aqe_catalog_attributes');
            if (!is_array($cols)) {
                $column_order = array('name', 'attribute_group', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/attribute/quick_update', 'token=' . $this->session->data['token'], 'SSL'));

            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/attribute/load_data', 'token=' . $this->session->data['token'], 'SSL'));

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);

            $this->load->model('catalog/attribute_group');
            $attribute_groups = $this->model_catalog_attribute_group->getAttributeGroups();
            $ag_select = array();
            foreach ($attribute_groups as $ag) {
                $ag_select[$ag['attribute_group_id']] = $ag['name'];
            }
            $this->data['attribute_group_select'] = addslashes(json_encode($ag_select));
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['sort_name'] = $this->url->link('catalog/attribute'
            ]]></search>
            <add><![CDATA[
        $this->data['sort_id'] = $this->url->link('catalog/attribute', 'token=' . $this->session->data['token'] . '&sort=a.attribute_id' . $url, 'SSL');
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/attribute');
            $result = $this->model_catalog_attribute->getAttributeDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('catalog/attribute');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/attribute');
        $this->load->model('catalog/attribute');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $result = $this->model_catalog_attribute->quickEditAttribute($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('sort_order')))
                    $json['value'] = (int)$value;
                else if ($column == 'attribute_group') {
                    $this->load->model('catalog/attribute_group');
                    $attribute_group = $this->model_catalog_attribute_group->getAttributeGroupDescriptions((int)$value);
                    $lang_id = $this->config->get('config_language_id');
                    if ($attribute_group)
                        $json['value'] = $attribute_group[$lang_id]['name'];
                    else
                        $json['value'] = '';
                } else if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id'))
                        $json['value'] = $value;
                    else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/attribute')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/attribute')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && ((utf8_strlen($data['new']) < 3) || (utf8_strlen($data['new']) > 64))) {
            $this->error['warning'] = $this->language->get('error_name');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/attribute.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_name']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']           = 'Warning: Updating the value failed!';
$_['error_load_data']        = 'Warning: Loading data failed!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/attribute.php">
        <operation>
            <search position="before"><![CDATA[
            public function addAttribute($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditAttribute($attribute_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('name', 'attribute_group', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if ($column == "sort_order")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "attribute SET " . $column . " = '" . (int)$value . "' WHERE attribute_id = '" . (int)$attribute_id . "'");
            else if ($column == "attribute_group")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "attribute SET attribute_group_id = '" . (int)$value . "' WHERE attribute_id = '" . (int)$attribute_id . "'");
            else if ($column == "name")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "attribute_description SET name = '" . $this->db->escape($value) . "' WHERE attribute_id = '" . (int)$attribute_id . "' AND language_id = '" . (int)$lang_id . "'");
        }
        return $result;
    }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            if (isset($data['sort']) && in_array($data['sort'], $sort_data))
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_manufacturers_status')) {
            $sort_data[] = 'a.attribute_id';
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/attribute_list.tpl">
        <operation>
            <search position="replace" offset="14"><![CDATA[
            <td class="left"><?php if ($sort == 'ad.name') { ?>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php if ($sort == 'ad.name') { ?>
                <a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
                <?php } ?></td>
              <td class="left"><?php if ($sort == 'attribute_group') { ?>
                <a href="<?php echo $sort_attribute_group; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_attribute_group; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_attribute_group; ?>"><?php echo $column_attribute_group; ?></a>
                <?php } ?></td>
              <td class="right"><?php if ($sort == 'a.sort_order') { ?>
                <a href="<?php echo $sort_sort_order; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sort_order; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sort_order; ?>"><?php echo $column_sort_order; ?></a>
                <?php } ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="2"><![CDATA[
            <td class="left"><?php echo $attribute['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) { ?>
              <?php foreach($column_order as $col) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $attribute['attribute_id']; ?>"><?php echo $attribute[$col]; ?></td>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $attribute['name']; ?></td>
              <td class="left"><?php echo $attribute['attribute_group']; ?></td>
              <td class="right"><?php echo $attribute['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="5"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="5"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_attributes_status')) { ?>
<script type="text/javascript"><!--
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });

 $(".group_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($attribute_group_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      placeholder : "",
      onblur    : "cancel",
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> CATEGORIES -->
    <file name="admin/controller/catalog/category.php">
        <operation>
            <search position="before"><![CDATA[
            class ControllerCatalogCategory extends Controller
            ]]></search>
            <add><![CDATA[
function column_sort($a, $b) {
    if ($a['index'] == $b['index']) {
        return 0;
    }
    return ($a['index'] < $b['index']) ? -1 : 1;
}
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            function getList() {
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) {
            $this->document->addScript('view/javascript/jquery.jeditable.js');
            $this->document->addScript('view/javascript/admin.quick.edit.pro.js');

            $this->document->addStyle('view/stylesheet/aqe_style.css');
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['categories'] = array();
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) {
            $this->load->model('setting/store');

            $stores = $this->model_setting_store->getStores();

            $multistore = count($stores);

            $this->data['stores'] = array();

            $this->data['stores'][0] = array(
                    'name' => $this->config->get('config_name'),
                    'href' => HTTP_CATALOG
                );

            foreach ($stores as $store) {
                $this->data['stores'][$store['store_id']] = array(
                    'name' => $store['name'],
                    'href' => $store['url']
                    );
            }
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $action[] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status') && !$multistore) {
                $action[] = array(
                    'text'  => $this->language->get('text_view'),
                    'click' => HTTP_CATALOG . 'index.php?route=product/category&path=' . $result['path']
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="6"><![CDATA[
            $this->data['categories'][] = array(
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) {
                $cols = $this->config->get('aqe_catalog_categories');
                $columns = array(
                    'category_id' => $result['category_id'],
                    'selected'    => isset($this->request->post['selected']) && in_array($result['category_id'], $this->request->post['selected']),
                    'action'      => $action
                );
                if (!is_array($cols)) {
                    $columns['name'] = $result['name'];
                    $columns['sort_order'] = $result['sort_order'];
                } else {
                    foreach($cols as $column => $attr) {
                        if ($attr['display']) {
                            if ($column == 'image') {
                                $this->load->model('tool/image');
                                if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
                                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                } else {
                                    $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                                }
                                $columns[$column] = $result['image'];
                                $columns['thumb'] = $image;
                            } else if ($column == 'top') {
                                $columns[$column] = ($result['top'] ? $this->language->get('text_yes') : $this->language->get('text_no'));
                            } else if ($column == 'id') {
                                $columns[$column] = $result['category_id'];
                            } else if ($column == 'store') {
                                $stores = $this->model_catalog_category->getCategoryStores($result['category_id']);
                                $category_stores = array();
                                foreach($stores as $store) {
                                    $category_stores[] = $this->data['stores'][$store]['name'];
                                }
                                $columns[$column] = implode("<br />", $category_stores);
                            } else if ($column == 'status') {
                                if ((int)$result['status'] || !$this->config->get('aqe_highlight_status')) {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'));
                                } else {
                                    $columns[$column] = ((int)$result['status'] ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>');
                                }
                            } else if ($column == 'view_in_store') {
                                $category_stores = $this->model_catalog_category->getCategoryStores($result['category_id']);

                                $columns[$column] = array();

                                foreach ($category_stores as $store) {
                                    if (!in_array($store, array_keys($this->data['stores'])))
                                        continue;
                                    $columns[$column][] = array(
                                        'name' => $this->data['stores'][$store]['name'],
                                        'href' => $this->data['stores'][$store]['href'] . 'index.php?route=product/category&path=' . $result['path']
                                        );
                                }
                            } else {
                                $columns[$column] = $result[$column];
                            }
                        }
                    }
                }
                $this->data['categories'][] = $columns;
            } else {
                $this->data['categories'][] = array(
                    'category_id' => $result['category_id'],
                    'name'        => $result['name'],
                    'sort_order'  => $result['sort_order'],
                    'selected'    => isset($this->request->post['selected']) && in_array($result['category_id'], $this->request->post['selected']),
                    'action'      => $action
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $this->data['column_name'] = $this->language->get('column_name');
            ]]></search>
            <add><![CDATA[
        $this->data['column_id'] = $this->language->get('column_id');
        $this->data['column_image'] = $this->language->get('column_image');
        $this->data['column_seo'] = $this->language->get('column_seo');
        $this->data['column_column'] = $this->language->get('column_column');
        $this->data['column_top'] = $this->language->get('column_top');
        $this->data['column_status'] = $this->language->get('column_status');
        $this->data['column_store'] = $this->language->get('column_store');
        $this->data['column_view_in_store'] = $this->language->get('column_view_in_store');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $this->data['button_delete'] = $this->language->get('button_delete');
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) {
            $cols = $this->config->get('aqe_catalog_categories');
            if (!is_array($cols)) {
                $column_order = array('name', 'sort_order');
                $cols = array();
            } else {
                $column_order = array();
                uasort($cols, 'column_sort');

                foreach($cols as $column => $attr) {
                    if ($attr['display'])
                        $column_order[] = $column;
                }
            }
            $this->data['column_order'] = $column_order;
            $this->data['column_info'] = $cols;
            $this->data['update_url'] = html_entity_decode($this->url->link('catalog/category/quick_update', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['status_select'] = addslashes(json_encode(array("0" => $this->language->get('text_disabled'), "1" => $this->language->get('text_enabled'))));
            $this->data['top_select'] = addslashes(json_encode(array("0" => $this->language->get('text_no'), "1" => $this->language->get('text_yes'))));

            $this->data['text_select'] = $this->language->get('text_select');
            $this->data['text_saving'] = $this->language->get('text_saving');
            $this->data['text_loading'] = $this->language->get('text_loading');
            $this->data['text_none'] = $this->language->get('text_none');
            $this->data['text_click_edit'] = $this->language->get('text_click_edit');
            $this->data['text_double_click_edit'] = $this->language->get('text_double_click_edit');
            $this->data['text_image_manager'] = $this->language->get('text_image_manager');
            $this->data['error_update'] = $this->language->get('error_update');
            $this->data['language_id'] = $this->config->get('config_language_id');
            $this->data['load_data_url'] = html_entity_decode($this->url->link('catalog/category/load_data', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['load_popup_url'] = html_entity_decode($this->url->link('catalog/category/load_popup', 'token=' . $this->session->data['token'], 'SSL'));
            $this->data['token'] = $this->session->data['token'];

            $this->load->model('localisation/language');
            $lang_count = $this->model_localisation_language->getTotalLanguages();
            $this->data['single_lang_editing'] = $this->config->get('aqe_single_language_editing') || ((int)$lang_count == 1);

            /*$this->load->model('catalog/category');
            $this->data['cats'] = $this->model_catalog_category->getCategories(0);
            $c_select = array();
            foreach ($this->data['cats'] as $c) {
                $c_select[$c['category_id']] = $c['name'];
            }
            $this->data['category_select'] = addslashes(json_encode($c_select));*/
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            ?>
            ]]></search>
            <add><![CDATA[
    public function load_popup() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadPopup($this->request->post)) {
            $this->data = array_merge($this->data, $this->load->language('catalog/category'));

            $this->data['error_warning'] = '';
            list($this->data['parameter'], $this->data['i_id']) = explode("-", $this->request->post['id']);

            $this->data['token'] = $this->session->data['token'];

            $json["success"] = 1;

            switch ($this->data['parameter']) {
                case "store":
                    $this->load->model('setting/store');
                    $this->data['stores'] = $this->model_setting_store->getStores();
                    array_unshift($this->data['stores'], array("store_id" => 0, "name" => $this->config->get('config_name')));
                    $this->load->model('catalog/category');
                    $this->data['item_store'] = $this->model_catalog_category->getCategoryStores($this->data['i_id']);
                    $json['title'] = $this->language->get('entry_store');
                    break;
                default:
                    $json["success"] = 0;
                    $json['error'] = $this->language->get('error_load_popup');
                    break;
            }
            $json['title'] = $this->language->get('text_' . $this->data['parameter']);
        } else {
            $json['error'] = $this->language->get('error_load_popup');
        }

        $this->template = 'catalog/quick_edit_form.tpl';

        $json['popup'] = $this->render();

        $this->response->setOutput(json_encode($json));
    }

    public function load_data() {
        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateLoadData($this->request->post)) {
            $this->load->model('localisation/language');
            $languages = $this->model_localisation_language->getLanguages();
            foreach($languages as $lang) {
                $json['languages'][$lang['language_id']] = $lang['name'];
            }
            $json['languages']['selected'] = $this->request->post['lang_id'];
            list($column, $id) = explode("-", $this->request->post['id']);

            $this->load->model('catalog/category');
            $result = $this->model_catalog_category->getCategoryDescriptions($id);
            $json['data'] = array();
            foreach($result as $lang => $desc) {
                $json['data'][$lang] = html_entity_decode($desc['name']);
            }
        } else {
            $this->language->load('catalog/category');
            $json['error'] = $this->language->get('error_load_data');
        }

        $this->response->setOutput(json_encode($json));
    }

    public function quick_update() {
        $this->language->load('catalog/category');
        $this->load->model('catalog/category');

        $json = array();

        if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validateUpdateData($this->request->post)) {
            list($column, $id) = explode("-", $this->request->post['id']);
            $value = $this->request->post['new'];
            if ($column == "name") {
                $lang_id = $this->request->post['lang_id'];
            } else {
                $lang_id = null;
            }
            $alt = isset($this->request->post['alt']) ? $this->request->post['alt'] : "";
            $result = $this->model_catalog_category->quickEditCategory($id, $column, $value, $lang_id, $this->request->post);
            if ($result) {
                $json['success'] = $this->language->get('text_success');
                if (in_array($column, array('seo')))
                    $json['value'] = $value;
                else if (in_array($column, array('sort_order', 'column')))
                    $json['value'] = (int)$value;
                else if ($column == 'image') {
                    $this->load->model('tool/image');
                    if ($value && file_exists(DIR_IMAGE . $value)) {
                        $image = $this->model_tool_image->resize($value, $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    } else {
                        $image = $this->model_tool_image->resize('no_image.jpg', $this->config->get('aqe_list_view_image_width'), $this->config->get('aqe_list_view_image_height'));
                    }
                    $json['value'] = '<img src="' . $image . '" data-id="' . $id . '" data-image="' . $value . '" alt="' . $alt . '" style="padding: 1px; border: 1px solid #DDDDDD;" />';
                } else if ($column == 'status') {
                    if ((int)$value || !$this->config->get('aqe_highlight_status')) {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : $this->language->get('text_disabled');
                    } else {
                        $json['value'] = ((int)$value) ? $this->language->get('text_enabled') : '<span style="color:#FF0000;">' . $this->language->get('text_disabled') . '</span>';
                    }
                } else if($column == 'store') {
                    if (isset($this->request->post['i_s'])) {
                        $this->request->post['i_s'] = (array)$this->request->post['i_s'];

                        $this->load->model('setting/store');
                        $stores = $this->model_setting_store->getStores();
                        array_unshift($stores, array("store_id" => 0, "name" => $this->config->get('config_name')));

                        $category_stores = array();

                        foreach ($stores as $store) {
                            if (in_array($store['store_id'], $this->request->post['i_s']))
                                $category_stores[] = $store['name'];
                        }
                        $json['value'] = implode("<br>", $category_stores);
                    } else {
                        $json['value'] = "";
                    }
                } else if ($column == 'top')
                    $json['value'] = ((int)$value) ? $this->language->get('text_yes') : $this->language->get('text_no');
                else if($column == 'name') {
                    if ($lang_id == $this->config->get('config_language_id')) {
                        $this->load->model('catalog/category');
                        $json['value'] = $this->model_catalog_category->getPath($id);
                    } else
                        $json['value'] = $this->request->post['old'];
                } else
                    $json['value'] = $value;
            } else
                $json['error'] = $this->language->get('error_update');
        } else {
            $json['error'] = $this->error['warning'];
        }

        $this->response->setOutput(json_encode($json));
    }

    private function validateLoadPopup($data) {
        if (!$this->user->hasPermission('modify', 'catalog/category')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateLoadData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/category')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column != "name") {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

    private function validateUpdateData($data) {
        if (!$this->user->hasPermission('modify', 'catalog/category')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!isset($data['id']) || strpos($data['id'], "-") === false) {
            $this->error['warning'] = $this->language->get('error_update');
            return false;
        }

        list($column, $id) = explode("-", $data['id']);

        if (!isset($data['old'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if (!isset($data['new'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "name" && !isset($data['lang_id'])) {
            $this->error['warning'] = $this->language->get('error_update');
        }

        if ($column == "seo") {
            $keyword = utf8_decode($data['new']);
            if ($this->model_catalog_category->urlAliasExists($id, $keyword)) {
                $this->error['warning'] = $this->language->get('error_duplicate_seo_keyword');
            }
        }

        if (in_array($column, array("store"))) {
            if (!isset($data['i_id'])) {
                $this->error['warning'] = $this->language->get('error_update');
            }
        }

        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/category.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_store']             = 'Stores';
$_['text_image_manager']     = 'Image Manager';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_id']              = 'ID';
$_['column_seo']             = 'SEO Keyword';
$_['column_image']           = 'Image';
$_['column_column']          = 'Columns';
$_['column_top']             = 'Top';
$_['column_status']          = 'Status';
$_['column_store']           = 'Stores';
$_['column_view_in_store']   = 'View in Store';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_name']
            ]]></search>
            <add><![CDATA[
$_['error_update']                  = 'Warning: Updating the value failed!';
$_['error_load_data']               = 'Warning: Loading data failed!';
$_['error_load_popup']              = 'Warning: Loading popup data failed!';
$_['error_duplicate_seo_keyword']   = 'Warning: SEO keyword already in use!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/category.php">
        <operation>
            <search position="before"><![CDATA[
            public function addCategory($data)
            ]]></search>
            <add><![CDATA[
    public function quickEditCategory($category_id, $column, $value, $lang_id=null, $data=null) {
        $editable = array('image', 'name', 'column', 'top', 'status', 'sort_order');
        $result = false;
        if (in_array($column, $editable)) {
            if (in_array($column, array('column', 'top', 'sort_order', 'status')))
                $result = $this->db->query("UPDATE " . DB_PREFIX . "category SET `" . $column . "` = '" . (int)$value . "', date_modified = NOW() WHERE category_id = '" . (int)$category_id . "'");
            else if ($column == "image")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "category SET `" . $column . "` = '" . $this->db->escape($value) . "', date_modified = NOW() WHERE category_id = '" . (int)$category_id . "'");
            else if ($column == "name")
                $result = $this->db->query("UPDATE " . DB_PREFIX . "category_description SET name = '" . $this->db->escape($value) . "' WHERE category_id = '" . (int)$category_id . "' AND language_id = '" . (int)$lang_id . "'");
        } else if ($column == 'seo') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "url_alias WHERE query = 'category_id=" . (int)$category_id. "'");
            if (!empty($value))
                $result = $this->db->query("INSERT INTO " . DB_PREFIX . "url_alias SET query = 'category_id=" . (int)$category_id . "', keyword = '" . $this->db->escape($value) . "'");
            else
                $result = 1;
        } else if ($column == 'store') {
            $this->db->query("DELETE FROM " . DB_PREFIX . "category_to_store WHERE category_id = '" . (int)$category_id . "'");

            if (isset($data['i_s'])) {
                foreach ((array)$data['i_s'] as $store_id) {
                    $this->db->query("INSERT INTO " . DB_PREFIX . "category_to_store SET category_id = '" . (int)$category_id . "', store_id = '" . (int)$store_id . "'");
                }
            }
            $result = 1;
        }
        $this->cache->delete('category');
        return $result;
    }

    public function urlAliasExists($category_id, $keyword) {
        $query = $this->db->query("SELECT 1 FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($keyword) . "' AND query <> 'category_id=" . (int)$category_id . "'");

        if ($query->row) {
            return true;
        } else {
            return false;
        }
    }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) WHERE c.parent_id = '" . (int)$parent_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY c.sort_order, cd.name ASC");
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) {
            //Paladin  AND language_id = '" . (int)$this->config->get('config_language_id') . "'
			$query = $this->db->query("SELECT c.*, cd.*, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = CONCAT('category_id=', c.category_id) AND language_id = '" . (int)$this->config->get('config_language_id') . "') AS seo FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) WHERE c.parent_id = '" . (int)$parent_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY c.sort_order, cd.name ASC");
        } else {
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) WHERE c.parent_id = '" . (int)$parent_id . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY c.sort_order, cd.name ASC");
        }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            'category_id' => $result['category_id'],
            ]]></search>
            <add><![CDATA[
                    'image'       => isset($result['image']) ? $result['image'] : '',
                    'top'         => isset($result['top']) ? $result['top'] : '',
                    'column'      => isset($result['column']) ? $result['column'] : '',
                    'seo'         => isset($result['seo']) ? $result['seo'] : '',
                    'path'        => $this->getIdPath($result['category_id']),
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function getPath($category_id)
            ]]></search>
            <add><![CDATA[
    public function getIdPath($category_id) {
        $query = $this->db->query("SELECT parent_id FROM " . DB_PREFIX . "category c WHERE c.category_id = '" . (int)$category_id . "' ORDER BY c.sort_order ASC");

        if ($query->row['parent_id']) {
            return $this->getIdPath($query->row['parent_id']) . "_" . $category_id;
        } else {
            return $category_id;
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/category_list.tpl">
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $column_name; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) { ?>
              <?php foreach($column_order as $col) { ?>
                <?php if (!empty($column_info[$col]['sort'])) { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><a href="<?php echo ${"sort_" . $col}; ?>"<?php echo ($sort == $column_info[$col]['sort']) ? ' class="' . strtolower($order) . '"' : ''; ?>><?php echo ${"column_" . $col}; ?></a></td>
                <?php } else { ?>
              <td class="<?php echo $column_info[$col]['align']; ?>"><?php echo ${"column_" . $col}; ?></td>
                <?php } ?>
              <?php } ?>
            <?php } else { ?>
              <td class="left"><?php echo $column_name; ?></td>
              <td class="right"><?php echo $column_sort_order; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="1"><![CDATA[
            <td class="left"><?php echo $category['name']; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) { ?>
              <?php foreach($column_order as $col) {
                switch ($col) {
                    case 'image': ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $category['category_id']; ?>">
                <img src="<?php echo $category['thumb']; ?>" alt="<?php echo $category['name']; ?>" style="padding: 1px; border: 1px solid #DDDDDD;" data-id="<?php echo $category['category_id']; ?>" data-image="<?php echo $category['image']; ?>" />
              </td>
                        <?php break;
                    case 'view_in_store': ?>
              <td class="view_store <?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>">
                <select onchange="((this.value !== '') ? window.open(this.value) : null); this.value = '';">
                  <option value=""><?php echo $text_select; ?></option>
                  <?php foreach ($category[$col] as $store) { ?>
                  <option value="<?php echo $store['href']; ?>"><?php echo $store['name']; ?></option>
                  <?php } ?>
                </select>
              </td>
                        <?php break;
                    default: ?>
              <td class="<?php echo $column_info[$col]['align']; ?><?php echo ($column_info[$col]['qe_status']) ? ' ' . $column_info[$col]['qe_type'] : ''; ?>" id="<?php echo $col . "-" . $category['category_id']; ?>"><?php echo $category[$col]; ?></td>
                        <?php break;
                }
              } ?>
            <?php } else { ?>
              <td class="left"><?php echo $category['name']; ?></td>
              <td class="right"><?php echo $category['sort_order']; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) { ?>
            [ <a <?php echo (isset($action['click'])) ? 'onClick="window.open(\'' . $action['click'] . '\')"' : 'href="' . $action['href'] . '"'; ?>><?php echo $action['text']; ?></a> ]
            <?php } else { ?>
            [ <a href="<?php echo $action['href']; ?>"><?php echo $action['text']; ?></a> ]
            <?php } ?>
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[
            <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
            <?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) { ?>
              <td class="center" colspan="<?php echo count($column_order) + 2; ?>"><?php echo $text_no_results; ?></td>
            <?php } else { ?>
              <td class="center" colspan="4"><?php echo $text_no_results; ?></td>
            <?php } ?>
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            <?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_categories_status')) { ?>
<script type="text/javascript"><!--
function update_image(field, callback) {
    $('#dialog').remove();

    $('#content').prepend('<div id="dialog" style="padding: 3px 0px 0px 0px;"><iframe src="index.php?route=common/filemanager&token=<?php echo $token; ?>&field=' + encodeURIComponent(field) + '" style="padding:0; margin: 0; display: block; width: 100%; height: 100%;" frameborder="no" scrolling="auto"></iframe></div>');

    $('#dialog').dialog({
        title: '<?php echo $text_image_manager; ?>',
        close: function (event, ui) {
            if ($.isFunction(callback)) {
                callback.call();
            }
        },
        bgiframe: false,
        width: 800,
        height: 400,
        resizable: false,
        modal: true
    });
};
$(function() {
  $(".quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      select    : true,
  });
 $(".store_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', $("#aqe-popup-form").serializeHash());
  }, {
      type      : "multiselect_edit",
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
      loadurl   : "<?php echo $load_popup_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
  });
 $(".image_quick_edit").editable(function(value, settings) {
    var params = {alt: $(this.revert).attr('alt')};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : "image_edit",
      indicator : '<img src="view/image/aqe-pro/aqe_image_loading.gif" alt="<?php echo $text_saving; ?>" style="width: <?php echo $this->config->get('aqe_list_view_image_width'); ?>px; height: <?php echo $this->config->get('aqe_list_view_image_height'); ?>px; padding: 1px; border: 1px solid #DDDDDD;" />',
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "ignore",
      placeholder : "",
  });
 $(".status_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($status_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
 $(".top_quick_edit").editable(function(value, settings) {
    return quick_update(this, value, settings, '<?php echo $update_url; ?>');
  }, {
      data      : '<?php echo trim($top_select); ?>',
      type      : 'select',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
  });
<?php if ($single_lang_editing) { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: <?php echo $language_id; ?>};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      data      : function(value, settings) {
          return $.trim($('<div />').html(value).text().replace(/.*? > /g, ''));
      },
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
  });
<?php } else { ?>
 $(".name_quick_edit").editable(function(value, settings) {
    var params = {lang_id: $('select', this).find(":selected").val()};
    return quick_update(this, value, settings, '<?php echo $update_url; ?>', params);
  }, {
      type      : 'multilingual_edit',
      indicator : "<?php echo $text_saving; ?>",
      tooltip   : "<?php echo ($this->config->get('aqe_quick_edit_on') == 'dblclick') ? $text_double_click_edit : $text_click_edit; ?>",
      event     : "<?php echo $this->config->get('aqe_quick_edit_on'); ?>",
      onblur    : "cancel",
      placeholder : "",
      loadurl   : "<?php echo $load_data_url; ?>",
      loadtype  : "POST",
      loadtext  : "<?php echo $text_loading; ?>",
      loaddata  : {lang_id: <?php echo $language_id; ?>}
  });
<?php } ?>
});
//--></script>
<?php } ?>
            ]]></add>
        </operation>
    </file>


<!-- CATALOG -> PRODUCTS -->
    <file name="admin/controller/catalog/product.php">
        <operation><!-- Fix links back to the product list page -->
            <search position="replace"><![CDATA[$this->url->link('catalog/product']]></search>
            <add><![CDATA[$this->url->link('catalog/product_ext']]></add>
        </operation>
        <operation>
            <search position="before" offset="1"><![CDATA[
            $url .= '&filter_name=' . $this->request->get['filter_name'];
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_products_status')) {
            foreach($this->config->get('aqe_catalog_products') as $column => $attr) {
                if ($attr['filter']['show'] && isset($this->request->get['filter_' . $column])) {
                    $url .= '&filter_' . $column . '=' . urlencode(html_entity_decode($this->request->get['filter_' . $column], ENT_QUOTES, 'UTF-8'));
                }
            }
            if (isset($this->request->get['filter_sub_category'])) {
                $url .= '&filter_sub_category=' . urlencode(html_entity_decode($this->request->get['filter_sub_category'], ENT_QUOTES, 'UTF-8'));
            }
        }
            ]]></add>
        </operation>
        <operation error="log"><!-- Fix for filter urls -->
            <search position="replace" regex="true"><![CDATA[~\$url \.= '&(.*?)=' \. \$this->request->get\['(.*?)'\];~]]></search>
            <add><![CDATA[$url .= '&$1=' . urlencode(html_entity_decode($this->request->get['$2'], ENT_QUOTES, 'UTF-8'));]]></add>
        </operation>
    </file>

    <file name="admin/language/english/catalog/product.php">
        <operation error="log">
            <search position="before"><![CDATA[
            $_['text_success']
            ]]></search>
            <add><![CDATA[
$_['text_saving']            = 'Saving ...';
$_['text_loading']           = 'Loading ...';
$_['text_click_edit']        = 'Click to edit ...';
$_['text_double_click_edit'] = 'Double-click to edit ...';
$_['text_image_manager']     = 'Image Manager';
$_['text_autocomplete']      = 'Autocomplete';
$_['text_special_off']       = 'Normal price';
$_['text_special_active']    = 'Special price active';
$_['text_special_expired']   = 'Special price expired';
$_['text_special_future']    = 'Special price in the future';

$_['text_download']          = 'Downloads';
$_['text_category']          = 'Categories';
$_['text_store']             = 'Stores';
$_['text_attributes']        = 'Attributes';
$_['text_discounts']         = 'Discounts';
$_['text_images']            = 'Additional Images';
$_['text_options']           = 'Options';
$_['text_related']           = 'Related Products';
$_['text_specials']          = 'Specials';
$_['text_descriptions']      = 'Descriptions';

$_['txt_attr']               = 'A';
$_['txt_dscnt']              = 'D';
$_['txt_img']                = 'I';
$_['txt_opts']               = 'O';
$_['txt_rel']                = 'R';
$_['txt_spcl']               = 'S';
$_['txt_desc']               = 'T';
$_['txt_vw']                 = 'V';
$_['txt_ed']                 = 'E';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['column_action']
            ]]></search>
            <add><![CDATA[
$_['column_tax_class']          = 'Tax Class';
$_['column_minimum']            = 'Min Qty';
$_['column_subtract']           = 'Subtract Stock';
$_['column_stock_status']       = 'Out Of Stock Status';
$_['column_requires_shipping']  = 'Requires Shipping';
$_['column_date_available']     = 'Date Available';
$_['column_date_modified']      = 'Date Modified';
$_['column_length']             = 'Length';
$_['column_width']              = 'Width';
$_['column_height']             = 'Height';
$_['column_length_class']       = 'Length Class';
$_['column_weight_class']       = 'Weight Class';
$_['column_points']             = 'Points';
$_['column_sort_order']         = 'Sort Order';
$_['column_tag']                = 'Product Tags';
$_['column_sku']                = 'SKU';
$_['column_upc']                = 'UPC';
$_['column_ean']                = 'EAN';
$_['column_jan']                = 'JAN';
$_['column_isbn']               = 'ISBN';
$_['column_mpn']                = 'MPN';
$_['column_id']                 = 'ID';
$_['column_manufacturer']       = 'Manufacturer';
$_['column_category']           = 'Category';
$_['column_location']           = 'Location';
$_['column_seo']                = 'SEO Keyword';
$_['column_weight']             = 'Weight';
$_['column_store']              = 'Stores';
$_['column_view_in_store']      = 'View in Store';
$_['column_download']           = 'Downloads';
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $_['error_model']
            ]]></search>
            <add><![CDATA[
$_['error_update']                  = 'Warning: Updating the value failed!';
$_['error_load_data']               = 'Warning: Loading data failed!';
$_['error_load_popup']              = 'Warning: Loading popup data failed!';
$_['error_duplicate_seo_keyword']   = 'Warning: SEO keyword already in use!';
            ]]></add>
        </operation>
    </file>

    <file name="admin/model/catalog/product.php">
        <operation error="log"><!-- Fix to load product images by sort order -->
            <search position="replace"><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "'");]]></search>
            <add><![CDATA[
        if (!$this->config->get('custom_image_titles_status')) {
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "' ORDER BY sort_order ASC");
        } else {
            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "'");
        }
                ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/product_list.tpl">
        <operation error="log"><!-- Fix select filters -->
            <search position="replace" regex="true"><![CDATA[~if \((.*?) != '\*'\) {~]]></search>
            <add><![CDATA[
    if ($1 && $1 != '*') {
            ]]></add>
        </operation>
        <operation error="log">
            <search position="replace"><![CDATA[$('#form input')]]></search>
            <add><![CDATA[$('#form input, #form select')]]></add>
        </operation>
        <operation error="log"><!-- Sort & order fix for filtering -->
            <search position="replace" regex="true"><![CDATA[~url = 'index\.php\?route=(.*?)&token=<\?php echo \$token; \?>';~]]></search>
            <add><![CDATA[url = 'index.php?route=$1&token=<?php echo $token; ?>&sort=<?php echo $sort; ?>&order=<?php echo $order; ?>';]]></add>
        </operation>
    </file>

    <file name="admin/view/template/catalog/*_list.tpl">
        <operation error="skip">
            <search position="replace"><![CDATA[<input type="checkbox" onclick="$('input[name*=\'selected\']').attr('checked', this.checked);" />]]></search>
            <add><![CDATA[<input type="checkbox" onclick="$('input[name*=\'selected\']').attr('checked', this.checked).trigger('change');" />]]></add>
        </operation>
    </file>

    <file name="admin/view/template/sale/*_list.tpl">
        <operation error="skip">
            <search position="replace"><![CDATA[<input type="checkbox" onclick="$('input[name*=\'selected\']').attr('checked', this.checked);" />]]></search>
            <add><![CDATA[<input type="checkbox" onclick="$('input[name*=\'selected\']').attr('checked', this.checked).trigger('change');" />]]></add>
        </operation>
    </file>

    <file name="admin/controller/common/filemanager.php">
        <operation error="skip">
            <search position="replace"><![CDATA[
                $this->response->setOutput($this->model_tool_image->resize(html_entity_decode($this->request->get['image'], ENT_QUOTES, 'UTF-8'), 100, 100));
            ]]></search>
            <add><![CDATA[
            if (isset($this->request->get['size'])) {
                $this->response->setOutput($this->model_tool_image->resize(html_entity_decode($this->request->get['image'], ENT_QUOTES, 'UTF-8'), (int)$this->request->get['size'], (int)$this->request->get['size']));
            } else {
                $this->response->setOutput($this->model_tool_image->resize(html_entity_decode($this->request->get['image'], ENT_QUOTES, 'UTF-8'), 100, 100));
            }
            ]]></add>
        </operation>
    </file>

    <file name="admin/controller/common/header.php">
        <operation>
            <search position="before"><![CDATA[
            $this->render();
            ]]></search>
            <add><![CDATA[
        if ($this->config->get('admin_quick_edit_status') && $this->config->get('aqe_catalog_products_status') && isset($this->session->data['token'])) {
            $this->data['product'] = $this->url->link('catalog/product_ext', 'token=' . $this->session->data['token'], 'SSL');
        }
            ]]></add>
        </operation>
    </file>

    <file name="admin/view/template/common/header.tpl">
        <operation error="log">
            <search position="before"><![CDATA[
            </head>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('admin_quick_edit_status') && ($this->config->get('aqe_alternate_row_colour') || $this->config->get('aqe_row_hover_highlighting'))) { ?>
<style type="text/css">
<?php if ($this->config->get('aqe_alternate_row_colour')) { ?>
table.list tbody tr:not([class~=filter]):nth-child(even) td {background: #F8F8FB !important}
table.list tbody tr:not([class~=filter]).selected_row td {background-color:#ffffde !important}
<?php } ?>
<?php if ($this->config->get('aqe_row_hover_highlighting')) { ?>
table[class=list] tbody tr:not([class~=filter]):hover td {background: #e7efef !important}
table[class=list] tbody tr:not([class~=filter]).selected_row:hover td {background: #ffefde !important}
<?php } ?>
</style>
<?php } ?>
<script type="text/javascript">
$(document).ready(function() {
    $('input[type=checkbox][name^="selected"]').change(function () {
        if ($(this).is(':checked')) {
            $(this).parents('tr').first().addClass('selected_row');
        } else {
            $(this).parents('tr').first().removeClass('selected_row');
        }
    });
});
</script>
            ]]></add>
        </operation>
    </file>

</modification>

<!--
<modification>  - This is the highest level of the file and there can only be one
<id>            - This is the name of the mod. Format: Free form text. (Informational)
<version>       - This is the version of the mod. Format: Number and Decimal (1.0.0) (Informational)
<author>        - This is the author of the mod. Format: Free form text (Informational)
<file>          - This is the name of the file to modify. Requires attribute "name" as relative filename (catalog/controller/product/product.php). There can be multiple
<operation>     - This is the wrapper of the actual operation occuring. There can be multiple operations to the same file.
<search>        - This is the first required step of the operation. Uses an optional attribute "position" set to before|after|replace. replace is default. One per operation. Use CDATA tags to wrap code.
<add>           - This is the second required step of the operation. Uses an optional attribute "trim" set to true|false to trim away whitespace and linebreaks. false is default. One per operation. Location of added data depends on the position of the <search> command. Use CDATA tags to wrap code.
<![CDATA[  ]]>  - These are called CDATA tags and they are used by xml to specify that the data between should not be evaluated.
-->