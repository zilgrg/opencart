<modification>
<id><![CDATA[Paladin SEO Manager]]></id>
<version>2.5.0</version>
<vqmver>1.0.0</vqmver>
<author><![CDATA[ ROMAN TYMKIV http://smartshopbox.com ]]></author>

	
	<file name="catalog/controller/product/product.php">
		<operation> 
			<search position="after"><![CDATA[$this->data['heading_title'] = $product_info['name'];]]></search>
			<add><![CDATA[
				// ssb-inject
				if(isset($product_info['seo_h1']) && $product_info['seo_h1']){
					$this->data['heading_title'] = $product_info['seo_h1'];
				}
				if(isset($product_info['product_custom_title']) && $product_info['product_custom_title'] && $this->config->get('customtitle_status')){
					$this->document->setTitle($product_info['product_custom_title']);
				}elseif((isset($product_info['seo_title']) AND $product_info['seo_title'])){
					$this->document->setTitle($product_info['seo_title']);
				}else{
					$this->document->setTitle($product_info['name']);
				}
				// ssb-inject
			]]></add>
		</operation>
	</file>
	<file name="catalog/model/catalog/product.php">
		<operation>
			<search position="after"><![CDATA[$query->row['product_id'],]]></search>
			<add><![CDATA[
				// ssb-inject
				'seo_title'	=> isset($query->row['seo_title']) ? $query->row['seo_title'] : '',
				'seo_h1'   	=> isset($query->row['seo_h1']) ? $query->row['seo_h1'] : '',
				// ssb-inject
			]]></add>
		</operation>		
	</file>

	
	
	<file name="catalog/controller/product/category.php">
		<operation>
			<search position="after"><![CDATA[$this->data['heading_title'] = $category_info['name'];]]></search>
			<add><![CDATA[
				// ssb-inject
				if(isset($category_info['seo_h1']) && $category_info['seo_h1']){
					$this->data['heading_title'] = $category_info['seo_h1'];
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->document->setDescription($category_info['meta_description']);]]></search>
			<add><![CDATA[
				// ssb-inject
				if(isset($category_info['seo_title']) AND $category_info['seo_title']){
					$this->document->setTitle($category_info['seo_title']);
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$this->document->setDescription($category_info['meta_description']);]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->data['tags'] = array();
				if (isset($category_info['tag']) AND $category_info['tag']) {
					$tags = explode(',', $category_info['tag']);
					
					foreach ($tags as $tag) {
						$this->data['tags'][] = array(
							'tag'  => trim($tag),
							'href' => $this->url->link('product/search', 'tag=' . trim($tag))
						);
					}
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template')]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->language->load('product/product');
				$this->data['text_tags'] = $this->language->get('text_tags');
				// ssb-inject
			]]></add>
		</operation>
	</file>
	<file name="catalog/view/theme/*/template/product/category.tpl">
		<operation>
			<search position="after"><![CDATA[echo $pagination;]]></search>
			<add><![CDATA[
				
				</div>
				<?php if (isset($tags) AND $tags) { ?>
				<div class="tags gen-area gen-tags"><b><?php echo $text_tags; ?></b>
				<?php for ($i = 0; $i < count($tags); $i++) { ?>
				<?php if ($i < (count($tags) - 1)) { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>,
				<?php } else { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>
				<?php } ?>
				<?php } ?>
				<?php } ?>
				
			]]></add>
		</operation>		
	</file>
	
	

	<file name="catalog/controller/product/manufacturer.php">
		<operation>
			<search position="after"><![CDATA[$this->data['heading_title'] = $manufacturer_info['name'];]]></search>
			<add><![CDATA[
				// ssb-inject
				if(isset($manufacturer_info['seo_h1']) && $manufacturer_info['seo_h1']){
					$this->data['heading_title'] = $manufacturer_info['seo_h1'];
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle($manufacturer_info['name']);]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->data['description'] = '';
				if(isset($manufacturer_info['description']))
				$this->data['description'] = html_entity_decode($manufacturer_info['description'], ENT_QUOTES, 'UTF-8');
				$this->document->setDescription($manufacturer_info['meta_description']);
				$this->document->setKeywords($manufacturer_info['meta_keyword']);
				if($manufacturer_info['seo_title']){
					$this->document->setTitle($manufacturer_info['seo_title']);
				}
				// ssb-inject
			]]></add>
		</operation>	
		<operation>
			<search position="before"><![CDATA[$this->document->setTitle($manufacturer_info['name']);]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->data['tags'] = array();
				if (isset($manufacturer_info['tag']) AND $manufacturer_info['tag']) {
					$tags = explode(',', $manufacturer_info['tag']);
					
					foreach ($tags as $tag) {
						$this->data['tags'][] = array(
							'tag'  => trim($tag),
							'href' => $this->url->link('product/search', 'tag=' . trim($tag))
						);
					}
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template')]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->language->load('product/product');
				$this->data['text_tags'] = $this->language->get('text_tags');
				// ssb-inject
			]]></add>
		</operation>	
	</file>
	<file name="catalog/model/catalog/manufacturer.php">
		<operation>
			<search position="before"><![CDATA[return $query->row;]]></search>
			<add><![CDATA[
				// ssb-inject
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "manufacturer m LEFT JOIN " . DB_PREFIX . "manufacturer_to_store m2s ON (m.manufacturer_id = m2s.manufacturer_id) LEFT JOIN " . DB_PREFIX . "manufacturer_description m_d ON (m.manufacturer_id = m_d.manufacturer_id AND m_d.language_id = '" . (int)$this->config->get('config_language_id') . "') WHERE m.manufacturer_id = '" . (int)$manufacturer_id . "' AND m2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");
				// ssb-inject
			]]></add>
		</operation>
			
	</file>
	<file name="catalog/view/theme/*/template/product/manufacturer_info.tpl">
		<operation>
			<search position="after"><![CDATA[echo $heading_title;]]></search>
			<add><![CDATA[
				
				<?php echo $description; ?>
				
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[echo $pagination;]]></search>
			<add><![CDATA[
				
				<?php if (isset($tags) AND $tags) { ?>
				<div class="tags"><b><?php echo $text_tags; ?></b>
				<?php for ($i = 0; $i < count($tags); $i++) { ?>
				<?php if ($i < (count($tags) - 1)) { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>,
				<?php } else { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>
				<?php } ?>
				<?php } ?>
				</div>
				<?php } ?>
				
			]]></add>
		</operation>		
	</file>
	


	<file name="catalog/controller/information/information.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle($information_info['title']);]]></search>
			<add><![CDATA[
				// ssb-inject
				if(isset($information_info['seo_title']) AND $information_info['seo_title']){
					$this->document->setTitle($information_info['seo_title']);
				}
				if(isset($information_info['meta_description'])){
					$this->document->setDescription($information_info['meta_description']);
					$this->document->setKeywords($information_info['meta_keyword']);
					if($information_info['seo_title']){
						$this->document->setTitle($information_info['seo_title']);
					}
				}
				// ssb-inject
			]]></add>
		</operation>	
		<operation>
			<search position="before"><![CDATA[$this->document->setTitle($information_info['title']);]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->data['tags'] = array();
				if (isset($information_info['tag']) AND $information_info['tag']) {
					$tags = explode(',', $information_info['tag']);
					
					foreach ($tags as $tag) {
						$this->data['tags'][] = array(
							'tag'  => trim($tag),
							'href' => $this->url->link('product/search', 'tag=' . trim($tag))
						);
					}
				}
				// ssb-inject
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template')]]></search>
			<add><![CDATA[
				// ssb-inject
				$this->language->load('product/product');
				$this->data['text_tags'] = $this->language->get('text_tags');
				// ssb-inject
			]]></add>
		</operation>	
	</file>
	<file name="catalog/view/theme/*/template/information/information.tpl">
		<operation>
			<search position="before"><![CDATA[$content_bottom;]]></search>
			<add><![CDATA[
				
				<?php if (isset($tags) AND $tags) { ?>
				<div class="tags gen-area gen-tags"><b><?php echo $text_tags; ?></b>
				<?php for ($i = 0; $i < count($tags); $i++) { ?>
				<?php if ($i < (count($tags) - 1)) { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>,
				<?php } else { ?>
				<a href="<?php echo $tags[$i]['href']; ?>"><?php echo $tags[$i]['tag']; ?></a>
				<?php } ?>
				<?php } ?>
				</div>
				<?php } ?>
				
			]]></add>
		</operation>		
	</file>




	<file name="system/library/session.php">
		<operation>
			<search position="before"><![CDATA[$this->data =& $_SESSION;]]></search>
			<add><![CDATA[
			//ssb-xml 
			require_once DIR_CONFIG .'ssb_library/ssb_data.php';
			$ssb_data = ssb_data::getInstance();
			if($ssb_data->getEntityStatus('urls')){
				require_once DIR_CONFIG .'ssb_library/ssb_helper.php';
				$ssb_helper = ssb_helper::getInstance();
				$lang_inURL 	= $ssb_helper->getLangFromUrl();
				if(isset($_SESSION['language']) AND  $_SESSION['language'] != $lang_inURL['code']){
					$_SESSION['language'] = $lang_inURL['code'];
				}elseif(!isset($_SESSION['language'])){
					$_SESSION['language'] = $lang_inURL['code'];
				}
			}
			//ssb-xml	
			]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/common/seo_url.php">
		<operation>
			<search position="after"><![CDATA[index()]]></search>
			<add><![CDATA[
				// ssb-inject -->
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$ssb_data = ssb_data::getInstance();
				if($ssb_data->getEntityStatus('urls')){
					global $vqmod;
					if(isset($vqmod)){
						require_once $vqmod->modCheck(DIR_CONFIG .'ssb_library/catalog/controller/common/ssb_seo_url.php');
					}else{
						require_once VQMod::modCheck(DIR_CONFIG .'ssb_library/catalog/controller/common/ssb_seo_url.php');
					}
					
					$ssb_seo_url = ssb_seo_url::getInstance();
					return $ssb_seo_url->index();
				}
				// ssb-inject -->
			]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/module/language.php">
		<operation>
			<search position="after"><![CDATA[ControllerModuleLanguage extends Controller]]></search>
			<add><![CDATA[
	// ssb-inject -->
	private function clear_link ($link) { // added
		$lang_code = $this->ssb_helper->getArrayLangCode();
		$link = explode("/",$link);
		foreach ($link as $key => $part) {
			if (in_array($part,$lang_code) ) {
				unset($link[$key]);
			}
		}
		$link = implode("/",$link);
		if(substr($link,0,1) == '/') $link = substr($link,1);
		return $link;
	}
	
	private function seo_language($link,$language) { // added 
		include_once DIR_CONFIG .'ssb_library/ssb_helper.php';
		$this->ssb_helper = ssb_helper::getInstance();
			
		$config_lang = $this->ssb_helper->getDefaultLanguage();
		
				
		if (trim($language) == trim($config_lang)) unset($language);
		$url_data = parse_url($link);
		$url_data = $this->ssb_helper->fix_parse_bug($url_data);
		if(isset($url_data['path']))
			$url_data['path'] = $this->clear_link($url_data['path']);
		else $url_data['path'] = '';
		if (strpos('a'.$url_data['scheme'].'a','https') ) $link = $this->config->get('config_ssl');
		else $link = $this->config->get('config_url');	
		if (isset($language) ) $link .= $language.'/';
		if (isset($url_data['path']) ) {
		$temp_path = explode('/',$url_data['path']);
		foreach ($temp_path as $key => $value) {
			if(!empty($value))
			if (strpos($link,$value)) unset($temp_path[$key]);
		}
		$url_data['path'] = implode('/',$temp_path);
		$link .= $url_data['path'];
		}
		if(substr($link,-1) == '/') $link = substr($link,0,-1);
		if (isset($url_data['query']) ) $link .= '?'.$url_data['query'];
		return $link;
	}
	
	private function getNewLink($link, $l_code = ''){
	
		$prepare_parts = parse_url($link);
		
		$path = isset($prepare_parts['path']) ? $prepare_parts['path'] : '';
		
		$parts = $prepare_parts['host'] . $path;
		
		$parts = explode('/', $parts);
		
		foreach ($parts as $part) {

			$part = trim($part);
			if (empty($part) ) continue;
			
			$query2 = $this->db->query("SELECT code FROM " . DB_PREFIX . "language WHERE code = '" . $this->db->escape($part) . "'");
	
			$query = $this->db->query("SELECT query FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($part) . "'");
			
			//echo '$part = '.$part;
			
			if ($query->num_rows) {
				$result = $query->rows[0];
				
				$url = explode('=', $result['query']);

				if ($url[0] == 'product_id') {
					$data['product_id'] = $url[1];
				}
				
				if ($url[0] == 'category_id') {
					if (!isset($data['path'])) {
						$data['path'] = $url[1];
					} else {
						$data['path'] .= '_' . $url[1];
					}
				}	
				
				if ($url[0] == 'manufacturer_id') {
					$data['manufacturer_id'] = $url[1];
				}
				
				if ($url[0] == 'information_id') {
					$data['information_id'] = $url[1];
				}
				if (isset($url[0]) AND !isset($url[1])) { 
					$data['route'] = $url[0];
				}
			} else if(!$query2->num_rows ) {
				$data['route'] = 'error/not_found';	
			}
		}
		
		if (isset($data['product_id'])) {
			$data['route'] = 'product/product';
		} elseif (isset($data['path'])) {
			$data['route'] = 'product/category';
		} elseif (isset($data['manufacturer_id'])) {
			$data['route'] = 'product/manufacturer/info';
		} elseif (isset($data['information_id'])) {
			$data['route'] = 'information/information';
		}
		
		$url_info = parse_url(str_replace('&amp;', '&', $link));
		
		$link = $url_info['scheme'] . '://' . $url_info['host'] . (isset($url_info['port']) ? ':' . $url_info['port'] : '');
		
		if(isset($url_info['query']) AND in_array('route', explode("=", $url_info['query']))){
			$link = $link . $path;
		}
		
		return $this->rewrite($link, $data, isset($url_info['query'])? $url_info['query'] : '', $l_code);
	}

	public function rewrite($link, $data , $query_filter = '', $l_code = '') {
	
		require_once DIR_CONFIG .'ssb_library/ssb_helper.php';
		$this->ssb_helper = ssb_helper::getInstance();
	
		if($l_code){
			$l_code_session = $l_code;
			$l_id_session 	= $this->ssb_helper->getLang_Code_Id($l_code);
		}else{
			$l_code_session = $this->session->data['language'];
			$l_id_session 	= $this->ssb_helper->getLang_Code_Id($l_code_session);	
		}
		
		$url = ''; 

		foreach ($data as $key => $value) {
			if (isset($data['route'])) {
				
				if ($key == 'route') { 
					$sql = "SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = '" . $this->db->escape($value) . "' AND language_id = '". $l_id_session ."'";
					$query = $this->db->query($sql);
					
					if ($query->num_rows) {
						$url .= '/' . $query->row['keyword'];
					}else{
						$sql = "SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = '" . $this->db->escape($value) . "'";
						$query = $this->db->query($sql);
						if ($query->num_rows) {
							$url .= '/' . $query->rows[0]['keyword'];
						}
					}
					continue;
				}

				if (($data['route'] == 'product/product' && $key == 'product_id') || (($data['route'] == 'product/manufacturer/info' || $data['route'] == 'product/product') && $key == 'manufacturer_id') || ($data['route'] == 'information/information' && $key == 'information_id')) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "' AND language_id = '". $l_id_session ."'");
				
					if ($query->num_rows) {
						$url .= '/' . $query->row['keyword'];
						
						unset($data[$key]);
					}					
				} elseif ($key == 'path') {
					$categories = explode('_', $value);
					
					foreach ($categories as $category) {

						$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = 'category_id=" . (int)$category . "' AND language_id = '". $l_id_session ."'");
					
						if ($query->num_rows) {
							$url .= '/' . $query->row['keyword'];
							unset($data[$key]); 
						}
					}
				}
			}
		}
		//echo '$url= '.$url;
		if ($url) {
			unset($data['route']);
		
			$query = '';
		
			if ($data) {
				foreach ($data as $key => $value) {
					$query .= '&' . $key . '=' . $value;
				}
				
				if ($query) {
					$query = '?' . trim($query, '&');
				}
			}

			
			/*super seo */
			
			if($query){
				$query_filter = '&'.$query_filter;
			}else{
				$query_filter = '?'.$query_filter;
			}
			
			$link = $link . $url . $query . $query_filter;
		}elseif($query_filter AND in_array('route', explode("=", $query_filter))){
			$link = $link . '?' . $query_filter;
		}
		
		if (strpos($link,"index.php") ) {
			$link = explode("index.php",$link);
			$link = implode("",$link);
		}
		
		//echo $link;
		
		$link = $this->seo_language($link, $l_code_session);
		return $link;
	}			
	// ssb-inject -->
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->session->data['language'] = $this->request->post['language_code'];]]></search>
			<add><![CDATA[
			// ssb-inject -->
			require_once DIR_CONFIG .'ssb_library/ssb_data.php';
			$this->ssb_data = ssb_data::getInstance();
			
			if($this->ssb_data->getEntityStatus('urls')){
				if (isset($this->request->post['redirect'])) {
					$temp_redirect = $this->getNewLink($this->request->post['redirect']);
				} else {
					$temp_redirect = $this->url->link('common/home','','SSL');
				}
				//echo $temp_redirect;
				//return;
				$this->redirect($temp_redirect);
			}	
			// ssb-inject -->					
			]]></add>
		</operation>	
	</file>	
	<file name="catalog/view/theme/*/template/common/footer.tpl">
		<operation>
			<search position="before"><![CDATA[</body>]]></search>
			<add><![CDATA[

			<?php require_once DIR_CONFIG .'ssb_library/ssb_data.php';
					$this->ssb_data = ssb_data::getInstance();
					$tools = $this->ssb_data->getSetting('tools');
					if($tools){
						if($tools['qr_code']['status'] OR $tools['soc_buttons']['status']){
							$soc_buttons = $tools['soc_buttons'];
							$qr_code = $tools['qr_code'];
							require_once DIR_CONFIG .'ssb_library/catalog/tools/tool.php';
							$this->tool = tool::getInstance();
							$curPageURL = $this->tool->curPageURL();
							$qr_image_path = $this->tool->get_qr($curPageURL);
							$qr_image = "<img class='count' src='" . $qr_image_path . "' />";
							include_once DIR_CONFIG .'ssb_library/catalog/tools/panel_bar.tpl';
						}
					}
			?>
				]]></add>
		</operation>
	</file>

	<file name="catalog/controller/module/language.php">
		<operation>
			<search position="before"><![CDATA[$this->render();]]></search>
			<add><![CDATA[
		// ssb-inject -->
		require_once DIR_CONFIG .'ssb_library/ssb_data.php';
		$this->ssb_data = ssb_data::getInstance();
		$tools = $this->ssb_data->getSetting('tools');
		if($tools['lang_dir_link']['status'] AND $this->ssb_data->getEntityStatus('urls')){
			foreach($this->data['languages'] as &$language){
				$language['href'] = $this->getNewLink($this->data['redirect'], $language['code']);
			}
			$this->template = 'default/template/module/ssb_language.tpl';
		}
		// ssb-inject -->		
				]]></add>
		</operation>		
	</file>
		
	

	<file name="catalog/controller/common/home.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle]]></search>
			<add><![CDATA[
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						$this->document->addLink($this->config->get('config_url'), 'canonical');
					}
				}]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/product/category.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setDescription($category_info['meta_description']);]]></search>
			<add><![CDATA[
				// ssb-inject
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						$canonical = explode('_', $this->request->get['path']);
						$canonical = end($canonical);
						$this->document->addLink($this->url->link('product/category', 'path=' . $canonical ), 'canonical');
					}
				}
				// ssb-inject
			]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/product/manufacturer.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle($manufacturer_info['name']);]]></search>
			<add><![CDATA[
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						if (isset($this->request->get['manufacturer_id'])){
							$canonical = $this->request->get['manufacturer_id'];
							$this->document->addLink($this->url->link('product/manufacturer/info', 'manufacturer_id=' . $canonical), 'canonical');
						}
					}
				}
				]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/information/information.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle($information_info['title']);]]></search>
			<add><![CDATA[
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						if (isset($this->request->get['information_id'])){
							$canonical = $this->request->get['information_id'];
							$this->document->addLink($this->url->link('information/information', 'information_id=' .  $information_id), 'canonical');
						}
					}
				}
				]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/product/special.php">
		<operation>
			<search position="after"><![CDATA[$this->document->setTitle($this->language->get('heading_title'));]]></search>
			<add><![CDATA[
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						$this->document->addLink($this->url->link('product/special'), 'canonical');
					}
				}]]></add>
		</operation>		
	</file>
	<file name="catalog/controller/product/search.php">
		<operation>
			<search position="after"><![CDATA[$this->data['breadcrumbs'] = array();]]></search>
			<add><![CDATA[
				require_once DIR_CONFIG .'ssb_library/ssb_data.php';
				$this->ssb_data = ssb_data::getInstance();
				$tools = $this->ssb_data->getSetting('tools');
				if($tools){
					$canonical = $tools['canonical'];
					if($canonical['status']){
						$this->document->addLink($this->url->link('product/search'), 'canonical');
					}
				}]]></add>
		</operation>		
	</file>



	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="replace" index="1"><![CDATA[$this->response->setOutput($this->render());]]></search>
			<add><![CDATA[
				// ssb-inject
				require_once DIR_CONFIG .'ssb_library/catalog/tools/snipet.php';
				$snipet = snipet::getInstance();
				$this->data['quantity'] = $product_info['quantity'];
				$page = $snipet->insertSnipet($this->render(), $this->data, 'product');
				$this->response->setOutput($page);
				// ssb-inject
			]]></add>
		</operation>	
	</file>
	<file name="catalog/controller/product/category.php">
		<operation>
			<search position="replace" index="1"><![CDATA[$this->response->setOutput($this->render());]]></search>
			<add><![CDATA[
				// ssb-inject
				require_once DIR_CONFIG .'ssb_library/catalog/tools/snipet.php';
				$snipet = snipet::getInstance();
				$page = $snipet->insertSnipet($this->render(), $this->data, 'category');
				$this->response->setOutput($page);
				// ssb-inject
			]]></add>
		</operation>	
	</file>
	<file name="catalog/controller/product/manufacturer.php">
		<operation>
			<search position="replace" index="2"><![CDATA[$this->response->setOutput($this->render());]]></search>
			<add><![CDATA[
				// ssb-inject
				require_once DIR_CONFIG .'ssb_library/catalog/tools/snipet.php';
				$snipet = snipet::getInstance();
				$page = $snipet->insertSnipet($this->render(), $this->data, 'brand');
				$this->response->setOutput($page);
				// ssb-inject
			]]></add>
		</operation>	
	</file>
	<file name="catalog/controller/common/home.php">
		<operation>
			<search position="replace" index="1"><![CDATA[$this->response->setOutput($this->render());]]></search>
			<add><![CDATA[
				// ssb-inject
				require_once DIR_CONFIG .'ssb_library/catalog/tools/snipet.php';
				$snipet = snipet::getInstance();
				$page = $snipet->insertSnipet($this->render(), $this->data, 'home');
				$this->response->setOutput($page);
				// ssb-inject
			]]></add>
		</operation>	
	</file>



	<file name="catalog/view/theme/*/template/common/header.tpl">
		<operation>
			<search position="before"><![CDATA[</head>]]></search>
			<add><![CDATA[
			<?php require_once DIR_CONFIG .'ssb_library/ssb_data.php';
					$this->ssb_data = ssb_data::getInstance();
					$tools = $this->ssb_data->getSetting('tools');
					if($tools){
						if($tools['qr_code']['status'] OR $tools['soc_buttons']['status']){
							include_once DIR_CONFIG .'ssb_library/catalog/tools/panel_bar_head.tpl';
						}

						if($tools['webm_tool']['data']['google']){
							$google_meta = $tools['webm_tool']['data']['google'];
							if ( strpos( $google_meta, 'content' ) ) {
								preg_match( '/content="([^"]+)"/', $google_meta, $match );
								$google_meta = $match[1];
							}
							echo "\n<meta name=\"google-site-verification\" content=\"$google_meta\" />\n";
						}
						
						if($tools['webm_tool']['data']['bing']){
							$bing_meta = $tools['webm_tool']['data']['bing'];
							if ( strpos( $bing_meta, 'content' ) ) {
								preg_match( '/content="([^"]+)"/', $bing_meta, $match );
								$bing_meta = $match[1];
							}
							echo "<meta name=\"msvalidate.01\" content=\"$bing_meta\" />\n";
						}
						
						if($tools['webm_tool']['data']['alexa']){
							$alexaverify = $tools['webm_tool']['data']['alexa'];
							echo "<meta name=\"alexaVerifyID\" content=\"" . htmlspecialchars( $alexaverify, ENT_NOQUOTES, 'UTF-8' ) . "\" />\n";
						}
					}	
			?>
				]]></add>
		</operation>
	</file>

	<file name="catalog/controller/feed/google_sitemap.php">
		<operation>
			<search position="before"><![CDATA[if ($this->config->get('google_sitemap_status'))]]></search>
			<add><![CDATA[
		//ssb-xml 
			require_once DIR_CONFIG .'ssb_library/ssb_data.php';
			$this->ssb_data = ssb_data::getInstance();
			$tools = $this->ssb_data->getSetting('tools');
			if($tools){
				$site_map = $tools['sitemap'];
				if($site_map['status']){
					global $vqmod;
					if(isset($vqmod)){
						require_once $vqmod->modCheck(DIR_CONFIG .'ssb_library/catalog/controller/feed/ssb_site_map.php');
					}else{
						require_once VQMod::modCheck(DIR_CONFIG .'ssb_library/catalog/controller/feed/ssb_site_map.php');
					}
					$ssb_site_map = ssb_site_map::getInstance();
					return $ssb_site_map->index();
				}
			}
		 //ssb-xml 
			]]></add>
		</operation>		
	</file>



	<file name="system/library/config.php">
		<operation>
		<search position="after"><![CDATA[get($key)]]></search>
		<add><![CDATA[
		//ssb-inject
		$seo_store_trigger = array('config_name', 'config_title', 'config_meta_description', 'config_meta_keyword');
		if (in_array($key, $seo_store_trigger)) {
			require_once DIR_CONFIG .'ssb_library/ssb_data.php';
			$this->ssb_data = ssb_data::getInstance();
			$tools = $this->ssb_data->getSetting('tools');
			if($tools  AND isset($tools['seo_store'])){
				$seo_store = $tools['seo_store'];
				if($seo_store['status']){
					$result = $this->ssb_data->getSeoStore($key);
					if($result){
						return $result;
					}
				}
			}
		}
		//ssb-inject
		]]></add>
		</operation>
	</file>
	<file name="catalog/controller/common/home.php">
		<operation>
		<search position="after"><![CDATA[$this->document->setTitle]]></search>
		<add><![CDATA[$this->document->setKeywords($this->config->get('config_meta_keyword'));]]></add>
		</operation>
	</file>

</modification>
